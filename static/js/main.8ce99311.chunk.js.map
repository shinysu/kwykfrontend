{"version":3,"sources":["static/images/clock.png","static/images/idea.png","static/images/send.png","components/Constants.js","utils/jsutils.js","headers/KwykHeader.js","headers/SessionHeader.js","hooks/useFetch.js","components/DisplayAlert.js","components/SelectionButtons.js","screens/SessionSelectionScreen.js","screens/TopicSelectionScreen.js","screens/DisplayTopic.js","headers/TimerHeader.js","hooks/useTimer.js","hooks/usePost.js","screens/ChatBot.js","screens/UserStats.js","components/Tab.js","components/WordCloud.js","headers/TopicHeader.js","screens/Explanations.js","screens/Responses.js","screens/Statistics.js","components/AdminAccessDenied.js","screens/Insights.js","screens/Login.js","screens/Feedback.js","components/PasswordReset.js","components/Page404.js","screens/AdminScreen.js","components/Error.js","components/Routes.js","App.js","index.js","static/images/knowbotpng.png"],"names":["module","exports","tableColors","kwykURL","convertToCamelCase","name","words","split","convertedName","i","length","toUpperCase","substr","Header","props","username","sessionStorage","getItem","topic","utils","className","src","knowbotSVG","alt","DisplayDropDown","history","useHistory","CustomToggle","React","forwardRef","ref","children","onClick","href","e","preventDefault","style","color","backgroundColor","paddingTop","Dropdown","Toggle","as","Menu","size","title","Item","push","pathname","clear","SessionHeader","useFetch","url","defaultResponse","useState","data","setData","a","fetch","res","json","result","isLoading","error","useEffect","getDataFromAPI","DisplayAlert","message","Alert","variant","SelectionButtons","clickedButton","setClickedButton","topics","height","getClickedButton","getSelectedTopic","styling","buttonList","map","index","TopicButton","textColor","buttonColor","key","value","target","DisplaySessions","session","setSession","fetchResponse","constant","sessions_details","sessions","k","subtopic","DisplayMessage","ShowTestLink","getSessionSlug","DisplayButton","sessionname","sessionslug","copySuccess","setCopySuccess","textRef","useRef","basename","window","location","type","placeholder","disabled","id","text","buttonDisplay","display","TopicSelectionScreen","DisplaySubTopics","getSelectedSubTopic","GetSubTopics","subtopics","TopicSelection","setTopic","setSubTopic","DisplayStartButton","DisplayTopic","useLocation","destinationPath","query","setItem","JSON","stringify","TimerHeader","useTimer","mins","secs","seconds","setSeconds","minutes","setMinutes","setTime","time","setInterval","clearInterval","usePost","dataText","requestOptions","method","headers","body","postDataToAPI","ChatBot","DisplayTest","chatMessages","prevWords","parse","ShowTimeHeader","DisplayChat","parseInt","setChatMessages","userInput","setUserInput","actions","addChat","includes","chatList","GetChatMessages","messagesEndRef","current","scrollIntoView","behavior","DisplayForm","getUserInput","input","ShowWelcomeChat","GetWord","ShowHint","DisplayUserInput","textArea","document","querySelector","rows","rowsMin","getCommand","useremail","word","Test","messageText","BotReply","hint","handleClick","ideapng","onChange","onKeyPress","charCode","required","sendlogo","UserReply","CheckStatsAndDisplay","attemptedWords","attemptedCount","skippedWordCount","StatsPage","DisplayStats","UserStats","skippedCount","DisplayScore","RetrySkips","ViewResponses","Tabs","styled","div","tabcolor","Tab","button","active","Content","ShowWordCloud","options","content","allowNumbers","maxWords","stemmer","stopwordsInput","fontSizes","rotations","rotationAngles","padding","background","width","marginLeft","marginRight","TopicHeader","ShowExplanation","initialValue","apiKey","init","plugins","toolbar","menubar","inline","content_style","ShowResponsePage","ResponsesTab","setActive","reload","ShowResponses","Responses","topicUserWords","topicWordsResponses","topicWords","topicTopWords","sort","wordResponses","DisplayWordResponses","topWords","Statistics","totalUsers","totalWords","leastResponse","mostSkips","commonResponseCount","userResponseData","stats","skipsCount","answeredCount","userAnswerCount","topicData","userWords","Object","keys","entries","userEntries","concat","wordArray","occurrences","reduce","obj","getWordFrequency","getStats","getSortedData","userResponse","userData","divisions","userDivisionData","userResponseCount","answerDivisions","Math","round","ansdivpercent","valRange","centPercent","percent","count","range","getResponseHist","statButtons","maxVal","item","open","setOpen","Button","aria-controls","aria-expanded","Collapse","in","DisplayData","ShowProgressBar","statsBar","statData","popover","users","join","Popover","Title","OverlayTrigger","overlay","ProgressBar","now","label","max","min","sortedData","b","n","slice","AdminAccessDenied","DisplayError","Insights","StatisticsTab","urlSplit","filter","ShowInsights","selectedView","setView","ViewSelection","getView","view","DisplayUserData","headerWords","limits","headerData","userDivisions","limitsData","begin","end","getLimits","getHeaderWords","GetTableHeader","GetTableData","titleWord","header","ViewByUsers","ViewByResponses","defaultValue","user","userVal","wordUserCount","getWordResponseCount","tableData","wordCount","wordRow","limit","wordColor","DisplayLogin","sessionPath","DisplayIcon","LoginTab","Login","Redirect","knowbotpng","SignInForm","SignUpForm","email","setEmail","password","setPassword","loginMessage","setLoginMessage","onSubmit","ValidateUser","to","userName","setUserName","CreateNewUser","sessionName","response","is_admin","setSessionStorage","session_name","removeItem","initializeSessionStorage","destination","getDestinationScreen","topicDetail","getTopicFromURL","Feedback","ShowTemplate","serviceID","templateId","variables","emailjs","send","then","console","log","catch","err","sendFeedback","from_name","reply_to","PasswordReset","ResetArea","btnValue","setBtnValue","newPassword","setNewPassword","confirmPassword","setConfirmPassword","pwdMessage","setPwdMessage","ChangePwd","Display404","Page404","AdminScreen","getSelectedSession","Error","Routes","process","path","exact","render","SessionSelectionScreen","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8ce99311.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clock.195b3e8e.png\";","module.exports = __webpack_public_path__ + \"static/media/idea.8c35f5e8.png\";","module.exports = __webpack_public_path__ + \"static/media/send.47d6774c.png\";","//export const username = 'kwyktest@gmail.com'\n//export const username = 'kwykreview@gmail.com'\nexport const greenColor =\"#7bc143\";\nexport const greyColor = \"#edeff2\";\nexport const whiteColor = \"#ffffff\";\nexport const welcomeMessage=\"You will be given a term (a word or a phrase). Please enter as many terms as possible that come to you mind. Separate multiple terms with commas.\"\nexport const tableColors = ['#740000', '#c55b11','#f8aa73', '#b2de83', '#7bc143', '#02b150' ]\nexport const loginTabColor = \"#ffffff\";\nexport const adminTabColor = \"#ffffff\";\nexport const blackColor = \"#000000\";\nexport const darkGrey = \"#959595\";\n\n///URL changes\nexport const kwykURL = \"https://shinykwyk.infoassistants.com/\";\n//export const kwykURL = \"http://ac7c1f0d2149.ngrok.io/\"\nexport const postURL= kwykURL + \"input_custom\";\nexport const loginURL = kwykURL + \"login_custom\";\nexport const pwdResetURL = kwykURL + \"pwd_reset\";\nexport const pwdResetSuccessMsg = 'Your password has been changed! SignIn to continue';\nexport const pwdResetFailedMsg = 'Email id is not registered. Signup with your email id';\nexport const feedbackMessage = 'Hello! you feedback is important to us. Tell us about your experience, issues faced, ideas and suggestions for improvement'\nexport const fbToEmail = 'kwyktest01@gmail.com';\nexport const TINYMCE_APIKEY = \"0h3vsxidv9gzrfe2zafqct55zkg7tfj04dke4pk5j88e3aot\";\nexport const pySkillsTopic = \"python\";\nexport const pySkillsSubTopic = \"python basics\";\n","export function convertToCamelCase(name) {\n  const words = name.split(\" \");\n  let convertedName = \"\";\n  for (let i = 0; i < words.length; i++) {\n    words[i] = words[i][0].toUpperCase() + words[i].substr(1);\n    convertedName = convertedName + \" \" +words[i]\n  }\n  return convertedName;\n}\n","import React from 'react';\nimport '../static/css/header.css';\nimport knowbotSVG from '../static/images/knowbotpng.png';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport * as constant from '../components/Constants'\nimport { useHistory } from \"react-router-dom\";\nimport * as utils from '../utils/jsutils'\n\nfunction Header(props){\n  let session = \"\";\n  let tagline =\"\";\n  let fontSize = \"1em\"\n  let username=\"\";\n  session = sessionStorage.getItem('session_name');\n  if(session === 'undefined'){\n    session = ''\n  }\n  if(sessionStorage.getItem('username')){\n    username = sessionStorage.getItem('username');\n  }\n  if(props.topic){\n    tagline = 'about '+utils.convertToCamelCase(props.topic)\n    fontSize = \"1em\"\n  }\n\n  return(\n    <div className=\"row headercontainer\">\n        <div className=\"col-11\">\n          <div className=\"row window-color\">\n            <div className=\"col-2 headerfont\">\n              <img src={knowbotSVG} className=\"knowbotlogo\" alt=\"logo\" />\n            </div>\n            <div className=\"col-md-6 col-7 headerfont\">\n              <div className=\"row title\">\n                PySkills (Beta-1)\n              </div>\n              <div className=\"row subtitle\">\n                Improve your Python skills\n              </div>\n            </div>\n            <div className=\"col-md-4 col-3 username \">\n              {username}\n            </div>\n          </div>\n        </div>\n        <div className=\"col-1 headerfont\">\n          <DisplayDropDown />\n        </div>\n      </div>\n  );\n}\n\nexport default Header;\n\nfunction DisplayDropDown() {\n  let history = useHistory();\n  function handleLogout() {\n    sessionStorage.clear();\n    history.push({\n      pathname:`/`\n    });\n  }\n  function handleFeedback() {\n      history.push({\n        pathname:`/feedback`\n      });\n    }\n  const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n  <a\n    href=\"\"\n    ref={ref}\n    onClick={e => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    {children}\n    <i className=\"fas fa-ellipsis-v ellipsisbutton\"\n       style={{color:constant.blackColor,\n                backgroundColor: constant.whiteColor,\n                paddingTop: \"2vh\"}}>\n    </i>\n  </a>\n));\n\n  return (\n  <Dropdown style={{backgroundColor: constant.whiteColor}}>\n        <Dropdown.Toggle as={CustomToggle} />\n        <Dropdown.Menu size=\"sm\" title=\"\">\n          <Dropdown.Item href=\"#\" onClick={handleFeedback} className=\"ellipsismenu\">FeedBack</Dropdown.Item>\n          <Dropdown.Item href=\"#\" onClick={handleLogout} className=\"ellipsismenu\">Logout</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n\n  );\n\n}\n","import React from \"react\";\nimport '../static/css/chat.css';\n\nfunction SessionHeader() {\n  let username = '';\n  let session = '';\n  if(sessionStorage.getItem('session_name')){\n    session = sessionStorage.getItem('session_name');\n  }\n  \n  return(\n    <div className=\"row headercontainer\">\n        <div className=\"col-12 userheader\">\n          {session}\n        </div>\n    </div>\n  );\n}\n\nexport default SessionHeader;\n","import { useState, useEffect } from \"react\";\n\nfunction useFetch(url, defaultResponse) {\n  const [data, setData] = useState(defaultResponse);\n  async function getDataFromAPI() {\n    try {\n      const res = await fetch(url);\n      const result = await res.json();\n      let dataList = result;\n      setData({\n        isLoading: false,\n        data: dataList\n      });\n    } catch (e) {\n      setData({\n        isLoading: false,\n        error: e\n      });\n    }\n  }\n\n  useEffect(() => {\n    getDataFromAPI()\n  }, [url]);\n  return data;\n}\n\nexport default useFetch;\n","import React from 'react';\nimport Alert from 'react-bootstrap/Alert'\n\nfunction DisplayAlert(props) {\n  let message = \"\"+props.message;\n  return(\n    <Alert variant='danger' className='alert'>\n        {message}\n    </Alert>\n\n  );\n}\n\nexport default DisplayAlert;\n","import React, {useState} from 'react';\nimport * as constant from '../components/Constants'\nimport '../static/css/contents.css';\nimport * as utils from '../utils/jsutils'\n\nfunction SelectionButtons(props){\n  const [clickedButton, setClickedButton] = useState(\"\");\n  const topics = props.topics;\n  let height = \"30vh\";\n  function getClickedButton(name){\n    props.getSelectedTopic(name);\n    setClickedButton(name);\n  }\n  if (props.styling === \"topics-area\"){\n    if(clickedButton === \"\"){\n      height = \"40vh\";\n    }\n    else {\n      height = \"12vh\";\n    }\n  }\n\n  const buttonList = topics.map((topic, index) =>\n      <TopicButton name={topic} textColor={topic === clickedButton ? constant.whiteColor : constant.blackColor }\n      buttonColor={topic === clickedButton ? constant.darkGrey : constant.greyColor}\n      getClickedButton={getClickedButton} key={index}/>\n  );\n  return (<div className={`${props.styling}`} style={{height:height}}>{buttonList}</div>);\n}\n\nexport default SelectionButtons;\n\nfunction TopicButton(props){\n  function handleClick(e){\n    props.getClickedButton(e.target.value);\n  }\n  return (<button className=\"rounded-pill topic-btn\" value={props.name}\n            style={{color: props.textColor, backgroundColor: props.buttonColor}}\n            onClick={handleClick}> {utils.convertToCamelCase(props.name)}</button>);\n}\n","import React, {useState, useRef} from 'react';\nimport * as constant from '../components/Constants'\nimport useFetch from \"../hooks/useFetch\";\nimport '../static/css/contents.css';\nimport DisplayAlert from '../components/DisplayAlert';\nimport { useHistory } from \"react-router-dom\";\nimport SelectionButtons from '../components/SelectionButtons';\nimport Header from \"../headers/KwykHeader\";\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\n/*function SessionSelectionScreen() {\n  const urlSplit = window.location.href.split(\"/\")\n  const topic = urlSplit[urlSplit.length-2]\n  const subtopic = urlSplit[urlSplit.length-1]\n\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <Header/>\n        <div className=\"sessions\">\n          <div className=\"row topics-div\">\n            <DisplaySessions topic={topic} subtopic={subtopic}\n              styling={\"sessions-area\"}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}*/\n\n\n\nfunction DisplaySessions(props){\n  const [session,setSession] = useState(\"\");\n  function getSelectedSession(data){\n    setSession(data);\n  }\n  const url = constant.kwykURL+\"get/sessions/custom\";\n  const message = \"Please choose your session ...\"\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const sessions_details = fetchResponse.data\n  var sessions = []\n  for(var k in sessions_details){\n    sessions.push(sessions_details[k]['session_name']);\n  }\n  if(props.subtopic){\n    return (\n      <div className=\"subtopics\">\n        <DisplayMessage message={message}/>\n        <SelectionButtons topics={sessions} getSelectedTopic={getSelectedSession}\n          styling={props.styling}/>\n        <ShowTestLink topic={props.topic} subtopic={props.subtopic}\n          session={getSessionSlug(sessions_details,session)}/>\n        <DisplayButton topic={constant.pySkillsTopic} subtopic={props.subtopic}\n          sessionname={session} sessionslug={getSessionSlug(sessions_details,session)}/>\n      </div>\n    );\n  }\n  else{\n    return(\n      <div className=\"subtopics\">\n        <DisplayMessage message=\"\"/>\n      </div>\n    );\n  }\n\n}\n\nexport default DisplaySessions;\n\nfunction DisplayMessage(props){\n  return(\n    <div className=\"info-text\">\n    <br />\n      {props.message}\n    </div>\n  );\n}\n\n\nfunction ShowTestLink(props) {\n  const [copySuccess, setCopySuccess] = useState('');\n  const textRef = useRef(null);\n  const basename = window.location.href.split(\"admin\")[0];\n  let url = '';\n  if(props.session){\n    url  = basename.split('#')[0]+'?session='+props.session\n  }\n  else{\n    url  = basename\n  }\n\n  function handleClick(e) {\n    setCopySuccess('Copied!');\n  };\n\n  return(\n    <div className=\"row testlink\">\n      <div className = \"col-2 testlink\">\n      <label className=\"linklabel\"> Test Link:  </label>\n      </div>\n      <div className = \"col-10 testlink\">\n      <input type=\"text\" ref={textRef} name=\"email\" className=\"linktext\" value={url} placeholder={url}\n       disabled=\"disabled\" id=\"link\"/>\n       <CopyToClipboard text={url}>\n           <button className=\"linkbutton\" onClick={handleClick}>Copy</button>\n       </CopyToClipboard>\n       <span className=\"copytext\">{copySuccess}</span>\n      </div>\n    </div>\n  );\n}\n\nfunction DisplayButton(props){\n  let history = useHistory();\n  let buttonDisplay;\n  if(props.subtopic){\n    buttonDisplay =\"block\";\n  }\n  else{\n    buttonDisplay =\"none\";\n  }\n  function handleClick(e){\n    let pathname = '';\n    if (props.sessionslug !== ''){\n      pathname='/analytics/'+props.subtopic+'/'+props.sessionslug\n    }\n    else{\n      pathname='/analytics/'+props.subtopic\n    }\n    history.push({\n      pathname:pathname\n    });\n\n      //history.push('/'+props.topic+'/'+props.subtopic);\n  }\n  return(\n    <div className='session-btn-div'>\n      <button className=\"stats-button\" value=\"start\"\n        onClick={handleClick} style={{display: buttonDisplay}}>View Statistics</button>\n    </div>\n  );\n}\n\nfunction getSessionSlug(sessions_details,session) {\n  for(var k in sessions_details){\n    if (sessions_details[k]['session_name'] === session){\n      return sessions_details[k]['session_slug'];\n    }\n  }\n  return \"\";\n}\n","import React from 'react';\nimport * as constant from '../components/Constants'\nimport useFetch from \"../hooks/useFetch\";\nimport '../static/css/contents.css';\nimport DisplayAlert from '../components/DisplayAlert';\nimport SelectionButtons from '../components/SelectionButtons';\nimport DisplaySessions from \"./SessionSelectionScreen\";\n\nfunction TopicSelectionScreen(props) {\n  return(\n    <div>\n        <div className=\"topics-div\">\n          <DisplaySubTopics getSelectedSubTopic={props.getSelectedSubTopic}\n            styling={\"topics-area\"}\n          />\n        </div>\n        <div className=\"subtopics-div\">\n          <DisplaySessions subtopic={props.subtopic}\n          styling={\"subtopics-area\"}/>\n        </div>\n      </div>\n  );\n}\n\nexport default TopicSelectionScreen;\n\nfunction DisplayMessage(props){\n  return(\n    <div className=\"info-text\">\n    <br />\n      {props.message}\n    </div>\n  );\n}\n\nfunction DisplaySubTopics(props){\n  return(\n      <div className=\"subtopics\">\n      <DisplayMessage message=\"Please choose a topic ...\"/>\n      <GetSubTopics getSelectedSubTopic={props.getSelectedSubTopic}\n                styling={props.styling}/>\n      </div>\n  );\n}\n\nfunction GetSubTopics(props){\n  const url = constant.kwykURL+\"get/\"+constant.pySkillsTopic+\"/subtopics\";\n\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error}/>\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const subtopics = fetchResponse.data\n  return <SelectionButtons topics={subtopics} getSelectedTopic={props.getSelectedSubTopic} styling={props.styling}/>;\n}\n\n/*function DisplayTopics(props){\n  const url = constant.kwykURL+\"get/topics/custom\";\n  const message = \"Please choose a topic ...\"\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const topics = fetchResponse.data\n  return (\n    <div className=\"subtopics\">\n    <DisplayMessage message={message}/>\n    <SelectionButtons topics={topics} getSelectedTopic={props.getSelectedTopic}\n        styling={props.styling}/>\n    </div>\n  );\n}\n*/\n\n/*function DisplaySubTopics(props){\n  //if(props.topic){\n    return(\n      <div className=\"subtopics\">\n      <DisplayMessage message=\"Please choose a topic ...\"/>\n      <GetSubTopics getSelectedSubTopic={props.getSelectedSubTopic}\n                styling={props.styling}/>\n      </div>\n    );\n  }\n  else{\n    return(\n      <div>\n      <DisplayMessage message=\"\"/>\n      <div className=\"subtopics-area\"></div>\n      </div>\n    );\n  }\n}*/\n","import React, {useState} from 'react';\nimport Header from \"../headers/KwykHeader\";\nimport SessionHeader from \"../headers/SessionHeader\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport '../static/css/contents.css';\nimport TopicSelectionScreen from \"./TopicSelectionScreen\";\n\nfunction DisplayTopic(){\n  let history = useHistory();\n  const location = useLocation();\n  if(sessionStorage.getItem('useremail') == null){\n    const destinationPath = location.pathname\n    history.push({\n      pathname:`/`,\n      query: {destinationPath}\n    });\n    return null;\n  }\n  else{\n    return <TopicSelection/>\n  }\n}\n\nfunction TopicSelection(){\n    const [topic,setTopic] = useState(\"\");\n    const [subtopic,setSubTopic] = useState(\"\");\n    function getSelectedTopic(data){\n      setTopic(data);\n    }\n    function getSelectedSubTopic(data){\n      setSubTopic(data);\n    }\n    return(\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-2\"></div>\n            <div className=\"col-lg-8 non-header\">\n              <Header />\n              <TopicSelectionScreen\n                  getSelectedTopic={getSelectedTopic}\n                  topic={topic}\n                  getSelectedSubTopic={getSelectedSubTopic}\n                  />\n              <DisplayStartButton topic={topic} subtopic={subtopic}/>\n            </div>\n          <div className=\"col-lg-2\"></div>\n        </div>\n      </div>\n\n    );\n}\n\nexport default DisplayTopic;\n\nfunction DisplayStartButton(props){\n  let history = useHistory();\n  let buttonDisplay;\n  if(props.subtopic){\n    buttonDisplay =\"block\";\n  }\n  else{\n    buttonDisplay =\"none\";\n  }\n  function handleClick(e){\n      initializeSessionStorage(props.topic, props.subtopic)\n      history.push({\n        pathname:'/chat/'+props.topic+'/'+props.subtopic,\n      });\n  }\n  return(\n    <button className=\"start-button fixed-bottom\" value=\"start\"\n      onClick={handleClick} style={{display: buttonDisplay}}>Start</button>\n\n  );\n}\n\nfunction initializeSessionStorage(topic, subtopic) {\n  sessionStorage.setItem('topic', topic);\n  sessionStorage.setItem('subtopic', subtopic);\n  sessionStorage.setItem('minutes', 0);\n  sessionStorage.setItem('seconds', 0);\n  sessionStorage.setItem('userResponses', JSON.stringify([]));\n  sessionStorage.setItem('retry', false);\n}\n","import React from 'react';\nimport '../static/css/header.css';\nimport clock from '../static/images/clock.png';\n\n\nfunction TimerHeader(props){\n  const time = props.time;\n  const username = sessionStorage.getItem('username');\n  return(\n    <div className=\"row headercontainer timer-row\">\n      <div className=\"col-8\">\n        {username}\n      </div>\n      <div className=\"col-4\">\n        <img src={clock} className=\"clock-img\" alt=\"logo\" />\n        {time[0]} : {time[1]}\n      </div>\n    </div>\n  );\n}\n\nexport default TimerHeader;\n","import { useState, useEffect } from \"react\";\nimport '../static/css/header.css';\n\nconst useTimer = (mins, secs) => {\n    const [seconds, setSeconds] = useState(secs);\n    const [minutes, setMinutes] = useState(mins);\n    useEffect(() => {\n      const time = setInterval(setTime, 1000);\n        return () => {\n          clearInterval(time);\n          //props.getTime(minutes,seconds);\n        }\n    },[seconds]);\n\n    function setTime(){\n      setSeconds(seconds + 1);\n      if(seconds === 59){\n        setSeconds(0);\n        setMinutes(minutes + 1);\n      }\n    }\n\n    return(\n        [minutes,seconds]\n    );\n}\n\nexport default useTimer;\n","import { useState, useEffect } from \"react\";\n\nfunction usePost(url, dataText, defaultResponse) {\n  const [data, setData] = useState(defaultResponse);\n  const  requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify(dataText)\n  };\n  async function postDataToAPI() {\n    try {\n      const res = await fetch(url, requestOptions);\n      const result = await res.json();\n      setData({\n        isLoading: false,\n        data: result\n      });\n    } catch (e) {\n      setData({\n        isLoading: false,\n        error: e\n      });\n    }\n  }\n\n  useEffect(() => {\n    postDataToAPI()\n  }, [url]);\n  return data;\n}\n\nexport default usePost;\n","import React, {useState, useEffect, useRef} from 'react';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Header from \"../headers/KwykHeader\";\nimport TimerHeader from \"../headers/TimerHeader\";\nimport useTimer from \"../hooks/useTimer\";\nimport ideapng from '../static/images/idea.png';\nimport sendlogo from '../static/images/send.png';\nimport '../static/css/chat.css';\nimport * as constant from '../components/Constants'\nimport usePost from \"../hooks/usePost\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport DisplayAlert from '../components/DisplayAlert';\nimport SessionHeader from \"../headers/SessionHeader\";\n\nvar time;\nvar currentWord = '';\nvar is_retry;\n\nfunction ChatBot(){\n  let history = useHistory();\n  const location = useLocation();\n  if(sessionStorage.getItem('useremail') == null){\n    const destinationPath = location.pathname\n    history.push({\n      pathname:`/`,\n      query: {destinationPath}\n    });\n    return null;\n  }\n  else{\n    return <DisplayTest />\n  }\n}\n\nexport default ChatBot;\n\n\nfunction DisplayTest() {\n  let chatMessages = '';\n  let prevWords = [];\n  if(sessionStorage.getItem('userResponses')){\n    prevWords = JSON.parse(sessionStorage.getItem('userResponses'));\n  }\n  is_retry = false;\n  if(sessionStorage.getItem('retry') === 'true'){\n    is_retry = true;\n    chatMessages=[\"retry\"];\n  }\n  else{\n    chatMessages=[\"welcome\",\"first\"];\n  }\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const topic = sessionStorage.getItem('topic');\n  const username = sessionStorage.getItem('username');\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-2\"></div>\n        <div className=\"col-lg-8 non-header\">\n          <Header topic={topic} username={username}/>\n          <ShowTimeHeader/>\n          <DisplayChat minutes={minutes}\n                     seconds={seconds}\n                     chatMessages={chatMessages}\n                     prevWords={prevWords}\n                     />\n        </div>\n        <div className=\"col-lg-2\"></div>\n      </div>\n    </div>\n  );\n}\n\n\nfunction ShowTimeHeader(){\n  const minutes = parseInt(sessionStorage.getItem('minutes'));\n  const seconds = parseInt(sessionStorage.getItem('seconds'));\n  time=useTimer(minutes, seconds);\n  return '';\n}\n\n\nfunction DisplayChat(props){\n  const [chatMessages, setChatMessages] = useState(props.chatMessages);\n  const [userInput, setUserInput] = useState(\"\");\n  const actions = [\"welcome\",\"first\",\"next\",\"skip\",\"hint\",\"afterinput\",\"retry\"];\n  function getUserInput(input){\n    setUserInput(input);\n  }\n  function addChat(message){\n    if(actions.includes(message)){\n      setChatMessages([...chatMessages,message]);\n    }\n    else{\n      setChatMessages([...chatMessages,message,\"afterinput\"]);\n    }\n  }\n  const chatList = chatMessages.map((message,index) => {\n    return <GetChatMessages message={message} key={index}\n         prevWords={props.prevWords} userInput={userInput} addChat={addChat}/>\n  }\n );\n const messagesEndRef = useRef(null);\n useEffect(() => {\n    messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n  },[chatList]);\n return(\n    <div className=\"chatcolor\">\n      <div className=\"chatarea\">\n      <ul>\n        {chatList}\n        <li><div className=\"scroll-div\" ref={messagesEndRef} /></li>\n      </ul>\n      </div>\n        <DisplayForm addChat={addChat} getUserInput={getUserInput}/>\n    </div>\n  );\n}\n\n\nfunction GetChatMessages(props) {\n  const message = props.message;\n  if(message ===\"welcome\"){\n    return <ShowWelcomeChat />;\n  }else if(message ===\"first\" || message ===\"next\" || message ===\"skip\" ||message ===\"retry\"){\n    return <GetWord addChat={props.addChat} message={message} prevWords={props.prevWords}/>\n  }\n  else if(message ===\"hint\"){\n    return <ShowHint addChat={props.addChat} />\n  }\n  else if(message ===\"afterinput\"){\n    return <GetWord addChat={props.addChat} message={props.userInput} prevWords={props.prevWords}/>\n  }\n  else{\n    return <DisplayUserInput input={message}/>\n  }\n}\n\n\nfunction ShowWelcomeChat(props){\n  const textArea = document.querySelector('textarea');\n  const textRowCount = textArea ? textArea.value.split(\"\\n\").length : 0;\n  const rows = textRowCount + 3;\n  return(\n    <li>\n      <div className=\"row bot\">\n        <TextareaAutosize className=\"botmessage\" rows={rows} value={constant.welcomeMessage} rowsMin={3} disabled/>\n      </div>\n    </li>\n  );\n}\n\n\nfunction GetWord(props){\n  let history = useHistory();\n  const url = constant.postURL;\n  let text = getCommand(props.message);\n  const useremail = sessionStorage.getItem('useremail');\n  const topic = sessionStorage.getItem('topic');\n  const subtopic = sessionStorage.getItem('subtopic');\n  const session = sessionStorage.getItem('session');\n\n  const dataText = { \"text\": text, \"username\": useremail, \"session\":session, \"referrer\":window.location.href};\n  const fetchResponse = usePost(url, dataText, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const word = fetchResponse.data.text;\n  if(word === 'finish_topic'){\n    sessionStorage.setItem('minutes', time[0]);\n    sessionStorage.setItem('seconds', time[1]);\n    history.push({\n      pathname:`/user_stats/${topic}/${subtopic}`\n    });\n  }\n  if (word === 'wrong_command'){\n    history.push({\n      pathname:`/error`\n    });\n  }\n  currentWord = word;\n  let prevWords =props.prevWords;\n  if(prevWords.includes(word)){\n    return <Test word={word} addChat={props.addChat}/>\n  }\n  else{\n    const messageNoun = props.message==='first' ? 'first' : 'next';\n    const messageText = \"Your \" + messageNoun + \" word is '\"+word + \"'\";\n    return (<BotReply message={messageText}  addChat={props.addChat} />);\n  }\n}\n\nfunction Test(props) {\n  useEffect(()=>{\n    props.addChat(\"next\");\n  },[props.word])\n  return <div></div>\n}\n\nfunction ShowHint(props){\n  const url = constant.postURL;\n  const text = '/explain';\n  const useremail = sessionStorage.getItem('useremail');\n  const session = sessionStorage.getItem('session');\n\n  const dataText = { \"text\": text, \"username\": useremail, \"session\": session, \"referrer\":window.location.href}\n  const fetchResponse = usePost(url, dataText, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const hint = fetchResponse.data.text;\n\n  return( <BotReply message={hint} addChat={props.addChat} />);\n}\n\nfunction DisplayForm(props){\n  const [userInput, setUserInput] = useState(\"\");\n  const buttonText = \"Skip\"\n  function handleClick(){\n    if(userInput.length > 0){\n      props.getUserInput(userInput);\n      props.addChat(userInput);\n      setUserInput(\"\");\n      /*updateAttemptedCount();\n      if(is_retry){\n        updateSkippedCount('reduce');\n      }*/\n    }\n  }\n  function handleChange(e){\n    setUserInput(e.target.value);\n  }\n  function handleHint(e){\n    props.addChat(\"hint\");\n  }\n  function handleKeyPress(e){\n    if(e.charCode === 13){\n        e.preventDefault();\n        handleClick();\n    }\n  }\n  function handleSkip(e){\n      props.addChat(\"skip\")\n      /*if(!is_retry){\n        updateSkippedCount('add');\n      }*/\n  }\n\n  return(\n    <div className=\"row input-area chatcolor\">\n      <button className=\"ideabutton\" value=\"start\" onClick={handleHint}>\n        <img src={ideapng} className=\"idealogo\" alt=\"logo\" />\n      </button>\n      <button className=\"skipbutton\" onClick={handleSkip}>{buttonText}</button>\n      <TextareaAutosize className=\"input-text\" value={userInput} onChange={handleChange}\n        onKeyPress={handleKeyPress} required/>\n      <button className=\"sendbutton\" value=\"start\" onClick={handleClick}>\n        <img src={sendlogo} className=\"idealogo\" alt=\"logo\" />\n      </button>\n    </div>\n  );\n}\n\nfunction DisplayUserInput(props){\n  return(\n    <UserReply message={props.input} />\n  )\n}\n\nfunction BotReply(props){\n  const textArea = document.querySelector('textarea');\n  const textRowCount = textArea ? textArea.value.split(\"\\n\").length : 0;\n  const rows = textRowCount + 3;\n  return(\n    <li>\n      <div className=\"row bot\">\n        <TextareaAutosize className=\"botmessage\" rows={rows} value={props.message}\n        rowsMin={3} id=\"bottext\" disabled/>\n      </div>\n    </li>\n );\n}\n\nfunction  UserReply(props){\n  return(\n  <li>\n    <div className=\"row bot\">\n      <TextareaAutosize className=\"usermessage\" value={props.message} rowsMin={3} disabled />\n    </div>\n  </li>);\n}\n\n/*function updateSkippedCount(action) {\n  let skippedCount=parseInt(sessionStorage.getItem('skipped'));\n  action ==='add' ? skippedCount++ : skippedCount-- ;\n  sessionStorage.setItem('skipped', skippedCount);\n}\n\nfunction updateAttemptedCount() {\n  let attemptedCount=parseInt(sessionStorage.getItem('attempted'));\n  attemptedCount++;\n  sessionStorage.setItem('attempted', attemptedCount);\n}\n*/\nfunction getCommand(message){\n  let text;\n  switch(message){\n    case 'skip':\n      text = '/skip';\n      break;\n    case 'first':\n    case 'next':\n      text = '/new';\n      break;\n    case 'retry':\n      text = '/retry';\n      break;\n    default:\n      text = message;\n      break;\n  }\n  return text;\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../headers/KwykHeader\";\nimport TimerHeader from \"../headers/TimerHeader\";\nimport '../static/css/stats.css';\nimport useFetch from \"../hooks/useFetch\";\nimport * as constant from '../components/Constants';\nimport DisplayAlert from '../components/DisplayAlert';\n\nfunction UserStats(){\n  let history = useHistory();\n  const useremail = sessionStorage.getItem('useremail');\n  if(useremail == null){\n    history.push({\n      pathname:`/`\n    });\n    return null;\n  }\n  else{\n    return <CheckStatsAndDisplay useremail={useremail}/>\n  }\n}\n\nfunction CheckStatsAndDisplay(props) {\n  const topic = sessionStorage.getItem('topic');\n  const subtopic = sessionStorage.getItem('subtopic');\n  const url = constant.kwykURL+\"user_attempts_custom/\"+props.useremail+\"/\"+topic+\"/\"+subtopic;\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  let history = useHistory();\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const data = fetchResponse.data;\n  const attemptedWords = data['attempted_words'];\n  const attemptedCount = attemptedWords.length;\n  const totalWords = data['topic_words'];\n  const totalWordCount = totalWords.length;\n  const skippedWordCount = totalWordCount - attemptedCount;\n  sessionStorage.setItem('userResponses',JSON.stringify(attemptedWords));\n  sessionStorage.setItem('skipped', skippedWordCount);\n  sessionStorage.setItem('attempted', attemptedCount);\n  if(skippedWordCount === 0){\n    history.push({\n        pathname:`/view_responses/${topic}/${subtopic}`\n      });\n    return null;\n  }\n  else if(attemptedCount === 0){\n    sessionStorage.setItem('retry', true);\n    history.push({\n        pathname:`/chat/${topic}/${subtopic}`\n      });\n    return null;\n  }\n  else{\n    return <StatsPage topic={topic} subtopic={subtopic}/>\n  }\n}\n\nfunction StatsPage(props){\n  const minutes = parseInt(sessionStorage.getItem('minutes'));\n  const seconds = parseInt(sessionStorage.getItem('seconds'));\n  const username = sessionStorage.getItem('username');\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-2\"></div>\n        <div className=\"col-lg-8 chatcolor\">\n            <Header username={username} />\n            <ShowTimeHeader minutes={minutes} seconds={seconds}/>\n            <DisplayStats minutes={minutes} seconds={seconds} topic={props.topic}\n            subtopic={props.subtopic} />\n        </div>\n        <div className=\"col-lg-2\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserStats;\n\nfunction ShowTimeHeader(props){\n  return '';\n}\n\nfunction DisplayStats(props){\n  const attemptedCount = parseInt(sessionStorage.getItem('attempted'));\n  const skippedCount = parseInt(sessionStorage.getItem('skipped'));\n  return(\n    <div className=\"stats-area\">\n      <DisplayScore minutes={props.minutes} seconds={props.seconds}\n      skippedCount={skippedCount} attemptedCount={attemptedCount}/>\n      <RetrySkips topic={props.topic} subtopic={props.subtopic} skippedCount={skippedCount}/>\n      <ViewResponses topic={props.topic} subtopic={props.subtopic}/>\n    </div>\n  );\n}\n\nfunction RetrySkips(props){\n  let history = useHistory();\n  if(props.skippedCount !== 0){\n    function handleClick(){\n      sessionStorage.setItem('retry', true);\n      history.push({\n        pathname:'/chat/'+props.topic+'/'+props.subtopic\n      });\n    }\n    return(\n      <div className= \"button-area\">\n      <button className=\"retry-button\" value=\"retry\" onClick={handleClick}>Retry Skipped Questions </button>\n      </div>\n    );\n  }\n  else{\n    return(\n      <div></div>\n    );\n  }\n}\n\nfunction ViewResponses(props){\n  let history = useHistory();\n  function handleClick(){\n    history.push({\n    pathname:`/view_responses/${props.topic}/${props.subtopic}`\n    });\n  }\n  return(\n    <div className= \"button-area\">\n    <button className=\"retry-button\" value=\"response\" onClick={handleClick}>See Responses & Explanation</button>\n    </div>\n  );\n}\n\n/*function SwitchTopic(){\n  let history = useHistory();\n  function handleClick(){\n    history.push('/topics')\n  }\n  return(\n    <div className= \"button-area\">\n    <button className=\"retry-button\" value=\"retry\" onClick={handleClick}>Switch Topic</button>\n    </div>\n  );\n}\n*/\nfunction FeedBack(){\n  let history = useHistory();\n  function handleClick(){\n      history.push('/feedback')\n\n  }\n  return(\n    <div className= \"button-area\">\n      <button className=\"retry-button\" value=\"retry\" onClick={handleClick}>Feedback</button>\n    </div>\n  );\n}\n\nfunction DisplayScore(props){\n  return(\n    <div className= \"display-area\">\n      <br />\n      <div className = \"row\">\n        <div className=\"col-12 topic-text center\">\n        You have completed this topic!\n        </div>\n      </div>\n      <div className = \"row\">\n        <div className=\"col-2 darkgrey\"></div>\n        <div className=\"col-4 stat-text left\">\n        #Attempted\n        </div>\n        <div className=\"col-6 topic-text left\">\n        : {props.attemptedCount}\n        </div>\n      </div>\n      <div className = \"row \">\n        <div className=\"col-2 darkgrey\"></div>\n        <div className=\"col-4 stat-text left\">\n        #Skipped\n        </div>\n        <div className=\"col-6 topic-text left\">\n        : {props.skippedCount}\n        </div>\n      </div>\n      <div className = \"row \">\n        <div className=\"col-2 darkgrey\"></div>\n        <div className=\"col-4 stat-text left\">\n        #Time Taken\n        </div>\n        <div className=\"col-6 topic-text left\">\n          : {props.minutes} mins : {props.seconds} secs\n        </div>\n      </div>\n    </div>\n  );\n}\n","import styled from \"styled-components\";\nexport const Tabs = styled.div`\n  overflow: hidden;\n  background: ${props => props.tabcolor};\n  font-family: \"Helvetica\";\n  height: 3em;\n  width:100%;\n`;\n\nexport const Tab = styled.button`\n  border: none;\n  outline: none;\n  cursor: pointer;\n  width: 50%;\n  position: relative;\n  background: ${props => props.tabcolor};\n\n  font-size: 1em;\n  border: ${props => (props.active ? \"1px solid #ccc\" : \"\")};\n  border-bottom: ${props => (props.active ? \"none\" : \"\")};\n  color: ${props => (props.active ? \"#000000\" : \"#959595\")};\n  height: ${props => (props.active ? \"2.6em\" : \"2.6em; top:.4em\")};\n  transition: background-color 0.5s ease-in-out;\n\n  :hover {\n    color: #000000;\n  }\n`;\nexport const Content = styled.div`\n  ${props => (props.active ? \"\" : \"display:none\")}\n`;\n","import React from \"react\";\nimport ReactWordcloud from 'react-wordcloud';\nimport { Resizable } from \"re-resizable\";\n\n\nfunction ShowWordCloud(props) {\n  if(props.data.length > 0){\n    const words = props.data;\n    const options = {\n      content: {\n        allowNumbers: false,\n        maxWords: 50,\n        stemmer: null,\n        stopwordsInput: '',\n        },\n      fontSizes: [10, 60],\n      rotations: 3,\n      rotationAngles: [0, 0],\n      padding: 3,\n      backgroundColor:\"#ffffff\"\n    }\n    const resizeStyle = {\n      background: \"#ede2d5\",\n      width:'90%',\n      height: '100%',\n      marginLeft: '5%',\n      marginRight: '5%'\n    }\n    return (\n      <ReactWordcloud className=\"wordcloud\" options={options} words={words} style={resizeStyle}/>\n    );\n  }\n  else {\n    return <div></div>\n  }\n}\n\nexport default ShowWordCloud;\n","import React from 'react';\nimport * as utils from '../utils/jsutils';\n\n\nfunction TopicHeader(props){\n  const username = sessionStorage.getItem('username');\n  return(\n    <div className=\"row headercontainer grey\">\n      <div className=\"col-12 grey\">\n        <span className=\"topic-label\"> Topic:</span>\n        <span className=\"topic-label\"> {utils.convertToCamelCase(props.subtopic)}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default TopicHeader;\n","import React, { useState } from \"react\";\nimport TopicHeader from \"../headers/TopicHeader\";\nimport { Editor } from '@tinymce/tinymce-react';\nimport * as constant from '../components/Constants';\nimport useFetch from \"../hooks/useFetch\";\nimport DisplayAlert from '../components/DisplayAlert';\n\nfunction ShowExplanation(props) {\n  /*const data = props.data;\n  const topics = data[\"topics\"];\n  const topicWordsResponses = data[\"topic_answers\"];\n  const topicWords = topicWordsResponses[\"topic_words\"];\n  const topicExplanation = topicWordsResponses[\"explanation\"];\n  const topicUserWords = props.topicUserWords;\n  topicWords.sort();\n  const wordExplanations = topicWords.map((word,index)=>{\n    if(word in topicUserWords){\n      return <DisplayExplanation word={word} topicExplanation={topicExplanation} key={index}/>\n    }\n  });\n*/\n  const url = constant.kwykURL+\"explaination_custom\"+\"/\"+props.topic+\"/\"+props.subtopic;\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const data = fetchResponse.data\n  return(\n    <div >\n      <TopicHeader topic={props.topic} subtopic={props.subtopic}/>\n      <div className=\"explanation-area\">\n      <Editor\n       initialValue={data}\n       apiKey= {constant.TINYMCE_APIKEY}\n       disabled={true}\n       init={{\n         plugins: ['noneditable','autoresize'],\n         toolbar: false,\n         menubar: false,\n         inline: true,\n         content_style: 'p { background-color: #ffffff; padding-left: 3px}' + 'ol { background-color: #ffffff; padding:3px; }'+\n         'ul { background-color: #ffffff; padding:3px; }'+'.mce-content-body { background-color: #ffffff }'\n      }} />\n      </div>\n\n    </div>\n  );\n}\n\nexport default ShowExplanation;\n\nfunction DisplayExplanation(props) {\n  const explanations = props.topicExplanation[props.word];\n  return(\n    <div className=\"explain-area\">\n      <label className=\"topicname\">\n        {props.word}\n      </label>\n      <div className=\"row explain-text\">\n        {explanations}\n      </div>\n    </div>\n\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Tabs, Tab, Content } from \"../components/Tab\";\nimport Header from \"../headers/KwykHeader\";\nimport SessionHeader from \"../headers/SessionHeader\";\nimport '../static/css/header.css';\nimport '../static/css/stats.css';\nimport useFetch from \"../hooks/useFetch\";\nimport * as constant from '../components/Constants';\nimport DisplayAlert from '../components/DisplayAlert';\nimport ShowWordCloud from '../components/WordCloud'\nimport ShowExplanation from \"./Explanations\";\nimport * as utils from '../utils/jsutils';\nimport TopicHeader from \"../headers/TopicHeader\";\n\nfunction Responses() {\n  let history = useHistory();\n  if(sessionStorage.getItem('topic') == null){\n    history.push({\n      pathname:`/404`\n    });\n    return null;\n  }\n  else {\n    return <ShowResponsePage />\n  }\n}\n\nfunction ShowResponsePage() {\n  const topic = sessionStorage.getItem('topic');\n  const subtopic = sessionStorage.getItem('subtopic');\n  const username = sessionStorage.getItem('username');\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-2\"></div>\n        <div className=\"col-md-8\">\n            <Header username={username}/>\n            <ResponsesTab topic={topic} subtopic={subtopic} />\n        </div>\n        <div className=\"col-md-2\"></div>\n      </div>\n    </div>\n  );\n}\n\nfunction ResponsesTab(props){\n  const [active, setActive] = useState(0);\n  let history = useHistory();\n  const handleClick = e => {\n    const index = parseInt(e.target.id, 0);\n    if(index === 0){\n      window.location.reload()\n    }\n    if (index !== active) {\n      setActive(index);\n    }\n  };\n  return(\n    <div className=\"tab-color\">\n      <Tabs tabcolor={constant.adminTabColor}>\n        <Tab onClick={handleClick} active={active === 0} id={0} tabcolor={constant.adminTabColor}>\n          Responses\n        </Tab>\n        <Tab onClick={handleClick} active={active === 1} id={1} tabcolor={constant.adminTabColor}>\n          Explanation\n        </Tab>\n      </Tabs>\n      <>\n        <Content active={active === 0}>\n          <ShowResponses topic={props.topic} subtopic={props.subtopic}/>\n        </Content>\n        <Content active={active === 1}>\n          <ShowExplanation topic={props.topic} subtopic={props.subtopic}/>\n        </Content>\n      </>\n    </div>\n  );\n}\nexport default Responses;\n\nfunction ShowResponses(props){\n  const useremail = sessionStorage.getItem('useremail');\n  const url = constant.kwykURL+\"user_stats_custom/\"+useremail+\"/\"+props.topic+\"/\"+props.subtopic;\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const data = fetchResponse.data\n  const topicUserWords = JSON.parse(sessionStorage.getItem('userResponses'));\n  const topicWordsResponses = data[\"topic_answers\"];\n  const topicWords = topicWordsResponses[\"topic_words\"];\n  const topicTopWords = topicWordsResponses[\"top_words\"];\n  topicWords.sort();\n  const wordResponses = topicWords.map((word,index)=>{\n    if(topicUserWords.includes(word)){\n      return <DisplayWordResponses word={word} topicTopWords={topicTopWords} topicUserWords={topicUserWords} key={index}/>\n    }\n  });\n  return(\n    <div >\n      <TopicHeader topic={props.topic} subtopic={props.subtopic}/>\n      <div className= \"responses-area\">\n      <ul className=\"chatcolor\">\n        {wordResponses}\n      </ul>\n      </div>\n      <div className=\"bottom-area\"></div>\n    </div>\n  );\n}\n\n\nfunction DisplayWordResponses(props){\n  const userWords = props.topicUserWords[props.word];\n  const topWords = props.topicTopWords[props.word];\n  return(\n    <div className=\"word-response\">\n    <label className=\"topicname\">{props.word}</label>\n    <ShowWordCloud data={topWords} />\n    </div>\n  );\n}\n\nfunction DisplayWord(props){\n  let words = \"\"\n  if(props.words){\n    words = props.words.split(',');\n  }\n  return(\n    <div>\n    {words ?\n        <div className=\"white\">{words.map((word,index) => <div className=\"white\" key={index}>\n            <label className=\"word\">{word}</label>\n        </div>)}</div>\n        : null}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Collapse from 'react-bootstrap/Collapse';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\nimport '../static/css/admin.css';\nimport ShowWordCloud from '../components/WordCloud'\n\nfunction Statistics(props){\n  return(\n    <div className='stats'>\n      <DisplayStats data={props.data}/>\n    </div>\n  );\n}\n\nexport default Statistics;\n\nfunction DisplayStats(props) {\n  let totalUsers = 0, totalWords = 0;\n  let leastResponse =[];\n  let mostSkips =[];\n  let commonResponseCount =[];\n  let userResponseCount =[];\n  let userResponseData;\n  const stats = getStats(props.data);\n  const answeredCount =stats[\"answeredCount\"];\n  const skipsCount = stats[\"skipsCount\"];\n  commonResponseCount = stats[\"commonResponseCount\"];\n  const userAnswerCount = stats[\"userAnswerCount\"];\n  totalUsers = stats[\"totalUsers\"];\n  totalWords = stats[\"totalWords\"];\n  mostSkips = getSortedData(skipsCount,1); //second arg 1 to sort desc\n  leastResponse = getSortedData(answeredCount,0);\n  const userResponse = getResponseHist(userAnswerCount, totalWords);\n  userResponseData = userResponse[\"userDivisionData\"];\n  userResponseCount = userResponse[\"userResponseCount\"];\n  const displayItems = [\n                  {message:'Common user responses',data:commonResponseCount, maxVal:totalWords,\n                  type:'cloud'},\n                  {message:'Key terms with least responses',data:leastResponse,maxVal:totalUsers,\n                    type:'progress'},\n                  {message:'Key terms with most skips',data:mostSkips,maxVal:totalUsers,\n                type:'progress'},\n                  {message:'Key terms attempted by users',data:userResponseCount,maxVal:totalUsers,\n                  value:userResponseData,type:'progress'}\n                ]\n  const statButtons = displayItems.map((item,index)=>{\n    return <DisplayButton message={item.message} key={index} maxVal={item.maxVal}\n    data={item.data} value={item.value} type={item.type}/>\n  });\n  return(\n    <div className=\"display-stats\">\n    {statButtons}\n    </div>\n  );\n}\n\nfunction DisplayButton(props){\n  const [open, setOpen] = useState(false);\n  return(\n    <div className=\"display-btn\">\n      <Button\n        onClick={() => setOpen(!open)}\n        aria-controls=\"collapse-text\"\n        aria-expanded={open}\n        variant=\"stats\"\n        className=\"btn-stats\"\n      >\n        {props.message}\n      </Button>\n      <Collapse in={open} className=\"stats-data\">\n        <div className=\"chatcolor\">\n          <DisplayData maxVal={props.maxVal} data={props.data} value={props.value} type={props.type}/>\n        </div>\n      </Collapse>\n    </div>\n  );\n}\n\nfunction DisplayData(props) {\n  if(props.type === 'progress'){\n    return <ShowProgressBar maxVal={props.maxVal} data={props.data} value={props.value}/>\n  }\n  else{\n    return <ShowWordCloud maxVal={props.maxVal} data={props.data} />\n  }\n}\n\nfunction ShowProgressBar(props){\n    const data = props.data;\n    const maxVal = props.maxVal==0? 100:props.maxVal;\n    const statsBar = data.map((statData,index)=>{\n        const percent = statData[1];\n        const range = statData[0];\n        let popover;\n        if(props.value){\n          const names = props.value[range];\n          let users = names.join('\\n');\n          popover = (\n            <Popover>\n              <Popover.Title >Users</Popover.Title>\n              <Popover.Content>\n              { users}\n              </Popover.Content>\n            </Popover>\n          );\n        }\n        else{\n            popover = (\n              <Popover> </Popover>\n            );\n        }\n        return (\n          <div className=\"row\">\n            <div className=\"col-sm-4 white\">\n            <label className=\"data-label\"> {statData[0]} </label>\n            </div>\n            <div className=\"col-sm-8 white\">\n            <OverlayTrigger overlay={popover}>\n            <ProgressBar className=\"progress\" now={percent} label={`${percent} `} key={index} max={maxVal} min='0'/>\n            </OverlayTrigger>\n            </div>\n          </div>\n        );\n      });\n    return(\n    <div className=\"statsBar\">\n      {statsBar}\n    </div>\n    );\n}\n\nfunction getStats(data){\n  let skipsCount = {};\n  let answeredCount = {};\n  let wordResponses =[];\n  let userAnswerCount = {};\n  const topicData = data;\n  const words = topicData[\"topic_words\"];\n  const userWords = topicData[\"user_data\"];\n  const totalUsers = Object.keys(userWords).length;\n  const totalWords = words.length;\n  for(var i=0; i < words.length; i++){\n      const word = words[i];\n      skipsCount[word] = 0;\n      answeredCount[word] = 0;\n  }\n  for (i=0; i < words.length; i++){\n      const word = words[i];\n      for(const [key, value] of Object.entries(userWords)){\n        const userEntries = value;\n        if(!Object.keys(userEntries).includes(word)){\n          skipsCount[word] += 1;\n        }\n        else{\n          userAnswerCount[key] = (userAnswerCount[key]||0)+1;\n          answeredCount[word] +=1;\n          wordResponses=wordResponses.concat(userEntries[word].split(\",\"))\n        }\n      }\n    }\n    wordResponses = getWordFrequency(wordResponses);\n    return {\"answeredCount\": answeredCount, \"skipsCount\": skipsCount, \"commonResponseCount\":wordResponses,\n    \"totalUsers\":totalUsers, \"userAnswerCount\":userAnswerCount,\n    \"totalWords\":totalWords}\n}\n\nfunction getWordFrequency(wordArray) {\n  var occurrences = wordArray.reduce(function(obj, index) {\n  obj[index] = (obj[index] || 0) + 1;\n  return obj;\n  }, {});\n  let words = [];\n  for(const [key, value] of Object.entries(occurrences)){\n    words.push({text:key,value:value})\n  }\n  return words;\n}\n\nfunction getSortedData(data,type,count=5){\n  let sortedData = [];\n  for (var word in data) {\n    sortedData.push([word, data[word]]);\n  }\n  sortedData.sort(function(a, b) {\n    if(type === 0){\n      return a[1] - b[1];\n    }\n    else{\n      return b[1] - a[1];\n    }\n  });\n  for(var n=count; n < sortedData.length; n++){\n    if(sortedData[n-1][1] === sortedData[n][1]){\n      count++;\n    }\n    else {\n      break;\n    }\n  }\n  return sortedData.slice(0,count);\n  }\n\nfunction getResponseHist(userData, totalWords) {\n  const divisions = [0, 0.25, 0.5, 0.75, 1];\n  let userDivisionData = {};\n  let userResponseCount =[]\n  //answerDivisions contains split up of word count\n  const answerDivisions = divisions.map((value,index) =>{\n    return `${Math.round(divisions[index] * totalWords)}`\n  });\n  //ansdivpercent = [\"0 - 24\", \"25 - 49\", \"50 - 74\", \"75 - 99\", \"100\"]\n  const ansdivpercent = divisions.map((value,index) =>{\n    let valRange;\n    if(parseInt(value) === 1){\n      valRange = `100%`;\n    }\n    else{\n      valRange = `${value * 100}-${divisions[index + 1]*100 -1}%`\n    }\n    userDivisionData[valRange] =[];\n    return valRange;\n  });\n  for(const [key, value] of Object.entries(userData)){\n    if(value === totalWords){\n      const centPercent = ansdivpercent[ansdivpercent.length - 1];\n      userDivisionData[centPercent].push(key)\n\n    }\n    else{\n      for(let i = 0; i < answerDivisions.length-1; i++){\n        if((value >= answerDivisions[i]) && ((value < answerDivisions[i+1]))){\n          const percent = ansdivpercent[i];\n          userDivisionData[percent].push(key);\n\n        }\n      }\n    }\n  }\n  let count = 0;\n  for(let i=0; i < ansdivpercent.length; i++){\n    const range = ansdivpercent[i];\n    if(userDivisionData[range]){\n      count=userDivisionData[range].length;\n    }\n    userResponseCount.push([range, count]);\n  }\n  return {\"userDivisionData\":userDivisionData, \"userResponseCount\":userResponseCount};\n}\n","import React from 'react';\nimport Header from \"../headers/KwykHeader\";\nfunction AdminAccessDenied() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <Header/>\n        <DisplayError />\n      </div>\n    </div>\n  );\n}\n\nexport default AdminAccessDenied;\n\nfunction DisplayError() {\n  return(\n    <div className='adminerror'>\n       <h4><div className='adminmessage'>Admin Access Denied</div></h4>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Tabs, Tab, Content } from \"../components/Tab\";\nimport Header from \"../headers/KwykHeader\";\nimport '../static/css/header.css';\nimport '../static/css/admin.css';\nimport useFetch from \"../hooks/useFetch\";\nimport * as constant from '../components/Constants'\nimport Statistics from \"./Statistics\";\nimport DisplayAlert from '../components/DisplayAlert';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport AdminAccessDenied from '../components/AdminAccessDenied'\n\nfunction Insights() {\n  let history = useHistory();\n  const location = useLocation();\n\n  if((sessionStorage.getItem('useremail') != null) &&\n      (sessionStorage.getItem('is_admin') === 'true')){\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Header />\n          <StatisticsTab />\n        </div>\n      </div>\n    );\n  }\n  else{\n    if(sessionStorage.getItem('is_admin') === 'false'){\n      return <AdminAccessDenied />\n    }\n    const destinationPath = location.pathname\n    history.push({\n        pathname:`/`,\n        query: {destinationPath}\n      });\n    return null;\n  }\n}\n\nexport default Insights;\n\nfunction StatisticsTab(props){\n  const [active, setActive] = useState(0);\n  const handleClick = e => {\n    const index = parseInt(e.target.id, 0);\n    if (index !== active) {\n      setActive(index);\n    }\n  };\n  let urlSplit = window.location.href.split(\"analytics/\")[1].split('/')\n  urlSplit = urlSplit.filter(item => item);\n  const topic = constant.pySkillsTopic;\n  const subtopic = urlSplit[0];\n  var url = '';\n  if(urlSplit.length > 1){\n    const session = urlSplit[1];\n    url = constant.kwykURL+\"admin/user_data_custom/\"+topic+\"/\"+subtopic+\"/\"+session;\n  }\n  else{\n    url = constant.kwykURL+\"admin/user_data_custom/\"+topic+\"/\"+subtopic;\n  }\n\n  //const url = constant.kwykURL+\"admin/user_data_custom/\";\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const data = fetchResponse.data;\n\n  return(\n    <div className=\"tab-color\">\n      <Tabs tabcolor={constant.adminTabColor}>\n        <Tab onClick={handleClick} active={active === 0} id={0} tabcolor={constant.adminTabColor}>\n          Statistics\n        </Tab>\n        <Tab onClick={handleClick} active={active === 1} id={1} tabcolor={constant.adminTabColor}>\n          Insights\n        </Tab>\n      </Tabs>\n      <>\n        <Content active={active === 0}>\n          <Statistics data={data}/>\n        </Content>\n        <Content active={active === 1}>\n          <ShowInsights data={data}/>\n        </Content>\n      </>\n    </div>\n  );\n}\n\nfunction ShowInsights(props){\n  const [selectedView, setView] = useState(\"user\");\n  function getView(value){\n    setView(value);\n  }\n  const userData = props.data;\n  return(\n    <div className='insightsview'>\n      <ViewSelection getView={getView} view={selectedView}/>\n      <DisplayUserData userData={userData} selectedView={selectedView}/>\n    </div>\n  );\n}\n\nfunction DisplayUserData(props){\n  let headerWords, limits;\n  const data = props.userData;\n  if(data){\n    const headerData = getHeaderWords(data, props.selectedView);\n    headerWords = headerData[\"headerWords\"];\n    limits = headerData[\"limits\"];\n  }\n  return(\n    <div className=\"display-data\">\n      <table className=\"container\">\n        <GetTableHeader selectedView={props.selectedView} headerWords={headerWords}/>\n        <GetTableData data={data} selectedView={props.selectedView} limits={limits}/>\n      </table>\n    </div>\n  );\n}\n\nfunction GetTableHeader(props){\n  let titleWord;\n   if(props.headerWords){\n     if(props.selectedView === \"user\"){\n       titleWord = \"Username\";\n     }\n     else{\n       titleWord = \"Key Terms\";\n     }\n     const header = props.headerWords.map((word,index)=>{\n       return <th className=\"data\" key={index}>{word}</th>\n     });\n     return(\n       <thead>\n         <tr>\n           <th style={{\"minWidth\":\"200px\"}}>{titleWord}</th>\n           {header}\n         </tr>\n      </thead>\n     );\n   }\n   else {\n     return <thead><tr></tr></thead>\n   }\n}\n\nfunction GetTableData(props){\n  let words, userData;\n  if(props.data){\n     words=props.data[\"topic_words\"];\n     userData = props.data[\"user_data\"];\n  }\n  if(props.selectedView === \"user\"){\n    return <ViewByUsers words={words} userData={userData}/>\n  }\n  else{\n    return <ViewByResponses words={words} userData={userData} limits={props.limits}/>\n  }\n}\n\nfunction ViewSelection(props){\n  const [view, setView] = useState(props.view);\n  function handleChange(e){\n    setView(e.target.value);\n    props.getView(e.target.value);\n  }\n  return(\n    <div className=\"view-div\">\n    Choose a view :\n    <select className=\"view-select\" onChange={handleChange} defaultValue={'user'} value={view}>\n      <option value=\"user\">View By Users</option>\n      <option value=\"responses\"> View By Responses </option>)\n    </select>\n    </div>\n  );\n}\n\nfunction getHeaderWords(data, view) {\n  const userWords = data[\"user_data\"];\n  const totalUsers = Object.keys(userWords).length;\n  const divisions = [0, 0.25, 0.5, 0.75, 1];\n  const userDivisions = divisions.map((value,index) =>{\n    return `${Math.round(divisions[index] * totalUsers)}`\n  });\n  let headerWords=[];\n  let limits = [];\n  if(view === \"user\"){\n    headerWords = data[\"topic_words\"];\n  }\n  else{\n    const limitsData = getLimits(totalUsers, userDivisions);\n    headerWords = limitsData['headerWords'];\n    limits = limitsData['limits'];\n  }\n  return {\"headerWords\":headerWords, \"limits\":limits};\n}\n\nfunction ViewByUsers(props){\n    const userData = props.userData;\n    const words = props.words;\n    if(userData){\n      const data = Object.keys(userData).map((user,index)=>{\n      const userVal = userData[user];\n      const userInput = words.map((word,index)=>{\n        if(userVal[word]){\n          return <td style={{backgroundColor:\"#b2de83\"}} key={index}></td>;\n        }\n        else {\n          return <td style={{backgroundColor:\"#c35c14\"}} key={index}></td>;\n        }\n      });\n      return(\n        <tr key={index}>\n          <th className=\"rowheader\">{user}</th>\n          {userInput}\n        </tr>\n      );\n    });\n    return <tbody>{data}</tbody>\n  }\n  else{\n    return <tbody></tbody>\n  }\n}\n\nfunction ViewByResponses(props) {\n  const userData = props.userData;\n  const words = props.words;\n  let wordUserCount = {};\n  if(userData){\n    const data = words.map((word,index)=>{\n        wordUserCount[word] = getWordResponseCount(word, userData);\n    });\n  }\n  const tableData = Object.keys(wordUserCount).map((word, index)=>{\n    const wordCount = wordUserCount[word];\n    const wordRow = props.limits.map((limit, index)=>{\n      let wordColor = \"#ffffff\";\n      if((wordCount >= limit[0]) && (wordCount <= limit[1])){\n        wordColor  = constant.tableColors[index];\n      }\n      return <td style={{backgroundColor:wordColor}} key={index}></td>\n    });\n\n    return (\n      <tr key={index}>\n        <th className='rowheader'>{word}</th>\n        {wordRow}\n      </tr>\n    );\n  });\n  return <tbody>{tableData}</tbody>\n\n}\n\nfunction getWordResponseCount(word, userData){\n  let count = 0;\n  for(const [key, value] of Object.entries(userData)){\n    const userEntries = value;\n    if(Object.keys(userEntries).includes(word)){\n        count++;\n    }\n  }\n  return count;\n}\n\nfunction getLimits(totalUsers, userDivisions){\n  let headerWords=[];\n  let limits = [];\n  if(totalUsers < 5){\n    for(var i=0; i<=totalUsers; i++ ){\n      limits.push([i,i]);\n      headerWords.push(i);\n    }\n  }\n  else{\n    headerWords.push(0);\n    limits.push([0,0])\n    for(let index = 1; index < userDivisions.length; index++){\n      let begin = parseInt(userDivisions[index-1]) + 1;\n      let end = parseInt(userDivisions[index]);\n      if(end === totalUsers){\n        end = end-1;\n      }\n      if(end < begin){\n        break;\n      }\n      if(begin === end){\n        headerWords.push(end);\n        limits.push([end, end]);\n      }\n      else{\n        headerWords.push(`${begin} - ${end}` );\n        limits.push([begin, end]);\n      }\n\n    }\n    headerWords.push(totalUsers);\n    limits.push([totalUsers, totalUsers]);\n  }\n  return {\"headerWords\":headerWords, \"limits\":limits};\n}\n","import React,{useState} from 'react';\nimport knowbotpng from '../static/images/knowbotpng.png';\nimport '../static/css/login.css';\nimport { Tabs, Tab, Content } from \"../components/Tab\";\nimport * as constant from '../components/Constants'\nimport usePost from \"../hooks/usePost\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport Alert from 'react-bootstrap/Alert'\nvar session = \"\"\n\nfunction Login() {\n  const location = useLocation();\n  if (location.query){\n    sessionStorage.setItem('destinationPath', location.query.destinationPath)\n  }\n  if(sessionStorage.getItem('useremail') != null){\n    return <Redirect />;\n  }\n  else{\n    return <DisplayLogin />\n  }\n}\n\nfunction DisplayLogin(){\n  //sessionStorage.clear()\n  const sessionPath = window.location.href.split('?session=')[1]\n  if(typeof(sessionPath) !== 'undefined'){\n    session = sessionPath.split('/')[0]\n  }\n  return(\n    <div className=\"container\">\n      <DisplayIcon />\n      <LoginTab />\n      <DisplayAlert />\n    </div>\n  );\n}\n\nexport default Login;\n\nfunction DisplayIcon() {\n  return(\n    <div className=\"row\">\n        <div className=\"col-lg-2\"></div>\n        <div className=\"col-lg-8 window-color center\">\n          <div className=\"row login\">\n            <div className=\"col-4 window-color\">\n              <img src={knowbotpng} className=\"login-logo\" alt=\"logo\" />\n            </div>\n            <div className=\"col-8 window-color\">\n              <div className=\"row logintitle\">\n                PySkills (Beta-1)\n              </div>\n              <div className=\"row loginsubtitle\">\n                Improve your Python skills\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-2\"></div>\n    </div>\n  );\n}\n\nfunction DisplayTitle() {\n  return(\n    <div className=\"row \">\n        <div className=\"col-lg-2 \"></div>\n        <div className=\"col-lg-8 window-color title\">\n            Microknowledge - Little bits of knowledge\n        </div>\n        <div className=\"col-lg-2 \"></div>\n    </div>\n  );\n}\n\nfunction LoginTab(props){\n  const [active, setActive] = useState(0);\n  const handleClick = e => {\n    const index = parseInt(e.target.id, 0);\n    if (index !== active) {\n      setActive(index);\n    }\n  };\n\n  return(\n    <div className=\"row \">\n      <div className=\"col-lg-2 \"></div>\n        <div className=\"col-lg-8 window-color logintab\">\n    <div className=\"tab-color\">\n      <Tabs tabcolor={constant.loginTabColor}>\n        <Tab onClick={handleClick} active={active === 0} id={0} tabcolor={constant.loginTabColor}>\n          SignIn\n        </Tab>\n        <Tab onClick={handleClick} active={active === 1} id={1} tabcolor={constant.loginTabColor}>\n          SignUp\n        </Tab>\n      </Tabs>\n      <>\n        <Content active={active === 0}>\n          <SignInForm />\n        </Content>\n        <Content active={active === 1}>\n          <SignUpForm />\n        </Content>\n      </>\n    </div>\n    </div>\n    <div className=\"col-lg-2 \"></div>\n</div>\n  );\n}\n\nfunction SignInForm() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginMessage,setLoginMessage] = useState(\"\");\n  function handleSubmit(e) {\n    e.preventDefault();\n    const message = <ValidateUser email={email} password={password}/>\n    setLoginMessage(message);\n    setEmail(\"\")\n    setPassword(\"\")\n  }\n  function handleEmail(e){\n    setEmail(e.target.value);\n  }\n  function handlePassword(e) {\n    setPassword(e.target.value);\n  }\n  return(\n    <form className=\"loginform\" onSubmit={handleSubmit}>\n      <input type=\"text\" name=\"email\" className=\"text\" placeholder=\"email\"\n      value={email} onChange={handleEmail} required/><br/>\n      <input type=\"password\" name=\"password\" className=\"text\" placeholder=\"password\"\n        value={password} onChange={handlePassword} required/><br/>\n      <label className=\"text\">{loginMessage}</label>\n      <input type=\"submit\" value=\"Sign In\" className=\"signin\"/>\n      <Link to='/reset'>\n      <div className='link reset'>Forgot password?</div>\n      </Link>\n    </form>\n  );\n}\n\nfunction SignUpForm() {\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginMessage,setLoginMessage] = useState(\"\");\n  function handleSubmit(e) {\n    e.preventDefault();\n    const message = <CreateNewUser username={userName} email={email} password={password}/>\n    setLoginMessage(message);\n    setUserName(\"\")\n    setEmail(\"\")\n    setPassword(\"\")\n  }\n  function handleUserName(e) {\n    setUserName(e.target.value);\n  }\n  function handleEmail(e){\n    setEmail(e.target.value);\n  }\n  function handlePassword(e) {\n    setPassword(e.target.value);\n  }\n  return(\n    <form className=\"loginform\" onSubmit={handleSubmit}>\n      <input type=\"text\" id=\"username\" name=\"username\" className=\"text\" value={userName}\n        placeholder=\"username\" onChange={handleUserName} required/><br/>\n      <input type=\"text\" name=\"email\" className=\"text\" placeholder=\"email\"\n      value={email} onChange={handleEmail} required/><br/>\n      <input type=\"password\" name=\"password\" className=\"text\" placeholder=\"password\"\n      value={password} onChange={handlePassword} required/><br/>\n      <label className=\"text\">{loginMessage}</label>\n      <input type=\"submit\" value=\"Sign Up\" className=\"signin\"/>\n    </form>\n  );\n}\n\nfunction ValidateUser(props) {\n  const url = constant.loginURL;\n  const location = useLocation()\n  let loginMessage = '';\n  let sessionName = '';\n  const dataText = { \"email\": props.email, \"password\": props.password, \"session\": session, \"action\": \"signin\"}\n  const fetchResponse = usePost(url, dataText, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return <div className=\"window-color\">Loading...</div>;\n  }\n  const response = fetchResponse.data;\n\n  if(response['status'] === \"password mismatch\"){\n    loginMessage = \"Incorrect Password\";\n    sessionStorage.setItem('loginmessage', loginMessage);\n    window.location.reload();\n  }\n  else if(response['status'] === \"user not found\"){\n    loginMessage = \"Email id is not registered!\";\n    sessionStorage.setItem('loginmessage', loginMessage);\n    window.location.reload();\n  }\n  else{\n    loginMessage = \"Signed in Successfully!\";\n    sessionName = response['session_name'];\n    const userName = response['username'];\n    const is_admin = response['is_admin'];\n    setSessionStorage(userName, props.email, session, sessionName, is_admin);\n    return <Redirect />\n  }\n  return(``);\n}\n\nfunction CreateNewUser(props) {\n  const url = constant.loginURL;\n  const location = useLocation()\n  let loginMessage ='';\n  let sessionName = '';\n  const dataText = { \"username\":props.username, \"email\": props.email, \"password\": props.password,\n    \"session\": session, \"action\": \"signup\"}\n  const fetchResponse = usePost(url, dataText, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return <div className=\"window-color\">Loading...</div>;\n  }\n  const response = fetchResponse.data;\n  if (response['status'] === 'inserted'){\n    sessionName = response['session_name'];\n    const is_admin = false;\n    loginMessage = \"Signed Up Successfully!\";\n    setSessionStorage(props.username, props.email, session, sessionName, is_admin);\n    return <Redirect />\n  }\n  else if(response['status'] === 'duplicate'){\n    loginMessage = \"Email id is already registered\"\n    sessionStorage.setItem('loginmessage', loginMessage);\n    window.location.reload();\n  }\n  return(``)\n}\n\nfunction setSessionStorage(username, useremail, session, session_name, is_admin) {\n  sessionStorage.setItem('username', username);\n  sessionStorage.setItem('useremail', useremail);\n  sessionStorage.setItem('is_admin', is_admin);\n  if(session){\n    sessionStorage.setItem('session', session);\n    sessionStorage.setItem('session_name', session_name);\n  }\n  sessionStorage.removeItem('loginmessage');\n\n}\n\nfunction DisplayAlert() {\n  if(sessionStorage.getItem('loginmessage') != null){\n    let message = sessionStorage.getItem('loginmessage')\n    return(\n      <div className=\"row \">\n        <div className=\"col-md-2 \"></div>\n        <div className=\"col-md-8 window-color\">\n        <Alert variant='danger' className='alert'>\n          {message}\n          </Alert>\n        </div>\n        <div className=\"col-md-2 \"></div>\n      </div>\n    );\n  }\n  else {\n    return(\n      <div></div>\n    );\n  }\n}\n\nfunction initializeSessionStorage(topic, subtopic) {\n  sessionStorage.setItem('topic', constant.pySkillsTopic);\n  sessionStorage.setItem('subtopic', constant.pySkillsSubTopic);\n  sessionStorage.setItem('minutes', 0);\n  sessionStorage.setItem('seconds', 0);\n  sessionStorage.setItem('userResponses', JSON.stringify([]));\n  sessionStorage.setItem('retry', false);\n}\n\nfunction getTopicFromURL(destination) {\n  let topic, subtopic;\n  const urlSplit = destination.split('/');\n  if(urlSplit[urlSplit.length - 3] === 'chat'){\n    topic = urlSplit[urlSplit.length - 2]\n    subtopic = urlSplit[urlSplit.length - 1]\n  }\n  return {'topic':topic, 'subtopic': subtopic}\n}\n\nfunction getDestinationScreen(destination) {\n  const urlSplit = destination.split('/');\n  if(urlSplit[urlSplit.length - 1] === 'admin'){\n    return 'admin';\n  }\n  else if(urlSplit[urlSplit.length - 3] === 'chat') {\n    return 'chat';\n  }\n  return null;\n}\n\nfunction Redirect() {\n  let history = useHistory();\n  const location = useLocation()\n  let destination;\n  if(sessionStorage.getItem('destinationPath')){\n    destination = sessionStorage.getItem('destinationPath');\n    sessionStorage.removeItem('destinationPath');\n    const screenname = getDestinationScreen(destination);\n    if (screenname === 'chat'){\n      const topicDetail = getTopicFromURL(destination);\n      const topic = topicDetail['topic'];\n      const subtopic = topicDetail['subtopic'];\n      //initializeSessionStorage(topic, subtopic);\n      initializeSessionStorage()\n    }\n  }\n  else{\n    initializeSessionStorage()\n    destination = '/chat/'+constant.pySkillsTopic+'/'+constant.pySkillsSubTopic\n  }\n  history.push({\n      pathname:destination\n  });\n\n  return null;\n}\n","import React,{useState} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../headers/KwykHeader\";\nimport SessionHeader from \"../headers/SessionHeader\";\nimport '../static/css/feedback.css';\nimport * as constant from '../components/Constants'\nfunction Feedback() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-2\"></div>\n        <div className=\"col-lg-8\">\n          <Header />\n          <ShowTemplate />\n        </div>\n      <div className=\"col-lg-2\"></div>\n    </div>\n  </div>\n  );\n}\nexport default Feedback;\n\nfunction ShowTemplate() {\n  const [userInput, setUserInput] = useState(\"\");\n  const username = sessionStorage.getItem('username');\n  let history = useHistory();\n  function handleChange(e){\n    setUserInput(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const serviceID = 'default_service';\n    const templateId = 'template_09oi0b1';\n    sendFeedback(serviceID,templateId, {message: userInput, from_name:username, reply_to: constant.fbToEmail});\n    setUserInput(\"\");\n    history.push({\n      pathname:`/`\n    });\n  }\n  return(\n    <div >\n    <form className = \"fbarea\" onSubmit={handleSubmit}>\n    <div className=\"fblabel\">{constant.feedbackMessage}</div>\n    <div className=\"fblabel blank\"> Feedback / Issue / Query</div>\n    <textarea className=\"fbtext\" value={userInput} placeholder=\"Type your response here...\" onChange={handleChange}></textarea>\n    <input type=\"submit\" value=\"Submit\" className=\"fbsubmitbtn \"/>\n    </form>\n    </div>\n  );\n}\n\nfunction sendFeedback (serviceID,templateId, variables) {\n window.emailjs.send(\n   serviceID, templateId,\n   variables\n   ).then(res => {\n     console.log('Email successfully sent!')\n   })\n   // Handle errors here however you like, or use a React error boundary\n   .catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\n }\n","import React, {useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../headers/KwykHeader\";\nimport * as constant from '../components/Constants'\nimport usePost from \"../hooks/usePost\";\nimport DisplayAlert from '../components/DisplayAlert'\n\nfunction PasswordReset() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-2\"></div>\n        <div className=\"col-sm-8 chatcolor\">\n            <Header />\n            <br />\n            <ResetArea />\n        </div>\n        <div className=\"col-sm-2\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default PasswordReset;\n\nfunction ResetArea() {\n  const [email, setEmail] = useState(\"\");\n  const [btnValue, setBtnValue] = useState(\"Reset Password\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [pwdMessage,setPwdMessage] = useState(\"\");\n  let history = useHistory();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    let message = '';\n    if(newPassword === confirmPassword){\n      message = <ChangePwd email={email} password={newPassword}/>\n      setPwdMessage(message);\n      setBtnValue(\"Home\")\n      setEmail(\"\")\n      setNewPassword(\"\")\n      setConfirmPassword(\"\")\n    }\n    else {\n      message = \"Password Mismatch\";\n      setPwdMessage(message);\n    }\n  }\n  function handleEmail(e) {\n    setEmail(e.target.value);\n  }\n  function handleOldPassword(e) {\n    setNewPassword(e.target.value);\n  }\n  function handleNewPassword(e) {\n    setConfirmPassword(e.target.value);\n  }\n  function handleClick(e) {\n    if(e.target.value === 'Home'){\n      sessionStorage.removeItem('loginmessage');\n      history.push({\n          pathname:`/`,\n      });\n    }\n  }\n  return(\n    <div className=\"pwdreset\">\n    <form className=\"loginform\" onSubmit={handleSubmit}>\n      <label className=\"pwdtext\"> Change your password here...</label>\n      <input type=\"text\" name=\"email\" className=\"text\" placeholder=\"email id\"\n      value={email} onChange={handleEmail} required/><br/>\n      <input type=\"password\" name=\"password\" className=\"text\" placeholder=\"new password\"\n        value={newPassword} onChange={handleOldPassword} required/><br/>\n      <input type=\"password\" name=\"password\" className=\"text\" placeholder=\"confirm password\"\n          value={confirmPassword} onChange={handleNewPassword} required/><br/>\n      <label className=\"pwdmessage\">{pwdMessage}</label>\n      <input type=\"submit\" value={btnValue} className=\"pwdbtn\" onClick={handleClick}/>\n      </form>\n    </div>\n  );\n}\n\nfunction ChangePwd(props) {\n  const url = constant.pwdResetURL;\n  let message = '';\n  const dataText = { \"email\": props.email, \"password\": props.password}\n  const fetchResponse = usePost(url, dataText, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const response = fetchResponse.data;\n  if (response['status'] === 'success'){\n        message = constant.pwdResetSuccessMsg;\n  }\n  else{\n     message = constant.pwdResetFailedMsg;\n  }\n  return(`${message}`);\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from \"../headers/KwykHeader\";\nimport SessionHeader from \"../headers/SessionHeader\";\nimport '../static/css/error.css';\n\nfunction Page404() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-2\"></div>\n        <div className=\"col-sm-8 chatcolor\">\n            <Header />\n            <Display404 />\n        </div>\n        <div className=\"col-sm-2\"></div>\n      </div>\n    </div>\n  );\n}\nfunction Display404() {\n  return(\n    <div className='error'>\n       <h2><div className='message'>Error: 404 - Page not found</div></h2>\n       <Link to='/'>\n       <div className='link'>Home</div>\n       </Link>\n    </div>\n  );\n}\n\nexport default Page404;\n","import React, {useState} from 'react';\nimport Header from \"../headers/KwykHeader\";\nimport '../static/css/contents.css';\nimport TopicSelectionScreen from \"./TopicSelectionScreen\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport AdminAccessDenied from '../components/AdminAccessDenied';\nimport * as constant from '../components/Constants';\n\nfunction AdminScreen() {\n  let history = useHistory();\n  const location = useLocation();\n\n  if((sessionStorage.getItem('useremail') != null) && (sessionStorage.getItem('is_admin') === 'true')){\n        return <TopicSelection />\n  }\n  else{\n    if(sessionStorage.getItem('is_admin') === 'false'){\n      return <AdminAccessDenied />\n    }\n    const destinationPath = location.pathname\n    history.push({\n        pathname:`/`,\n        query: {destinationPath}\n      });\n    return null;\n  }\n}\nexport default AdminScreen;\n\nfunction TopicSelection(){\n    const [session,setSession] = useState(\"\");\n    const [subtopic,setSubTopic] = useState(\"\");\n\n    function getSelectedSubTopic(data){\n      setSubTopic(data);\n    }\n    function getSelectedSession(data){\n      setSession(data);\n    }\n    return(\n      <div className=\"container\">\n        <div className=\"row\">\n          <Header/>\n          <div className=\"topics-subtopics\">\n            <TopicSelectionScreen\n              getSelectedSession={getSelectedSession}\n              topic={constant.pySkillsTopic}\n              subtopic={subtopic}\n              getSelectedSubTopic={getSelectedSubTopic}\n              />\n\n          </div>\n        </div>\n      </div>\n    );\n}\n\n/*function DisplayButton(props){\n  let history = useHistory();\n  let buttonDisplay;\n  //const [buttonDisplay, setButtonDisplay] = useState(\"none\");\n  if(props.subtopic){\n    buttonDisplay =\"block\";\n  }\n  else{\n    buttonDisplay =\"none\";\n  }\n  function handleClick(e){\n      history.push({\n        pathname:'/admin/'+props.topic+'/'+props.subtopic\n      });\n  }\n  return(\n    <button className=\"next-button\" value=\"start\"\n      onClick={handleClick} style={{display: buttonDisplay}}>Next >> </button>\n  );\n}*/\n","import React from 'react';\nimport Header from \"../headers/KwykHeader\";\nimport SessionHeader from \"../headers/SessionHeader\";\nimport '../static/css/error.css';\n\nfunction Error() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-2\"></div>\n        <div className=\"col-lg-8 chatcolor\">\n            <Header />\n            <DisplayError />\n        </div>\n        <div className=\"col-lg-2\"></div>\n      </div>\n    </div>\n  );\n}\nfunction DisplayError() {\n  return(\n    <div className='error'>\n       <h4><div className='message'>Wrong topic or subtopic. Please check your URL!</div></h4>\n    </div>\n  );\n}\n\nexport default Error;\n","import React, {useState} from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport DisplayTopic from '../screens/DisplayTopic';\nimport ChatBot from '../screens/ChatBot'\nimport UserStats from '../screens/UserStats'\nimport Responses from '../screens/Responses'\nimport Insights from '../screens/Insights'\nimport Login from \"../screens/Login\";\nimport Feedback from \"../screens/Feedback\";\nimport PasswordReset from './PasswordReset';\nimport Page404 from './Page404';\nimport AdminScreen from \"../screens/AdminScreen\"\nimport SessionSelectionScreen from \"../screens/SessionSelectionScreen\"\nimport Error from './Error';\n\nfunction Routes(){\n    return(\n      <Router  basename={`${process.env.PUBLIC_URL}/`}>\n      <Switch>\n      <Route path=\"/\" exact render={() => <Login/>} />\n      <Route path=\"/topics\" exact render={() => <DisplayTopic/>} />\n      <Route path=\"/reset\" exact render={() => <PasswordReset/>} />\n      <Route path=\"/chat/:topic/:subtopic\" render={() => <ChatBot/>} />\n      <Route path=\"/user_stats/:topic/:subtopic\" render={() => <UserStats/>} />\n      <Route path=\"/view_responses/:topic/:subtopic\" render={() => <Responses/>} />\n      <Route path=\"/feedback\" render={() => <Feedback/>} />\n      <Route path=\"/admin\" exact render={() => <AdminScreen/>} />\n      <Route path=\"/admin/:topic/:subtopic\" exact render={() => <SessionSelectionScreen/>} />\n      <Route path=\"/analytics/:subtopic\" render={() =>\n                <Insights />} />\n      <Route path=\"/error\" render={() => <Error/>} />\n      <Route render={() => <Page404/>} />\n      </Switch>\n      </Router>\n    );\n}\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Routes from './components/Routes';\n\nfunction App() {\n  return(\n    <Router >\n      <div className=\"App\">\n        <Routes />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/knowbotpng.c964294f.png\";"],"sourceRoot":""}