{"version":3,"sources":["static/images/clock.png","static/images/idea.png","static/images/send.png","components/Constants.js","utils/jsutils.js","headers/KwykHeader.js","headers/SessionHeader.js","hooks/useFetch.js","components/DisplayAlert.js","components/SelectionButtons.js","screens/SessionSelectionScreen.js","screens/TopicSelectionScreen.js","screens/DisplayTopic.js","headers/TimerHeader.js","hooks/useTimer.js","hooks/usePost.js","hooks/useGetAttempted.js","screens/ChatBot.js","screens/UserStats.js","components/Tab.js","components/WordCloud.js","headers/TopicHeader.js","screens/Responses.js","screens/Statistics.js","components/AdminAccessDenied.js","screens/Insights.js","screens/Login.js","screens/Feedback.js","screens/About.js","components/PasswordReset.js","components/Page404.js","screens/AdminScreen.js","components/Error.js","components/FeedbackThanks.js","screens/Explanations.js","components/Routes.js","App.js","index.js","static/images/knowbotpng.png"],"names":["module","exports","tableColors","kwykURL","convertToCamelCase","name","words","split","convertedName","i","length","toUpperCase","substr","Header","props","username","sessionStorage","getItem","topic","utils","className","src","knowbotSVG","alt","DisplayDropDown","history","useHistory","CustomToggle","React","forwardRef","ref","children","onClick","href","e","preventDefault","style","color","backgroundColor","paddingTop","Dropdown","Toggle","as","Menu","size","title","Item","push","pathname","clear","SessionHeader","useFetch","url","defaultResponse","useState","data","setData","a","fetch","res","json","result","isLoading","error","useEffect","getDataFromAPI","DisplayAlert","message","Alert","variant","SelectionButtons","clickedButton","setClickedButton","topics","height","getClickedButton","getSelectedTopic","styling","buttonList","map","index","TopicButton","textColor","buttonColor","key","value","target","DisplaySessions","session","setSession","fetchResponse","constant","sessions_details","sessions","k","subtopic","DisplayMessage","ShowTestLink","getSessionSlug","DisplayButton","sessionname","sessionslug","copySuccess","setCopySuccess","textRef","useRef","basename","window","location","type","placeholder","disabled","id","text","buttonDisplay","display","TopicSelectionScreen","DisplaySubTopics","getSelectedSubTopic","GetSubTopics","subtopics","TopicSelection","setTopic","setSubTopic","DisplayStartButton","DisplayTopic","useLocation","destinationPath","query","setItem","JSON","stringify","TimerHeader","useTimer","mins","secs","seconds","setSeconds","minutes","setMinutes","setTime","time","setInterval","clearInterval","usePost","dataText","requestOptions","method","headers","body","postDataToAPI","useGetAttempted","useremail","attemptedWords","attemptedCount","totalWordCount","skippedWordCount","skippedWords","Object","values","filter","el","includes","getUniqueSkips","totalCount","ChatBot","DisplayTest","chatMessages","prevWords","parse","parseInt","skippedCount","ShowTimeHeader","DisplayChat","setChatMessages","userInput","setUserInput","actions","addChat","chatList","GetChatMessages","messagesEndRef","current","scrollIntoView","behavior","DisplayForm","getUserInput","input","ShowWelcomeChat","GetWord","ShowHint","DisplayUserInput","textArea","document","querySelector","rows","rowsMin","getCommand","messageText","word","Test","BotReply","hint","handleClick","ideapng","confirm","onChange","onKeyPress","charCode","required","sendlogo","UserReply","CheckStatsAndDisplay","StatsPage","DisplayStats","UserStats","DisplayScore","RetrySkips","ViewResponses","ViewExplanation","Tabs","styled","div","tabcolor","Tab","button","active","Content","ShowWordCloud","options","content","allowNumbers","maxWords","stemmer","stopwordsInput","fontSizes","rotations","rotationAngles","padding","background","width","marginLeft","marginRight","TopicHeader","ShowResponsePage","ShowResponses","Responses","topicUserWords","topicWordsResponses","topicWords","topicTopWords","sort","wordResponses","DisplayWordResponses","topWords","slice","Statistics","totalUsers","totalWords","leastResponse","mostSkips","commonResponseCount","userResponseData","stats","skipsCount","answeredCount","userAnswerCount","topicData","userWords","users","userEntries","keys","concat","wordArray","occurrences","reduce","obj","entries","getWordFrequency","getStats","getSortedData","userResponse","userData","divisions","userDivisionData","userResponseCount","answerDivisions","Math","round","ansdivpercent","valRange","centPercent","percent","count","range","getResponseHist","statButtons","maxVal","item","open","setOpen","Button","aria-controls","aria-expanded","Collapse","in","DisplayData","b","ShowProgressBar","statsBar","statData","popover","join","Popover","Title","OverlayTrigger","overlay","ProgressBar","now","label","max","min","sortedData","n","AdminAccessDenied","DisplayError","Insights","StatisticsTab","setActive","urlSplit","ShowInsights","selectedView","setView","ViewSelection","getView","view","ShowLegends","DisplayUserData","headerWords","limits","headerData","userDivisions","limitsData","begin","parseFloat","end","getLimits","getHeaderWords","GetTableHeader","GetTableData","titleWord","header","ViewByUsers","ViewByResponses","defaultValue","user","userVal","wordUserCount","getWordResponseCount","tableData","wordCount","wordRow","limit","wordColor","ViewByUsersLegend","class","ViewByResponsesLegend","DisplayLogin","sessionPath","DisplayIcon","LoginTab","Login","Redirect","knowbotpng","SignInForm","SignUpForm","email","setEmail","password","setPassword","loginMessage","setLoginMessage","onSubmit","ValidateUser","to","userName","setUserName","CreateNewUser","sessionName","response","reload","is_admin","setSessionStorage","session_name","removeItem","initializeSessionStorage","destination","getDestinationScreen","topicDetail","getTopicFromURL","Feedback","ShowTemplate","serviceID","templateId","variables","emailjs","send","then","console","log","catch","err","sendFeedback","from_name","reply_to","About","ShowAboutUs","PasswordReset","ResetArea","btnValue","setBtnValue","newPassword","setNewPassword","confirmPassword","setConfirmPassword","pwdMessage","setPwdMessage","ChangePwd","Display404","Page404","AdminScreen","getSelectedSession","Error","ThankYouMessage","FeedbackThanks","Explanation","ShowExplanationPage","ShowExplanation","initialValue","apiKey","init","plugins","toolbar","menubar","inline","content_style","Routes","process","path","exact","render","SessionSelectionScreen","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e88cd4e5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clock.195b3e8e.png\";","module.exports = __webpack_public_path__ + \"static/media/idea.8c35f5e8.png\";","module.exports = __webpack_public_path__ + \"static/media/send.47d6774c.png\";","//export const username = 'kwyktest@gmail.com'\n//export const username = 'kwykreview@gmail.com'\nexport const greenColor =\"#7bc143\";\nexport const greyColor = \"#edeff2\";\nexport const whiteColor = \"#ffffff\";\nexport const welcomeMessage=\"You will be given a term (a word or a phrase). Please enter as many terms as possible that come to you mind. Separate multiple terms with commas.\"\nexport const tableColors = ['#740000', '#c55b11','#f8aa73', '#b2de83', '#7bc143', '#02b150' ]\nexport const loginTabColor = \"#ffffff\";\nexport const adminTabColor = \"#ffffff\";\nexport const blackColor = \"#000000\";\nexport const darkGrey = \"#959595\";\nexport const userInsightGreen = \"#b2de83\";\nexport const userInsightRed = \"#c55b11\";\n\n///URL changes\n//export const kwykURL = \"http://localhost:3000/\";\nexport const kwykURL = \"https://shinykwyk.infoassistants.com/\";\n//export const kwykURL = \"http://ac7c1f0d2149.ngrok.io/\"\nexport const postURL= kwykURL + \"input_custom\";\nexport const loginURL = kwykURL + \"login_custom\";\nexport const pwdResetURL = kwykURL + \"pwd_reset\";\nexport const pwdResetSuccessMsg = 'Your password has been changed! SignIn to continue';\nexport const pwdResetFailedMsg = 'Email id is not registered. Signup with your email id';\nexport const feedbackMessage = 'Hello! you feedback is important to us. Tell us about your experience, issues faced, ideas and suggestions for improvement'\nexport const fbToEmail = 'kwyktest01@gmail.com';\nexport const shiny = 'shiny.suresh@gmail.com';\nexport const TINYMCE_APIKEY = \"0h3vsxidv9gzrfe2zafqct55zkg7tfj04dke4pk5j88e3aot\";\nexport const pySkillsTopic = \"python\";\nexport const pySkillsSubTopic = \"python basics\";\nexport const aboutUs1 = \"PySkills is a simple app to test your conceptual knowledge of Python. It will work like this: \\n1. You will be shown a Python concept or term. \\n2. You can reply with one or more terms that come to your mind. \\n3. If you do not know the term, you can skip it.\"\nexport const aboutUs2 = \"The beginner assessment has 20 terms. Please answer as many as you can. At the end of the test, you can: \\n 1. Attempt skipped terms. \\n 2. Use the link associated with a skipped term and learn more.\"\n","export function convertToCamelCase(name) {\n  const words = name.split(\" \");\n  let convertedName = \"\";\n  for (let i = 0; i < words.length; i++) {\n    words[i] = words[i][0].toUpperCase() + words[i].substr(1);\n    convertedName = convertedName + \" \" +words[i]\n  }\n  return convertedName;\n}\n","import React from 'react';\nimport '../static/css/header.css';\nimport knowbotSVG from '../static/images/knowbotpng.png';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport * as constant from '../components/Constants'\nimport { useHistory } from \"react-router-dom\";\nimport * as utils from '../utils/jsutils'\n\nfunction Header(props){\n  let session = \"\";\n  let tagline =\"\";\n  let fontSize = \"1em\"\n  let username=\"\";\n  session = sessionStorage.getItem('session_name');\n  if(session === 'undefined'){\n    session = ''\n  }\n  if(sessionStorage.getItem('username')){\n    username = sessionStorage.getItem('username');\n  }\n  if(props.topic){\n    tagline = 'about '+utils.convertToCamelCase(props.topic)\n    fontSize = \"1em\"\n  }\n\n  return(\n    <div className=\"row headercontainer\">\n        <div className=\"col-11\">\n          <div className=\"row window-color\">\n            <div className=\"col-2 headerfont\">\n              <img src={knowbotSVG} className=\"knowbotlogo\" alt=\"logo\" />\n            </div>\n            <div className=\"col-md-6 col-7 headerfont\">\n              <div className=\"row title\">\n                PySkills (Beta-1)\n              </div>\n              <div className=\"row subtitle\">\n                Improve your Python skills\n              </div>\n            </div>\n            <div className=\"col-md-4 col-3 username \">\n              {username}\n            </div>\n          </div>\n        </div>\n        <div className=\"col-1 headerfont\">\n          <DisplayDropDown />\n        </div>\n      </div>\n  );\n}\n\nexport default Header;\n\nfunction DisplayDropDown() {\n  let history = useHistory();\n  function handleLogout() {\n    sessionStorage.clear();\n    history.push({\n      pathname:`/`\n    });\n  }\n  function handleFeedback() {\n      history.push({\n        pathname:`/feedback`\n      });\n    }\n  function handleAbout() {\n    history.push({\n      pathname:`/about`\n    });\n  }\n  const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n  <a\n    href=\"\"\n    ref={ref}\n    onClick={e => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    {children}\n    <i className=\"fas fa-ellipsis-v ellipsisbutton\"\n       style={{color:constant.blackColor,\n                backgroundColor: constant.whiteColor,\n                paddingTop: \"2vh\"}}>\n    </i>\n  </a>\n));\n\n  return (\n  <Dropdown style={{backgroundColor: constant.whiteColor}}>\n        <Dropdown.Toggle as={CustomToggle} />\n        <Dropdown.Menu size=\"sm\" title=\"\">\n          <Dropdown.Item href=\"#\" onClick={handleAbout} className=\"ellipsismenu\">About Us</Dropdown.Item>\n          <Dropdown.Item href=\"#\" onClick={handleFeedback} className=\"ellipsismenu\">FeedBack</Dropdown.Item>\n          <Dropdown.Item href=\"#\" onClick={handleLogout} className=\"ellipsismenu\">Logout</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n\n  );\n\n}\n","import React from \"react\";\nimport '../static/css/chat.css';\n\nfunction SessionHeader() {\n  let username = '';\n  let session = '';\n  if(sessionStorage.getItem('session_name')){\n    session = sessionStorage.getItem('session_name');\n  }\n  \n  return(\n    <div className=\"row headercontainer\">\n        <div className=\"col-12 userheader\">\n          {session}\n        </div>\n    </div>\n  );\n}\n\nexport default SessionHeader;\n","import { useState, useEffect } from \"react\";\n\nfunction useFetch(url, defaultResponse) {\n  const [data, setData] = useState(defaultResponse);\n  async function getDataFromAPI() {\n    try {\n      const res = await fetch(url);\n      const result = await res.json();\n      let dataList = result;\n      setData({\n        isLoading: false,\n        data: dataList\n      });\n    } catch (e) {\n      setData({\n        isLoading: false,\n        error: e\n      });\n    }\n  }\n\n  useEffect(() => {\n    getDataFromAPI()\n  }, [url]);\n  return data;\n}\n\nexport default useFetch;\n","import React from 'react';\nimport Alert from 'react-bootstrap/Alert'\n\nfunction DisplayAlert(props) {\n  let message = \"\"+props.message;\n  return(\n    <Alert variant='danger' className='alert'>\n        {message}\n    </Alert>\n\n  );\n}\n\nexport default DisplayAlert;\n","import React, {useState} from 'react';\nimport * as constant from '../components/Constants'\nimport '../static/css/contents.css';\nimport * as utils from '../utils/jsutils'\n\nfunction SelectionButtons(props){\n  const [clickedButton, setClickedButton] = useState(\"\");\n  const topics = props.topics;\n  let height = \"30vh\";\n  function getClickedButton(name){\n    props.getSelectedTopic(name);\n    setClickedButton(name);\n  }\n  if (props.styling === \"topics-area\"){\n    if(clickedButton === \"\"){\n      height = \"40vh\";\n    }\n    else {\n      height = \"12vh\";\n    }\n  }\n\n  const buttonList = topics.map((topic, index) =>\n      <TopicButton name={topic} textColor={topic === clickedButton ? constant.whiteColor : constant.blackColor }\n      buttonColor={topic === clickedButton ? constant.darkGrey : constant.greyColor}\n      getClickedButton={getClickedButton} key={index}/>\n  );\n  return (<div className={`${props.styling}`} style={{height:height}}>{buttonList}</div>);\n}\n\nexport default SelectionButtons;\n\nfunction TopicButton(props){\n  function handleClick(e){\n    props.getClickedButton(e.target.value);\n  }\n  return (<button className=\"rounded-pill topic-btn\" value={props.name}\n            style={{color: props.textColor, backgroundColor: props.buttonColor}}\n            onClick={handleClick}> {utils.convertToCamelCase(props.name)}</button>);\n}\n","import React, {useState, useRef} from 'react';\nimport * as constant from '../components/Constants'\nimport useFetch from \"../hooks/useFetch\";\nimport '../static/css/contents.css';\nimport DisplayAlert from '../components/DisplayAlert';\nimport { useHistory } from \"react-router-dom\";\nimport SelectionButtons from '../components/SelectionButtons';\nimport Header from \"../headers/KwykHeader\";\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\n/*function SessionSelectionScreen() {\n  const urlSplit = window.location.href.split(\"/\")\n  const topic = urlSplit[urlSplit.length-2]\n  const subtopic = urlSplit[urlSplit.length-1]\n\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <Header/>\n        <div className=\"sessions\">\n          <div className=\"row topics-div\">\n            <DisplaySessions topic={topic} subtopic={subtopic}\n              styling={\"sessions-area\"}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}*/\n\n\n\nfunction DisplaySessions(props){\n  const [session,setSession] = useState(\"\");\n  function getSelectedSession(data){\n    setSession(data);\n  }\n  const url = constant.kwykURL+\"get/sessions/custom\";\n  const message = \"Please choose your session ...\"\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const sessions_details = fetchResponse.data\n  var sessions = []\n  for(var k in sessions_details){\n    sessions.push(sessions_details[k]['session_name']);\n  }\n  if(props.subtopic){\n    return (\n      <div className=\"subtopics\">\n        <DisplayMessage message={message}/>\n        <SelectionButtons topics={sessions} getSelectedTopic={getSelectedSession}\n          styling={props.styling}/>\n        <ShowTestLink topic={props.topic} subtopic={props.subtopic}\n          session={getSessionSlug(sessions_details,session)}/>\n        <DisplayButton topic={constant.pySkillsTopic} subtopic={props.subtopic}\n          sessionname={session} sessionslug={getSessionSlug(sessions_details,session)}/>\n      </div>\n    );\n  }\n  else{\n    return(\n      <div className=\"subtopics\">\n        <DisplayMessage message=\"\"/>\n      </div>\n    );\n  }\n\n}\n\nexport default DisplaySessions;\n\nfunction DisplayMessage(props){\n  return(\n    <div className=\"info-text\">\n    <br />\n      {props.message}\n    </div>\n  );\n}\n\n\nfunction ShowTestLink(props) {\n  const [copySuccess, setCopySuccess] = useState('');\n  const textRef = useRef(null);\n  const basename = window.location.href.split(\"admin\")[0];\n  let url = '';\n  if(props.session){\n    url  = basename.split('#')[0]+'?session='+props.session+'/';\n  }\n  else{\n    url  = basename\n  }\n\n  function handleClick(e) {\n    setCopySuccess('Copied!');\n  };\n\n  return(\n    <div className=\"row testlink\">\n      <div className = \"col-2 testlink\">\n      <label className=\"linklabel\"> Test Link:  </label>\n      </div>\n      <div className = \"col-10 testlink\">\n      <input type=\"text\" ref={textRef} name=\"email\" className=\"linktext\" value={url} placeholder={url}\n       disabled=\"disabled\" id=\"link\"/>\n       <CopyToClipboard text={url}>\n           <button className=\"linkbutton\" onClick={handleClick}>Copy</button>\n       </CopyToClipboard>\n       <span className=\"copytext\">{copySuccess}</span>\n      </div>\n    </div>\n  );\n}\n\nfunction DisplayButton(props){\n  let history = useHistory();\n  let buttonDisplay;\n  if(props.subtopic){\n    buttonDisplay =\"block\";\n  }\n  else{\n    buttonDisplay =\"none\";\n  }\n  function handleClick(e){\n    let pathname = '';\n    if (props.sessionslug !== ''){\n      pathname='/analytics/'+props.subtopic+'/'+props.sessionslug\n    }\n    else{\n      pathname='/analytics/'+props.subtopic\n    }\n    history.push({\n      pathname:pathname\n    });\n\n      //history.push('/'+props.topic+'/'+props.subtopic);\n  }\n  return(\n    <div className='session-btn-div'>\n      <button className=\"stats-button\" value=\"start\"\n        onClick={handleClick} style={{display: buttonDisplay}}>View Statistics</button>\n    </div>\n  );\n}\n\nfunction getSessionSlug(sessions_details,session) {\n  for(var k in sessions_details){\n    if (sessions_details[k]['session_name'] === session){\n      return sessions_details[k]['session_slug'];\n    }\n  }\n  return \"\";\n}\n","import React from 'react';\nimport * as constant from '../components/Constants'\nimport useFetch from \"../hooks/useFetch\";\nimport '../static/css/contents.css';\nimport DisplayAlert from '../components/DisplayAlert';\nimport SelectionButtons from '../components/SelectionButtons';\nimport DisplaySessions from \"./SessionSelectionScreen\";\n\nfunction TopicSelectionScreen(props) {\n  return(\n    <div>\n        <div className=\"topics-div\">\n          <DisplaySubTopics getSelectedSubTopic={props.getSelectedSubTopic}\n            styling={\"topics-area\"}\n          />\n        </div>\n        <div className=\"subtopics-div\">\n          <DisplaySessions subtopic={props.subtopic}\n          styling={\"subtopics-area\"}/>\n        </div>\n      </div>\n  );\n}\n\nexport default TopicSelectionScreen;\n\nfunction DisplayMessage(props){\n  return(\n    <div className=\"info-text\">\n    <br />\n      {props.message}\n    </div>\n  );\n}\n\nfunction DisplaySubTopics(props){\n  return(\n      <div className=\"subtopics\">\n      <DisplayMessage message=\"Please choose a topic ...\"/>\n      <GetSubTopics getSelectedSubTopic={props.getSelectedSubTopic}\n                styling={props.styling}/>\n      </div>\n  );\n}\n\nfunction GetSubTopics(props){\n  const url = constant.kwykURL+\"get/\"+constant.pySkillsTopic+\"/subtopics\";\n\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error}/>\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const subtopics = fetchResponse.data\n  return <SelectionButtons topics={subtopics} getSelectedTopic={props.getSelectedSubTopic} styling={props.styling}/>;\n}\n\n/*function DisplayTopics(props){\n  const url = constant.kwykURL+\"get/topics/custom\";\n  const message = \"Please choose a topic ...\"\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const topics = fetchResponse.data\n  return (\n    <div className=\"subtopics\">\n    <DisplayMessage message={message}/>\n    <SelectionButtons topics={topics} getSelectedTopic={props.getSelectedTopic}\n        styling={props.styling}/>\n    </div>\n  );\n}\n*/\n\n/*function DisplaySubTopics(props){\n  //if(props.topic){\n    return(\n      <div className=\"subtopics\">\n      <DisplayMessage message=\"Please choose a topic ...\"/>\n      <GetSubTopics getSelectedSubTopic={props.getSelectedSubTopic}\n                styling={props.styling}/>\n      </div>\n    );\n  }\n  else{\n    return(\n      <div>\n      <DisplayMessage message=\"\"/>\n      <div className=\"subtopics-area\"></div>\n      </div>\n    );\n  }\n}*/\n","import React, {useState} from 'react';\nimport Header from \"../headers/KwykHeader\";\nimport SessionHeader from \"../headers/SessionHeader\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport '../static/css/contents.css';\nimport TopicSelectionScreen from \"./TopicSelectionScreen\";\n\nfunction DisplayTopic(){\n  let history = useHistory();\n  const location = useLocation();\n  if(sessionStorage.getItem('useremail') == null){\n    const destinationPath = location.pathname\n    history.push({\n      pathname:`/`,\n      query: {destinationPath}\n    });\n    return null;\n  }\n  else{\n    return <TopicSelection/>\n  }\n}\n\nfunction TopicSelection(){\n    const [topic,setTopic] = useState(\"\");\n    const [subtopic,setSubTopic] = useState(\"\");\n    function getSelectedTopic(data){\n      setTopic(data);\n    }\n    function getSelectedSubTopic(data){\n      setSubTopic(data);\n    }\n    return(\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-2\"></div>\n            <div className=\"col-lg-8 non-header\">\n              <Header />\n              <TopicSelectionScreen\n                  getSelectedTopic={getSelectedTopic}\n                  topic={topic}\n                  getSelectedSubTopic={getSelectedSubTopic}\n                  />\n              <DisplayStartButton topic={topic} subtopic={subtopic}/>\n            </div>\n          <div className=\"col-lg-2\"></div>\n        </div>\n      </div>\n\n    );\n}\n\nexport default DisplayTopic;\n\nfunction DisplayStartButton(props){\n  let history = useHistory();\n  let buttonDisplay;\n  if(props.subtopic){\n    buttonDisplay =\"block\";\n  }\n  else{\n    buttonDisplay =\"none\";\n  }\n  function handleClick(e){\n      initializeSessionStorage(props.topic, props.subtopic)\n      history.push({\n        pathname:'/chat/'+props.topic+'/'+props.subtopic,\n      });\n  }\n  return(\n    <button className=\"start-button fixed-bottom\" value=\"start\"\n      onClick={handleClick} style={{display: buttonDisplay}}>Start</button>\n\n  );\n}\n\nfunction initializeSessionStorage(topic, subtopic) {\n  sessionStorage.setItem('topic', topic);\n  sessionStorage.setItem('subtopic', subtopic);\n  sessionStorage.setItem('minutes', 0);\n  sessionStorage.setItem('seconds', 0);\n  sessionStorage.setItem('userResponses', JSON.stringify([]));\n  sessionStorage.setItem('retry', false);\n}\n","import React from 'react';\nimport '../static/css/header.css';\nimport clock from '../static/images/clock.png';\n\n\nfunction TimerHeader(props){\n  const time = props.time;\n  const username = sessionStorage.getItem('username');\n  return(\n    <div className=\"row headercontainer timer-row\">\n      <div className=\"col-8\">\n        {username}\n      </div>\n      <div className=\"col-4\">\n        <img src={clock} className=\"clock-img\" alt=\"logo\" />\n        {time[0]} : {time[1]}\n      </div>\n    </div>\n  );\n}\n\nexport default TimerHeader;\n","import { useState, useEffect } from \"react\";\nimport '../static/css/header.css';\n\nconst useTimer = (mins, secs) => {\n    const [seconds, setSeconds] = useState(secs);\n    const [minutes, setMinutes] = useState(mins);\n    useEffect(() => {\n      const time = setInterval(setTime, 1000);\n        return () => {\n          clearInterval(time);\n          //props.getTime(minutes,seconds);\n        }\n    },[seconds]);\n\n    function setTime(){\n      setSeconds(seconds + 1);\n      if(seconds === 59){\n        setSeconds(0);\n        setMinutes(minutes + 1);\n      }\n    }\n\n    return(\n        [minutes,seconds]\n    );\n}\n\nexport default useTimer;\n","import { useState, useEffect } from \"react\";\n\nfunction usePost(url, dataText, defaultResponse) {\n  const [data, setData] = useState(defaultResponse);\n  const  requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify(dataText)\n  };\n  async function postDataToAPI() {\n    try {\n      const res = await fetch(url, requestOptions);\n      const result = await res.json();\n      setData({\n        isLoading: false,\n        data: result\n      });\n    } catch (e) {\n      setData({\n        isLoading: false,\n        error: e\n      });\n    }\n  }\n\n  useEffect(() => {\n    postDataToAPI()\n  }, [url]);\n  return data;\n}\n\nexport default usePost;\n","import React from \"react\";\nimport * as constant from '../components/Constants';\nimport DisplayAlert from '../components/DisplayAlert';\nimport useFetch from \"../hooks/useFetch\";\n\nfunction useGetAttempted(useremail) {\n  const topic = sessionStorage.getItem('topic');\n  const subtopic = sessionStorage.getItem('subtopic');\n  const url = constant.kwykURL+\"user_attempts_custom/\"+useremail+\"/\"+topic+\"/\"+subtopic;\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const data = fetchResponse.data;\n  const attemptedWords = data['attempted_words'];\n  const attemptedCount = attemptedWords.length;\n  const totalWords = data['topic_words'];\n  const totalWordCount = totalWords.length;\n  const skippedWords = data['skipped_words'];\n  const skippedWordCount = getUniqueSkips(attemptedWords,skippedWords).length;\n  sessionStorage.setItem('userResponses',JSON.stringify(attemptedWords));\n  sessionStorage.setItem('skipped', skippedWordCount);\n  sessionStorage.setItem('attempted', attemptedCount);\n  sessionStorage.setItem('totalWordCount', totalWordCount);\n}\n\nexport default useGetAttempted;\n\nfunction getUniqueSkips(attemptedWords,skippedWords) {\n  skippedWords = Object.values(skippedWords).filter( ( el ) => !Object.values(attemptedWords).includes( el ) );\n  return skippedWords;\n}\n","import React, {useState, useEffect, useRef} from 'react';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Header from \"../headers/KwykHeader\";\nimport TimerHeader from \"../headers/TimerHeader\";\nimport useTimer from \"../hooks/useTimer\";\nimport ideapng from '../static/images/idea.png';\nimport sendlogo from '../static/images/send.png';\nimport '../static/css/chat.css';\nimport * as constant from '../components/Constants'\nimport usePost from \"../hooks/usePost\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport DisplayAlert from '../components/DisplayAlert';\nimport SessionHeader from \"../headers/SessionHeader\";\nimport useGetAttempted from \"../hooks/useGetAttempted\";\n\nvar time;\nvar currentWord = '';\nvar is_retry;\nvar totalCount = 0;\n\nfunction ChatBot(){\n  let history = useHistory();\n  const location = useLocation();\n  if(sessionStorage.getItem('useremail') == null){\n    const destinationPath = location.pathname\n    history.push({\n      pathname:`/`,\n      query: {destinationPath}\n    });\n    return null;\n  }\n  else{\n    return <DisplayTest />\n  }\n}\n\nexport default ChatBot;\n\n\nfunction DisplayTest() {\n  let chatMessages = '';\n  let prevWords = [];\n  is_retry = false;\n  if(sessionStorage.getItem('retry') === 'true'){\n    is_retry = true;\n    chatMessages=[\"retry\"];\n  }\n  else{\n    chatMessages=[\"welcome\",\"first\"];\n  }\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const topic = sessionStorage.getItem('topic');\n  const username = sessionStorage.getItem('username');\n  const useremail = sessionStorage.getItem('useremail');\n  useGetAttempted(useremail);\n  if(sessionStorage.getItem('userResponses')){\n    prevWords = JSON.parse(sessionStorage.getItem('userResponses'));\n  }\n  const attemptedCount = parseInt(sessionStorage.getItem('attempted'));\n  const skippedCount = parseInt(sessionStorage.getItem('skipped'));\n  totalCount = attemptedCount + skippedCount\n\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-2\"></div>\n        <div className=\"col-lg-8 non-header\">\n          <Header topic={topic} username={username}/>\n          <ShowTimeHeader/>\n          <DisplayChat minutes={minutes}\n                     seconds={seconds}\n                     chatMessages={chatMessages}\n                     prevWords={prevWords}\n                     totalCount={totalCount}\n                     />\n        </div>\n        <div className=\"col-lg-2\"></div>\n      </div>\n    </div>\n  );\n}\n\n\nfunction ShowTimeHeader(){\n  const minutes = parseInt(sessionStorage.getItem('minutes'));\n  const seconds = parseInt(sessionStorage.getItem('seconds'));\n  time=useTimer(minutes, seconds);\n  return '';\n}\n\n\nfunction DisplayChat(props){\n  const [chatMessages, setChatMessages] = useState(props.chatMessages);\n  const [userInput, setUserInput] = useState(\"\");\n  const actions = [\"welcome\",\"first\",\"next\",\"skip\",\"skipall\",\"hint\",\"afterinput\",\"retry\"];\n  function getUserInput(input){\n    setUserInput(input);\n  }\n  function addChat(message){\n    if(actions.includes(message)){\n      setChatMessages([...chatMessages,message]);\n    }\n    else{\n      setChatMessages([...chatMessages,message,\"afterinput\"]);\n    }\n  }\n  const chatList = chatMessages.map((message,index) => {\n    return <GetChatMessages message={message} key={index}\n         prevWords={props.prevWords} userInput={userInput} addChat={addChat}/>\n  }\n );\n const messagesEndRef = useRef(null);\n useEffect(() => {\n    messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n  },[chatList]);\n return(\n    <div className=\"chatcolor\">\n      <div className=\"chatarea\">\n      <ul>\n        {chatList}\n        <li><div className=\"scroll-div\" ref={messagesEndRef} /></li>\n      </ul>\n      </div>\n        <DisplayForm addChat={addChat} getUserInput={getUserInput}/>\n    </div>\n  );\n}\n\n\nfunction GetChatMessages(props) {\n  const message = props.message;\n  if(message ===\"welcome\"){\n    return <ShowWelcomeChat />;\n  }else if(message ===\"first\" || message ===\"next\" || message ===\"skip\" || message ===\"skipall\" ||message ===\"retry\"){\n    return <GetWord addChat={props.addChat} message={message} prevWords={props.prevWords}/>\n  }\n  else if(message ===\"hint\"){\n    return <ShowHint addChat={props.addChat} />\n  }\n  else if(message ===\"afterinput\"){\n    return <GetWord addChat={props.addChat} message={props.userInput} prevWords={props.prevWords}/>\n  }\n  else{\n    return <DisplayUserInput input={message}/>\n  }\n}\n\n\nfunction ShowWelcomeChat(props){\n  const textArea = document.querySelector('textarea');\n  const textRowCount = textArea ? textArea.value.split(\"\\n\").length : 0;\n  const rows = textRowCount + 3;\n  return(\n    <li>\n      <div className=\"row bot\">\n        <TextareaAutosize className=\"botmessage\" rows={rows} value={constant.welcomeMessage} rowsMin={3} disabled/>\n      </div>\n    </li>\n  );\n}\n\n\nfunction GetWord(props){\n\n  let history = useHistory();\n  const url = constant.postURL;\n  let text = getCommand(props.message);\n  const useremail = sessionStorage.getItem('useremail');\n  const topic = sessionStorage.getItem('topic');\n  const subtopic = sessionStorage.getItem('subtopic');\n  const session = sessionStorage.getItem('session');\n  const dataText = { \"text\": text, \"username\": useremail, \"session\":session, \"referrer\":window.location.href};\n  const fetchResponse = usePost(url, dataText, {isLoading: true, data: null, error: null});\n\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const word = fetchResponse.data.text;\n  if(word === 'finish_topic'){\n    sessionStorage.setItem('minutes', time[0]);\n    sessionStorage.setItem('seconds', time[1]);\n    history.push({\n      pathname:`/user_stats/${topic}/${subtopic}`\n    });\n  }\n  if (word === 'wrong_command'){\n    history.push({\n      pathname:`/error`\n    });\n  }\n  currentWord = word;\n  let prevWords =props.prevWords;\n  if(prevWords.includes(word)){\n    return <Test word={word} addChat={props.addChat} message={props.message}/>\n  }\n  else{\n    let messageText;\n    if (props.message==='first'){\n      if (totalCount > 0){\n        const wordText = totalCount===1 ? \"term\" : \"terms\";\n        messageText = \"You have already attempted/skipped \"+ totalCount +\" \"+wordText+\"\\n Your next term is '\"+word + \"'\";\n      }\n      else{\n        messageText = \"Your first term is '\"+word + \"'\";\n      }\n    }\n    else{\n      messageText = \"Your next term is '\"+word + \"'\";\n    }\n    return (<BotReply message={messageText}  addChat={props.addChat} />);\n  }\n}\n\nfunction Test(props) {\n  useEffect(()=>{\n    if (props.message==='first'){\n      props.addChat(\"first\");\n    }\n    else{\n      props.addChat(\"next\");\n    }\n  },[props.word])\n  return <div></div>\n}\n\nfunction ShowHint(props){\n  const url = constant.postURL;\n  const text = '/explain';\n  const useremail = sessionStorage.getItem('useremail');\n  const session = sessionStorage.getItem('session');\n\n  const dataText = { \"text\": text, \"username\": useremail, \"session\": session, \"referrer\":window.location.href}\n  const fetchResponse = usePost(url, dataText, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const hint = fetchResponse.data.text;\n\n  return( <BotReply message={hint} addChat={props.addChat} />);\n}\n\nfunction DisplayForm(props){\n  const [userInput, setUserInput] = useState(\"\");\n  let attemptedCount = parseInt(sessionStorage.getItem('attempted'));\n  let skippedCount = parseInt(sessionStorage.getItem('skipped'));\n  const totalWordCount = parseInt(sessionStorage.getItem('totalWordCount'));\n  const buttonText = \"Skip\"\n  function handleClick(){\n    if(userInput.length > 0){\n      props.getUserInput(userInput);\n      props.addChat(userInput);\n      setUserInput(\"\");\n      attemptedCount++;\n      sessionStorage.setItem('attempted', attemptedCount);\n      /*updateAttemptedCount();\n      if(is_retry){\n        updateSkippedCount('reduce');\n      }*/\n    }\n  }\n  function handleChange(e){\n    setUserInput(e.target.value);\n  }\n  function handleHint(e){\n    props.addChat(\"hint\");\n  }\n  function handleKeyPress(e){\n    if(e.charCode === 13){\n        e.preventDefault();\n        handleClick();\n    }\n  }\n  function handleSkip(e){\n      props.addChat(\"skip\")\n      skippedCount++;\n      sessionStorage.setItem('skipped', skippedCount);\n      /*if(!is_retry){\n        updateSkippedCount('add');\n      }*/\n  }\n  function handleSkipAll(){\n      sessionStorage.setItem('skipall', true);\n      props.addChat(\"skipall\")\n      //let totalAttempted = attemptedCount + skippedCount\n      skippedCount = totalWordCount - attemptedCount\n      sessionStorage.setItem('skipped', skippedCount);\n      /*skippedCount++;\n      sessionStorage.setItem('skipped', skippedCount);\n      /*if(!is_retry){\n        updateSkippedCount('add');\n      }*/\n  }\n  function handleConfirmation(){\n    const confirmBox = window.confirm(\n      \"Do you want to skip all the terms?\"\n    )\n    if (confirmBox === true) {\n      handleSkipAll()\n    }\n  }\n\n  return(\n    <div className=\"row input-area chatcolor\">\n      <button className=\"ideabutton\" value=\"start\" onClick={handleHint}>\n        <img src={ideapng} className=\"idealogo\" alt=\"logo\" />\n      </button>\n      <button className=\"skipbutton\" onClick={handleSkip}>{buttonText}</button>\n      <button className=\"skipallbutton\" onClick={handleConfirmation}>SkipAll</button>\n      <TextareaAutosize className=\"input-text\" value={userInput} onChange={handleChange}\n        onKeyPress={handleKeyPress} required/>\n      <button className=\"sendbutton\" value=\"start\" onClick={handleClick}>\n        <img src={sendlogo} className=\"idealogo\" alt=\"logo\" />\n      </button>\n    </div>\n  );\n}\n\nfunction DisplayUserInput(props){\n  return(\n    <UserReply message={props.input} />\n  )\n}\n\nfunction BotReply(props){\n  const textArea = document.querySelector('textarea');\n  const textRowCount = textArea ? textArea.value.split(\"\\n\").length : 0;\n  const rows = textRowCount + 3;\n  return(\n    <li>\n      <div className=\"row bot\">\n        <TextareaAutosize className=\"botmessage\" rows={rows} value={props.message}\n        rowsMin={3} id=\"bottext\" disabled/>\n      </div>\n    </li>\n );\n}\n\nfunction  UserReply(props){\n  return(\n  <li>\n    <div className=\"row bot\">\n      <TextareaAutosize className=\"usermessage\" value={props.message} rowsMin={3} disabled />\n    </div>\n  </li>);\n}\n\n/*function updateSkippedCount(action) {\n  let skippedCount=parseInt(sessionStorage.getItem('skipped'));\n  action ==='add' ? skippedCount++ : skippedCount-- ;\n  sessionStorage.setItem('skipped', skippedCount);\n}\n\nfunction updateAttemptedCount() {\n  let attemptedCount=parseInt(sessionStorage.getItem('attempted'));\n  attemptedCount++;\n  sessionStorage.setItem('attempted', attemptedCount);\n}\n*/\nfunction getCommand(message){\n  let text;\n  switch(message){\n    case 'skip':\n      text = '/skip';\n      break;\n    case 'skipall':\n      text = '/skipall';\n      break;\n    case 'first':\n    case 'next':\n      text = '/new';\n      break;\n    case 'retry':\n      text = '/retry';\n      break;\n    default:\n      text = message;\n      break;\n  }\n  return text;\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../headers/KwykHeader\";\nimport TimerHeader from \"../headers/TimerHeader\";\nimport '../static/css/stats.css';\nimport * as constant from '../components/Constants';\nimport DisplayAlert from '../components/DisplayAlert';\nimport useGetAttempted from \"../hooks/useGetAttempted\";\nimport useFetch from \"../hooks/useFetch\";\n\nfunction UserStats(){\n  let history = useHistory();\n  const useremail = sessionStorage.getItem('useremail');\n  if(useremail == null){\n    history.push({\n      pathname:`/`\n    });\n    return null;\n  }\n  else{\n    return <CheckStatsAndDisplay useremail={useremail}/>\n  }\n}\n\nfunction CheckStatsAndDisplay(props) {\n  const topic = sessionStorage.getItem('topic');\n  const subtopic = sessionStorage.getItem('subtopic');\n  const useremail = sessionStorage.getItem('useremail');\n  useGetAttempted(useremail);\n  const attemptedCount = parseInt(sessionStorage.getItem('attempted'));\n  const skippedWordCount = parseInt(sessionStorage.getItem('skipped'));\n  let history = useHistory();\n  /*if(skippedWordCount === 0){\n    history.push({\n        pathname:`/view_responses/${topic}/${subtopic}`\n      });\n    return null;\n  }\n  else */\n  if(attemptedCount === 0 && (sessionStorage.getItem('skipall') === 'false')){\n    sessionStorage.setItem('retry', true);\n    history.push({\n        pathname:`/chat/${topic}/${subtopic}`\n      });\n    return null;\n  }\n  else{\n    return <StatsPage topic={topic} subtopic={subtopic}/>\n  }\n}\n\nfunction StatsPage(props){\n  const minutes = parseInt(sessionStorage.getItem('minutes'));\n  const seconds = parseInt(sessionStorage.getItem('seconds'));\n  const username = sessionStorage.getItem('username');\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-2\"></div>\n        <div className=\"col-lg-8 chatcolor\">\n            <Header username={username} />\n            <ShowTimeHeader minutes={minutes} seconds={seconds}/>\n            <DisplayStats minutes={minutes} seconds={seconds} topic={props.topic}\n            subtopic={props.subtopic} />\n        </div>\n        <div className=\"col-lg-2\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserStats;\n\nfunction ShowTimeHeader(props){\n  return '';\n}\n\nfunction DisplayStats(props){\n  const attemptedCount = parseInt(sessionStorage.getItem('attempted'));\n  const skippedCount = parseInt(sessionStorage.getItem('skipped'));\n  const useremail = sessionStorage.getItem('useremail');\n  const url = constant.kwykURL+\"user_stats_custom/\"+useremail+\"/\"+props.topic+\"/\"+props.subtopic;\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n      return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n      return 'Loading...';\n  }\n  const data = fetchResponse.data\n\n  return(\n    <div className=\"stats-area\">\n      <DisplayScore minutes={props.minutes} seconds={props.seconds}\n      skippedCount={skippedCount} attemptedCount={attemptedCount}/>\n      <RetrySkips topic={props.topic} subtopic={props.subtopic} skippedCount={skippedCount}/>\n      <ViewResponses topic={props.topic} subtopic={props.subtopic} data={data} attemptedCount={attemptedCount}/>\n      <ViewExplanation topic={props.topic} subtopic={props.subtopic} skippedCount={skippedCount} attemptedCount={attemptedCount}/>\n    </div>\n  );\n}\n\nfunction RetrySkips(props){\n  let history = useHistory();\n  if(props.skippedCount !== 0){\n    function handleClick(){\n      sessionStorage.setItem('retry', true);\n      history.push({\n        pathname:'/chat/'+props.topic+'/'+props.subtopic\n      });\n    }\n    return(\n      <div className= \"button-area\">\n      <button className=\"retry-button\" value=\"retry\" onClick={handleClick}>Retry Skipped Questions </button>\n      </div>\n    );\n  }\n  else{\n    return(\n      <div></div>\n    );\n  }\n}\n\nfunction ViewResponses(props){\n    sessionStorage.setItem('responsesData', JSON.stringify(props.data))\n\n    let history = useHistory();\n    if(props.attemptedCount > 0){\n      function handleClick(){\n        history.push({\n        pathname:`/view_responses/${props.topic}/${props.subtopic}`\n        });\n      }\n    return(\n      <div className= \"button-area\">\n      <button className=\"retry-button\" value=\"response\" onClick={handleClick}>See Popular Responses</button>\n      </div>\n    );\n  }\n  else{\n    return(\n      <div></div>\n    );\n  }\n}\n\nfunction ViewExplanation(props){\n    let history = useHistory();\n    if(props.skippedCount == 0 && props.attemptedCount == 0){\n      return(\n        <div></div>\n      );\n    }\n    else{\n      function handleClick(){\n        history.push({\n        pathname:`/explanation/${props.topic}/${props.subtopic}`\n        });\n      }\n    return(\n      <div className= \"button-area\">\n      <button className=\"retry-button\" value=\"response\" onClick={handleClick}>See Explanation</button>\n      </div>\n    );\n  }\n\n}\n\n/*function SwitchTopic(){\n  let history = useHistory();\n  function handleClick(){\n    history.push('/topics')\n  }\n  return(\n    <div className= \"button-area\">\n    <button className=\"retry-button\" value=\"retry\" onClick={handleClick}>Switch Topic</button>\n    </div>\n  );\n}\n*/\nfunction FeedBack(){\n  let history = useHistory();\n  function handleClick(){\n      history.push('/feedback')\n\n  }\n  return(\n    <div className= \"button-area\">\n      <button className=\"retry-button\" value=\"retry\" onClick={handleClick}>Feedback</button>\n    </div>\n  );\n}\n\nfunction DisplayScore(props){\n  return(\n    <div className= \"display-area\">\n      <br />\n      <div className = \"row\">\n        <div className=\"col-12 topic-text center\">\n        You have completed this topic!\n        </div>\n      </div>\n      <div className = \"row\">\n        <div className=\"col-2 darkgrey\"></div>\n        <div className=\"col-4 stat-text left\">\n        #Attempted\n        </div>\n        <div className=\"col-6 topic-text left\">\n        : {props.attemptedCount}\n        </div>\n      </div>\n      <div className = \"row \">\n        <div className=\"col-2 darkgrey\"></div>\n        <div className=\"col-4 stat-text left\">\n        #Skipped\n        </div>\n        <div className=\"col-6 topic-text left\">\n        : {props.skippedCount}\n        </div>\n      </div>\n      <div className = \"row \">\n        <div className=\"col-2 darkgrey\"></div>\n        <div className=\"col-4 stat-text left\">\n        #Time Taken\n        </div>\n        <div className=\"col-6 topic-text left\">\n          : {props.minutes} mins : {props.seconds} secs\n        </div>\n      </div>\n    </div>\n  );\n}\n","import styled from \"styled-components\";\nexport const Tabs = styled.div`\n  overflow: hidden;\n  background: ${props => props.tabcolor};\n  font-family: \"Helvetica\";\n  height: 3em;\n  width:100%;\n`;\n\nexport const Tab = styled.button`\n  border: none;\n  outline: none;\n  cursor: pointer;\n  width: 50%;\n  position: relative;\n  background: ${props => props.tabcolor};\n\n  font-size: 1em;\n  border: ${props => (props.active ? \"1px solid #ccc\" : \"\")};\n  border-bottom: ${props => (props.active ? \"none\" : \"\")};\n  color: ${props => (props.active ? \"#000000\" : \"#959595\")};\n  height: ${props => (props.active ? \"2.6em\" : \"2.6em; top:.4em\")};\n  transition: background-color 0.5s ease-in-out;\n\n  :hover {\n    color: #000000;\n  }\n`;\nexport const Content = styled.div`\n  ${props => (props.active ? \"\" : \"display:none\")}\n`;\n","import React from \"react\";\nimport ReactWordcloud from 'react-wordcloud';\nimport { Resizable } from \"re-resizable\";\n\n\nfunction ShowWordCloud(props) {\n  if(props.data.length > 0){\n    const words = props.data;\n    const options = {\n      content: {\n        allowNumbers: false,\n        maxWords: 20,\n        stemmer: null,\n        stopwordsInput: '',\n        },\n      fontSizes: [20, 70],\n      rotations: 3,\n      rotationAngles: [0, 0],\n      padding: 3,\n      backgroundColor:\"#ffffff\"\n    }\n    const resizeStyle = {\n      background: \"#ede2d5\",\n      width:'70%',\n      height: '100%',\n      marginLeft: '15%',\n      marginRight: '15%',\n    }\n    return (\n      <ReactWordcloud className=\"wordcloud\" options={options} words={words} style={resizeStyle}/>\n    );\n  }\n  else {\n    return <div></div>\n  }\n}\n\nexport default ShowWordCloud;\n","import React from 'react';\nimport * as utils from '../utils/jsutils';\n\n\nfunction TopicHeader(props){\n  const username = sessionStorage.getItem('username');\n  return(\n    <div className=\"row headercontainer grey\">\n      <div className=\"col-12 grey\">\n        <span className=\"topic-label\"> Topic:</span>\n        <span className=\"topic-label\"> {utils.convertToCamelCase(props.subtopic)}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default TopicHeader;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Tabs, Tab, Content } from \"../components/Tab\";\nimport Header from \"../headers/KwykHeader\";\nimport SessionHeader from \"../headers/SessionHeader\";\nimport '../static/css/header.css';\nimport '../static/css/stats.css';\nimport useFetch from \"../hooks/useFetch\";\nimport * as constant from '../components/Constants';\nimport DisplayAlert from '../components/DisplayAlert';\nimport ShowWordCloud from '../components/WordCloud'\nimport * as utils from '../utils/jsutils';\nimport TopicHeader from \"../headers/TopicHeader\";\nimport useGetAttempted from \"../hooks/useGetAttempted\";\nimport Collapse from 'react-bootstrap/Collapse';\n\nfunction Responses() {\n  let history = useHistory();\n  if(sessionStorage.getItem('topic') == null){\n    history.push({\n      pathname:`/404`\n    });\n    return null;\n  }\n  else {\n    return <ShowResponsePage />\n  }\n}\n\nfunction ShowResponsePage() {\n  const topic = sessionStorage.getItem('topic');\n  const subtopic = sessionStorage.getItem('subtopic');\n  const username = sessionStorage.getItem('username');\n  const useremail = sessionStorage.getItem('useremail');\n  useGetAttempted(useremail);\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-2\"></div>\n        <div className=\"col-md-8\">\n            <Header username={username}/>\n            <ShowResponses topic={topic} subtopic={subtopic}/>\n        </div>\n        <div className=\"col-md-2\"></div>\n      </div>\n    </div>\n  );\n}\n\n/*function ResponsesTab(props){\n  const [active, setActive] = useState(0);\n  let history = useHistory();\n  const handleClick = e => {\n    const index = parseInt(e.target.id, 0);\n    if(index === 0){\n      window.location.reload()\n    }\n    if (index !== active) {\n      setActive(index);\n    }\n  };\n  return(\n    <div className=\"tab-color\">\n      <Tabs tabcolor={constant.adminTabColor}>\n        <Tab onClick={handleClick} active={active === 0} id={0} tabcolor={constant.adminTabColor}>\n          Popular Responses\n        </Tab>\n        <Tab onClick={handleClick} active={active === 1} id={1} tabcolor={constant.adminTabColor}>\n          Explanation\n        </Tab>\n      </Tabs>\n      <>\n        <Content active={active === 0}>\n          <ShowResponses topic={props.topic} subtopic={props.subtopic}/>\n        </Content>\n        <Content active={active === 1}>\n          <ShowExplanation topic={props.topic} subtopic={props.subtopic}/>\n        </Content>\n      </>\n    </div>\n  );\n}*/\nexport default Responses;\n\nfunction ShowResponses(props){\n  const data = JSON.parse(sessionStorage.getItem('responsesData'));\n  const topicUserWords = JSON.parse(sessionStorage.getItem('userResponses'));\n  const topicWordsResponses = data[\"topic_answers\"];\n  const topicWords = topicWordsResponses[\"topic_words\"];\n  const topicTopWords = topicWordsResponses[\"top_words\"];\n  topicWords.sort();\n  const wordResponses = topicWords.map((word,index)=>{\n    if(topicUserWords.includes(word)){\n      return <DisplayWordResponses word={word} topicTopWords={topicTopWords} topicUserWords={topicUserWords} key={index}/>\n    }\n  });\n  return(\n    <div >\n      <TopicHeader topic={props.topic} subtopic={props.subtopic}/>\n      <div className= \"responses-area\">\n      <ul className=\"chatcolor\">\n        {wordResponses}\n      </ul>\n      </div>\n      <div className=\"bottom-area\"></div>\n    </div>\n  );\n}\n\n\nfunction DisplayWordResponses(props){\n  const userWords = props.topicUserWords[props.word];\n  const topWords = props.topicTopWords[props.word];\n  const size = topWords.length > 20 ? 20 : topWords.length\n\n  return(\n    <div className=\"word-response\">\n    <label className=\"topicname\">{props.word}</label>\n    <ShowWordCloud data={topWords.slice(0, size)} />\n    </div>\n  );\n}\n\nfunction DisplayWord(props){\n  let words = \"\"\n  if(props.words){\n    words = props.words.split(',');\n  }\n  return(\n    <div>\n    {words ?\n        <div className=\"white\">{words.map((word,index) => <div className=\"white\" key={index}>\n            <label className=\"word\">{word}</label>\n        </div>)}</div>\n        : null}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Collapse from 'react-bootstrap/Collapse';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\nimport '../static/css/admin.css';\nimport ShowWordCloud from '../components/WordCloud'\n\nfunction Statistics(props){\n  return(\n    <div className='stats'>\n      <DisplayStats data={props.data}/>\n    </div>\n  );\n}\n\nexport default Statistics;\n\nfunction DisplayStats(props) {\n  let totalUsers = 0, totalWords = 0;\n  let leastResponse =[];\n  let mostSkips =[];\n  let commonResponseCount =[];\n  let userResponseCount =[];\n  let userResponseData;\n  const stats = getStats(props.data);\n  const answeredCount =stats[\"answeredCount\"];\n  const skipsCount = stats[\"skipsCount\"];\n  commonResponseCount = stats[\"commonResponseCount\"];\n  const userAnswerCount = stats[\"userAnswerCount\"];\n  totalUsers = stats[\"totalUsers\"];\n  totalWords = stats[\"totalWords\"];\n  mostSkips = getSortedData(skipsCount,1); //second arg 1 to sort desc\n  leastResponse = getSortedData(answeredCount,0);\n  const userResponse = getResponseHist(userAnswerCount, totalWords);\n  userResponseData = userResponse[\"userDivisionData\"];\n  userResponseCount = userResponse[\"userResponseCount\"];\n  const displayItems = [\n                  {message:'Common user responses',data:commonResponseCount, maxVal:totalWords,\n                  type:'cloud'},\n                  {message:'Key terms with least responses',data:leastResponse,maxVal:totalUsers,\n                    type:'progress'},\n                  {message:'Key terms with most skips',data:mostSkips,maxVal:totalUsers,\n                type:'progress'},\n                  {message:'Key terms attempted by users',data:userResponseCount,maxVal:totalUsers,\n                  value:userResponseData,type:'progress'}\n                ]\n  const statButtons = displayItems.map((item,index)=>{\n    return <DisplayButton message={item.message} key={index} maxVal={item.maxVal}\n    data={item.data} value={item.value} type={item.type}/>\n  });\n  return(\n    <div className=\"display-stats\">\n    {statButtons}\n    </div>\n  );\n}\n\nfunction DisplayButton(props){\n  const [open, setOpen] = useState(false);\n  return(\n    <div className=\"display-btn\">\n      <Button\n        onClick={() => setOpen(!open)}\n        aria-controls=\"collapse-text\"\n        aria-expanded={open}\n        variant=\"stats\"\n        className=\"btn-stats\"\n      >\n        {props.message}\n      </Button>\n      <Collapse in={open} className=\"stats-data\">\n        <div className=\"chatcolor\">\n          <DisplayData maxVal={props.maxVal} data={props.data} value={props.value} type={props.type}/>\n        </div>\n      </Collapse>\n    </div>\n  );\n}\n\nfunction DisplayData(props) {\n\n  let data = props.data;\n  data.sort(function(a,b) {\n    return b.value - a.value\n  });\n  const size = data.length > 30 ? 30 : data.length\n  if(props.type === 'progress'){\n    return <ShowProgressBar maxVal={props.maxVal} data={props.data} value={props.value}/>\n  }\n  else{\n    return <ShowWordCloud maxVal={props.maxVal} data={data.slice(0, size)} />\n  }\n}\n\nfunction ShowProgressBar(props){\n    const data = props.data;\n    const maxVal = props.maxVal==0? 100:props.maxVal;\n    const statsBar = data.map((statData,index)=>{\n        const percent = statData[1];\n        const range = statData[0];\n        let popover;\n        if(props.value){\n          const names = props.value[range];\n          let users = names.join('\\n');\n          popover = (\n            <Popover>\n              <Popover.Title >Users</Popover.Title>\n              <Popover.Content>\n              { users}\n              </Popover.Content>\n            </Popover>\n          );\n        }\n        else{\n            popover = (\n              <Popover> </Popover>\n            );\n        }\n        return (\n          <div className=\"row\">\n            <div className=\"col-sm-4 white\">\n            <label className=\"data-label\"> {statData[0]} </label>\n            </div>\n            <div className=\"col-sm-8 white\">\n            <OverlayTrigger overlay={popover}>\n            <ProgressBar className=\"progress\" now={percent} label={`${percent} `} key={index} max={maxVal} min='0'/>\n            </OverlayTrigger>\n            </div>\n          </div>\n        );\n      });\n    return(\n    <div className=\"statsBar\">\n      {statsBar}\n    </div>\n    );\n}\n\nfunction getStats(data){\n  let skipsCount = {};\n  let answeredCount = {};\n  let wordResponses =[];\n  let userAnswerCount = {};\n  const topicData = data;\n  const words = topicData[\"topic_words\"];\n  const userWords = topicData[\"user_data\"];\n  const users = topicData[\"all_users\"];\n  const totalUsers = users.length;\n  const totalWords = words.length;\n  for(var i=0; i < words.length; i++){\n      const word = words[i];\n      skipsCount[word] = 0;\n      answeredCount[word] = 0;\n  }\n  for (i=0; i < words.length; i++){\n      const word = words[i];\n      for(const name of users){\n        if(!(name in userWords)){\n          skipsCount[word] += 1;\n        }\n        else{\n            const userEntries = userWords[name];\n            if(!Object.keys(userEntries).includes(word)){\n             skipsCount[word] += 1;\n           }\n           else {\n             userAnswerCount[name] = (userAnswerCount[name]||0)+1;\n             answeredCount[word] +=1;\n             wordResponses=wordResponses.concat(userEntries[word].split(\",\"))\n           }\n        }\n      }\n    /*  for(const [key, value] of Object.entries(userWords)){\n        console.log(\"key=\",key);\n        console.log(\"value=\",value);\n        const userEntries = value;\n        if(!Object.keys(userEntries).includes(word)){\n          skipsCount[word] += 1;\n        }\n        else{\n          userAnswerCount[key] = (userAnswerCount[key]||0)+1;\n          answeredCount[word] +=1;\n          wordResponses=wordResponses.concat(userEntries[word].split(\",\"))\n        }\n      }*/\n    }\n    wordResponses = getWordFrequency(wordResponses);\n    return {\"answeredCount\": answeredCount, \"skipsCount\": skipsCount, \"commonResponseCount\":wordResponses,\n    \"totalUsers\":totalUsers, \"userAnswerCount\":userAnswerCount,\n    \"totalWords\":totalWords}\n}\n\nfunction getWordFrequency(wordArray) {\n  var occurrences = wordArray.reduce(function(obj, index) {\n  obj[index] = (obj[index] || 0) + 1;\n  return obj;\n  }, {});\n  let words = [];\n  for(const [key, value] of Object.entries(occurrences)){\n    words.push({text:key,value:value})\n  }\n  return words;\n}\n\nfunction getSortedData(data,type,count=5){\n  let sortedData = [];\n  for (var word in data) {\n    sortedData.push([word, data[word]]);\n  }\n  sortedData.sort(function(a, b) {\n    if(type === 0){\n      return a[1] - b[1];\n    }\n    else{\n      return b[1] - a[1];\n    }\n  });\n  for(var n=count; n < sortedData.length; n++){\n    if(sortedData[n-1][1] === sortedData[n][1]){\n      count++;\n    }\n    else {\n      break;\n    }\n  }\n  return sortedData.slice(0,count);\n  }\n\nfunction getResponseHist(userData, totalWords) {\n  const divisions = [0, 0.25, 0.5, 0.75, 1];\n  let userDivisionData = {};\n  let userResponseCount =[]\n  //answerDivisions contains split up of word count\n  const answerDivisions = divisions.map((value,index) =>{\n    return `${Math.round(divisions[index] * totalWords)}`\n  });\n  //ansdivpercent = [\"0 - 24\", \"25 - 49\", \"50 - 74\", \"75 - 99\", \"100\"]\n  const ansdivpercent = divisions.map((value,index) =>{\n    let valRange;\n    if(parseInt(value) === 1){\n      valRange = `100%`;\n    }\n    else{\n      valRange = `${value * 100}-${divisions[index + 1]*100 -1}%`\n    }\n    userDivisionData[valRange] =[];\n    return valRange;\n  });\n  for(const [key, value] of Object.entries(userData)){\n    if(value === totalWords){\n      const centPercent = ansdivpercent[ansdivpercent.length - 1];\n      userDivisionData[centPercent].push(key)\n\n    }\n    else{\n      for(let i = 0; i < answerDivisions.length-1; i++){\n        if((value >= answerDivisions[i]) && ((value < answerDivisions[i+1]))){\n          const percent = ansdivpercent[i];\n          userDivisionData[percent].push(key);\n\n        }\n      }\n    }\n  }\n  let count = 0;\n  for(let i=0; i < ansdivpercent.length; i++){\n    const range = ansdivpercent[i];\n    if(userDivisionData[range]){\n      count=userDivisionData[range].length;\n    }\n    userResponseCount.push([range, count]);\n  }\n  return {\"userDivisionData\":userDivisionData, \"userResponseCount\":userResponseCount};\n}\n","import React from 'react';\nimport Header from \"../headers/KwykHeader\";\nfunction AdminAccessDenied() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <Header/>\n        <DisplayError />\n      </div>\n    </div>\n  );\n}\n\nexport default AdminAccessDenied;\n\nfunction DisplayError() {\n  return(\n    <div className='adminerror'>\n       <h4><div className='adminmessage'>Admin Access Denied</div></h4>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Tabs, Tab, Content } from \"../components/Tab\";\nimport Header from \"../headers/KwykHeader\";\nimport '../static/css/header.css';\nimport '../static/css/admin.css';\nimport useFetch from \"../hooks/useFetch\";\nimport * as constant from '../components/Constants'\nimport Statistics from \"./Statistics\";\nimport DisplayAlert from '../components/DisplayAlert';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport AdminAccessDenied from '../components/AdminAccessDenied'\n\nfunction Insights() {\n  let history = useHistory();\n  const location = useLocation();\n\n  if((sessionStorage.getItem('useremail') != null) &&\n      (sessionStorage.getItem('is_admin') === 'true')){\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Header />\n          <StatisticsTab />\n        </div>\n      </div>\n    );\n  }\n  else{\n    if(sessionStorage.getItem('is_admin') === 'false'){\n      return <AdminAccessDenied />\n    }\n    const destinationPath = location.pathname\n    history.push({\n        pathname:`/`,\n        query: {destinationPath}\n      });\n    return null;\n  }\n}\n\nexport default Insights;\n\nfunction StatisticsTab(props){\n  const [active, setActive] = useState(0);\n  const handleClick = e => {\n    const index = parseInt(e.target.id, 0);\n    if (index !== active) {\n      setActive(index);\n    }\n  };\n  let urlSplit = window.location.href.split(\"analytics/\")[1].split('/')\n  urlSplit = urlSplit.filter(item => item);\n  const topic = constant.pySkillsTopic;\n  const subtopic = urlSplit[0];\n  var url = '';\n  if(urlSplit.length > 1){\n    const session = urlSplit[1];\n    url = constant.kwykURL+\"admin/user_data_custom/\"+topic+\"/\"+subtopic+\"/\"+session;\n  }\n  else{\n    url = constant.kwykURL+\"admin/user_data_custom/\"+topic+\"/\"+subtopic;\n  }\n\n  //const url = constant.kwykURL+\"admin/user_data_custom/\";\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const data = fetchResponse.data;\n\n  return(\n    <div className=\"tab-color\">\n      <Tabs tabcolor={constant.adminTabColor}>\n        <Tab onClick={handleClick} active={active === 0} id={0} tabcolor={constant.adminTabColor}>\n          Statistics\n        </Tab>\n        <Tab onClick={handleClick} active={active === 1} id={1} tabcolor={constant.adminTabColor}>\n          Insights\n        </Tab>\n      </Tabs>\n      <>\n        <Content active={active === 0}>\n          <Statistics data={data}/>\n        </Content>\n        <Content active={active === 1}>\n          <ShowInsights data={data}/>\n        </Content>\n      </>\n    </div>\n  );\n}\n\nfunction ShowInsights(props){\n  const [selectedView, setView] = useState(\"user\");\n  function getView(value){\n    setView(value);\n  }\n  const userData = props.data;\n  return(\n    <div className='insightsview'>\n      <div className=\"adminview-div row\">\n        <div className=\"col-lg-3 lightgreen\">\n          <ViewSelection getView={getView} view={selectedView}/>\n        </div>\n        <div className=\"col-lg-9 lightgreen\">\n          <ShowLegends selectedView={selectedView}/>\n        </div>\n      </div>\n      <DisplayUserData userData={userData} selectedView={selectedView}/>\n    </div>\n  );\n}\n\nfunction DisplayUserData(props){\n  let headerWords, limits;\n  const data = props.userData;\n  if(data){\n    const headerData = getHeaderWords(data, props.selectedView);\n    headerWords = headerData[\"headerWords\"];\n    limits = headerData[\"limits\"];\n  }\n  return(\n    <div className=\"display-data\">\n      <table className=\"container\">\n        <GetTableHeader selectedView={props.selectedView} headerWords={headerWords}/>\n        <GetTableData data={data} selectedView={props.selectedView} limits={limits}/>\n      </table>\n    </div>\n  );\n}\n\nfunction GetTableHeader(props){\n  let titleWord;\n   if(props.headerWords){\n     if(props.selectedView === \"user\"){\n       titleWord = \"Username\";\n     }\n     else{\n       titleWord = \"Key Terms\";\n     }\n     const header = props.headerWords.map((word,index)=>{\n       return <th className=\"data\" key={index}>{word}</th>\n     });\n     return(\n       <thead>\n         <tr>\n           <th style={{\"minWidth\":\"200px\"}}>{titleWord}</th>\n           {header}\n         </tr>\n      </thead>\n     );\n   }\n   else {\n     return <thead><tr></tr></thead>\n   }\n}\n\nfunction GetTableData(props){\n  let words, userData, users;\n  if(props.data){\n     words=props.data[\"topic_words\"];\n     userData = props.data[\"user_data\"];\n     users = props.data[\"all_users\"];\n  }\n  if(props.selectedView === \"user\"){\n    return <ViewByUsers words={words} userData={userData} users={users}/>\n  }\n  else{\n    return <ViewByResponses words={words} userData={userData} limits={props.limits}/>\n  }\n}\n\nfunction ViewSelection(props){\n  const [view, setView] = useState(props.view);\n  function handleChange(e){\n    setView(e.target.value);\n    props.getView(e.target.value);\n  }\n  return(\n    <div>\n    <div className=\"view lightgreen\">\n        Choose a view :\n      </div>\n      <div className=\"view lightgreen\">\n        <select className=\"view-select\" onChange={handleChange} defaultValue={'user'} value={view}>\n          <option value=\"user\">View By Users</option>\n          <option value=\"responses\"> View By Responses </option>)\n        </select>\n      </div>\n    </div>\n  );\n}\n\nfunction getHeaderWords(data, view) {\n  const userWords = data[\"user_data\"];\n  const totalUsers = data[\"all_users\"].length;\n  const divisions = [0, 0.25, 0.5, 0.75, 1];\n  const userDivisions = divisions.map((value,index) =>{\n    return `${(divisions[index] * totalUsers)}`\n  });\n  let headerWords=[];\n  let limits = [];\n  if(view === \"user\"){\n    headerWords = data[\"topic_words\"];\n  }\n  else{\n    const limitsData = getLimits(totalUsers, userDivisions);\n    headerWords = limitsData['headerWords'];\n    limits = limitsData['limits'];\n  }\n  return {\"headerWords\":headerWords, \"limits\":limits};\n}\n\nfunction ViewByUsers(props){\n    const userData = props.userData;\n    const users = props.users;\n    const words = props.words;\n    if(users){\n      const data = users.map((user,index)=>{\n          let userVal='';\n          if (userData[user]){\n            userVal = userData[user];\n          }\n          const userInput = words.map((word,index)=>{\n              if(userVal && userVal[word]){\n                return <td style={{backgroundColor:constant.userInsightGreen}} key={index}></td>;\n              }\n              else {\n                return <td style={{backgroundColor:constant.userInsightRed}} key={index}></td>;\n              }\n          });\n          return(\n            <tr key={index}>\n              <th className=\"rowheader\">{user}</th>\n              {userInput}\n            </tr>\n          );\n    });\n    return <tbody>{data}</tbody>\n  }\n  else{\n    return <tbody></tbody>\n  }\n}\n\nfunction ViewByResponses(props) {\n  const userData = props.userData;\n  const words = props.words;\n  let wordUserCount = {};\n  if(userData){\n    const data = words.map((word,index)=>{\n        wordUserCount[word] = getWordResponseCount(word, userData);\n    });\n  }\n  const tableData = Object.keys(wordUserCount).map((word, index)=>{\n    const wordCount = wordUserCount[word];\n    const wordRow = props.limits.map((limit, index)=>{\n      let wordColor = \"#ffffff\";\n      if((wordCount >= limit[0]) && (wordCount <= limit[1])){\n        wordColor  = constant.tableColors[index];\n      }\n      return <td style={{backgroundColor:wordColor}} key={index}></td>\n    });\n\n    return (\n      <tr key={index}>\n        <th className='rowheader'>{word}</th>\n        {wordRow}\n      </tr>\n    );\n  });\n  return <tbody>{tableData}</tbody>\n\n}\n\nfunction getWordResponseCount(word, userData){\n  let count = 0;\n  for(const [key, value] of Object.entries(userData)){\n    const userEntries = value;\n    if(Object.keys(userEntries).includes(word)){\n        count++;\n    }\n  }\n  return count;\n}\n\nfunction getLimits(totalUsers, userDivisions){\n  //let headerWords=[];\n  let limits = [];\n  const headerWords = [\"0 %\", \"1 - 25 %\", \"26 - 50 %\", \"51 - 75 %\", \"76 - 99 %\", \"100 %\"]\n  /*if(totalUsers < 5){\n    for(var i=0; i<=totalUsers; i++ ){\n      limits.push([i,i]);\n      //headerWords.push(actualDivisions[i]);\n    }\n  }\n  else{*/\n    //headerWords.push(actualDivisions[0]);\n    limits.push([0,0])\n    for(let index = 1; index < userDivisions.length; index++){\n      let begin = parseFloat(userDivisions[index-1]) + 0.1;\n      let end = parseFloat(userDivisions[index]);\n      if(end === totalUsers){\n        end = end - 0.1;\n      }\n\n      if(end < begin){\n        break;\n      }\n      if(begin === end){\n        //headerWords.push(end);\n        limits.push([end, end]);\n      }\n      else{\n        //headerWords.push(`${begin} - ${end}` );\n        limits.push([begin, end]);\n      }\n\n    }\n    //headerWords.push(actualDivisions[5]);\n    //headerWords.push(totalUsers);\n    limits.push([totalUsers, totalUsers]);\n  //}\n  return {\"headerWords\":headerWords, \"limits\":limits};\n}\n\nfunction ViewByUsersLegend() {\n  return (\n    <div className=\"legend\">\n      <div className=\"row lightgreen\">\n        <span class=\"square\" style={{backgroundColor:constant.userInsightGreen}}> </span>\n        answered\n        <span class=\"square\" style={{backgroundColor:constant.userInsightRed}}> </span>\n        unanswered\n      </div>\n    </div>\n  );\n}\n\nfunction ViewByResponsesLegend() {\n  return (\n    <div className=\" legend\">\n      <div className=\"row\" >\n      <div className=\"col-md-4\">\n      <div className=\"row lightgreen\">\n        <span class=\"square\" style={{backgroundColor:constant.tableColors[0]}}> </span>\n        No users attempted\n      </div>\n      </div>\n      <div className=\"col-md-4\">\n      <div className=\"row lightgreen\">\n        <span class=\"square\" style={{backgroundColor:constant.tableColors[1]}}> </span>\n        {\"<\"} 25% users attempted\n      </div>\n      </div>\n      <div className=\"col-md-4\">\n      <div className=\"row lightgreen\">\n        <span class=\"square\" style={{backgroundColor:constant.tableColors[2]}}> </span>\n        26 - 50% users\n      </div>\n      </div>\n      </div>\n      <div className=\"row\" >\n      <div className=\"col-md-4\">\n      <div className=\"row lightgreen\">\n        <span class=\"square\" style={{backgroundColor:constant.tableColors[3]}}> </span>\n        51 - 75% users\n      </div>\n      </div>\n      <div className=\"col-md-4\">\n      <div className=\"row lightgreen\">\n        <span class=\"square\" style={{backgroundColor:constant.tableColors[4]}}> </span>\n        76 - 99% users\n      </div>\n      </div>\n      <div className=\"col-md-4\">\n      <div className=\"row lightgreen\">\n        <span class=\"square\" style={{backgroundColor:constant.tableColors[5]}}> </span>\n        attempted by all users\n      </div>\n      </div>\n      </div>\n    </div>\n  );\n}\n\nfunction ShowLegends(props) {\n  if(props.selectedView === \"user\"){\n    return <ViewByUsersLegend />\n  }\n  else{\n    return <ViewByResponsesLegend />\n  }\n}\n","import React,{useState} from 'react';\nimport knowbotpng from '../static/images/knowbotpng.png';\nimport '../static/css/login.css';\nimport { Tabs, Tab, Content } from \"../components/Tab\";\nimport * as constant from '../components/Constants'\nimport usePost from \"../hooks/usePost\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport Alert from 'react-bootstrap/Alert'\nvar session = \"\"\n\nfunction Login() {\n  const location = useLocation();\n  if (location.query){\n    sessionStorage.setItem('destinationPath', location.query.destinationPath)\n  }\n  if(sessionStorage.getItem('useremail') != null){\n    return <Redirect />;\n  }\n  else{\n    return <DisplayLogin />\n  }\n}\n\nfunction DisplayLogin(){\n  //sessionStorage.clear()\n  const sessionPath = window.location.href.split('?session=')[1]\n  if(typeof(sessionPath) !== 'undefined'){\n    session = sessionPath.split('/')[0]\n  }\n  return(\n    <div className=\"container\">\n      <DisplayIcon />\n      <LoginTab />\n      <DisplayAlert />\n    </div>\n  );\n}\n\nexport default Login;\n\nfunction DisplayIcon() {\n  return(\n    <div className=\"row\">\n        <div className=\"col-lg-2\"></div>\n        <div className=\"col-lg-8 window-color center\">\n          <div className=\"row login\">\n            <div className=\"col-4 window-color\">\n              <img src={knowbotpng} className=\"login-logo\" alt=\"logo\" />\n            </div>\n            <div className=\"col-8 window-color\">\n              <div className=\"row logintitle\">\n                PySkills (Beta-1)\n              </div>\n              <div className=\"row loginsubtitle\">\n                Improve your Python skills\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-2\"></div>\n    </div>\n  );\n}\n\nfunction DisplayTitle() {\n  return(\n    <div className=\"row \">\n        <div className=\"col-lg-2 \"></div>\n        <div className=\"col-lg-8 window-color title\">\n            PySkills - Improve your Python skills\n        </div>\n        <div className=\"col-lg-2 \"></div>\n    </div>\n  );\n}\n\nfunction LoginTab(props){\n  const [active, setActive] = useState(0);\n  const handleClick = e => {\n    const index = parseInt(e.target.id, 0);\n    if (index !== active) {\n      setActive(index);\n    }\n  };\n\n  return(\n    <div className=\"row \">\n      <div className=\"col-lg-2 \"></div>\n        <div className=\"col-lg-8 window-color logintab\">\n    <div className=\"tab-color\">\n      <Tabs tabcolor={constant.loginTabColor}>\n        <Tab onClick={handleClick} active={active === 0} id={0} tabcolor={constant.loginTabColor}>\n          SignIn\n        </Tab>\n        <Tab onClick={handleClick} active={active === 1} id={1} tabcolor={constant.loginTabColor}>\n          SignUp\n        </Tab>\n      </Tabs>\n      <>\n        <Content active={active === 0}>\n          <SignInForm />\n        </Content>\n        <Content active={active === 1}>\n          <SignUpForm />\n        </Content>\n      </>\n    </div>\n    </div>\n    <div className=\"col-lg-2 \"></div>\n</div>\n  );\n}\n\nfunction SignInForm() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginMessage,setLoginMessage] = useState(\"\");\n  function handleSubmit(e) {\n    e.preventDefault();\n    const message = <ValidateUser email={email} password={password}/>\n    setLoginMessage(message);\n    setEmail(\"\")\n    setPassword(\"\")\n  }\n  function handleEmail(e){\n    setEmail(e.target.value);\n  }\n  function handlePassword(e) {\n    setPassword(e.target.value);\n  }\n  return(\n    <form className=\"loginform\" onSubmit={handleSubmit}>\n      <input type=\"text\" name=\"email\" className=\"text\" placeholder=\"email\"\n      value={email} onChange={handleEmail} required/><br/>\n      <input type=\"password\" name=\"password\" className=\"text\" placeholder=\"password\"\n        value={password} onChange={handlePassword} required/><br/>\n      <label className=\"text\">{loginMessage}</label>\n      <input type=\"submit\" value=\"Sign In\" className=\"signin\"/>\n      <Link to='/reset'>\n      <div className='link reset'>Forgot password?</div>\n      </Link>\n    </form>\n  );\n}\n\nfunction SignUpForm() {\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginMessage,setLoginMessage] = useState(\"\");\n  function handleSubmit(e) {\n    e.preventDefault();\n    const message = <CreateNewUser username={userName} email={email} password={password}/>\n    setLoginMessage(message);\n    setUserName(\"\")\n    setEmail(\"\")\n    setPassword(\"\")\n  }\n  function handleUserName(e) {\n    setUserName(e.target.value);\n  }\n  function handleEmail(e){\n    setEmail(e.target.value);\n  }\n  function handlePassword(e) {\n    setPassword(e.target.value);\n  }\n  return(\n    <form className=\"loginform\" onSubmit={handleSubmit}>\n      <input type=\"text\" id=\"username\" name=\"username\" className=\"text\" value={userName}\n        placeholder=\"username\" onChange={handleUserName} required/><br/>\n      <input type=\"text\" name=\"email\" className=\"text\" placeholder=\"email\"\n      value={email} onChange={handleEmail} required/><br/>\n      <input type=\"password\" name=\"password\" className=\"text\" placeholder=\"password\"\n      value={password} onChange={handlePassword} required/><br/>\n      <label className=\"text\">{loginMessage}</label>\n      <input type=\"submit\" value=\"Sign Up\" className=\"signin\"/>\n    </form>\n  );\n}\n\nfunction ValidateUser(props) {\n  const url = constant.loginURL;\n  const location = useLocation()\n  let loginMessage = '';\n  let sessionName = '';\n  const dataText = { \"email\": props.email, \"password\": props.password, \"session\": session, \"action\": \"signin\"}\n  const fetchResponse = usePost(url, dataText, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return <div className=\"window-color\">Loading...</div>;\n  }\n  const response = fetchResponse.data;\n\n  if(response['status'] === \"password mismatch\"){\n    loginMessage = \"Incorrect Password\";\n    sessionStorage.setItem('loginmessage', loginMessage);\n    window.location.reload();\n  }\n  else if(response['status'] === \"user not found\"){\n    loginMessage = \"Email id is not registered!\";\n    sessionStorage.setItem('loginmessage', loginMessage);\n    window.location.reload();\n  }\n  else{\n    loginMessage = \"Signed in Successfully!\";\n    sessionName = response['session_name'];\n    const userName = response['username'];\n    const is_admin = response['is_admin'];\n    setSessionStorage(userName, props.email, session, sessionName, is_admin);\n    return <Redirect />\n  }\n  return(``);\n}\n\nfunction CreateNewUser(props) {\n  const url = constant.loginURL;\n  const location = useLocation()\n  let loginMessage ='';\n  let sessionName = '';\n  const dataText = { \"username\":props.username, \"email\": props.email, \"password\": props.password,\n    \"session\": session, \"action\": \"signup\"}\n  const fetchResponse = usePost(url, dataText, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return <div className=\"window-color\">Loading...</div>;\n  }\n  const response = fetchResponse.data;\n  if (response['status'] === 'inserted'){\n    sessionName = response['session_name'];\n    const is_admin = false;\n    loginMessage = \"Signed Up Successfully!\";\n    setSessionStorage(props.username, props.email, session, sessionName, is_admin);\n    return <Redirect />\n  }\n  else if(response['status'] === 'duplicate'){\n    loginMessage = \"Email id is already registered\"\n    sessionStorage.setItem('loginmessage', loginMessage);\n    window.location.reload();\n  }\n  return(``)\n}\n\nfunction setSessionStorage(username, useremail, session, session_name, is_admin) {\n  sessionStorage.setItem('username', username);\n  sessionStorage.setItem('useremail', useremail);\n  sessionStorage.setItem('is_admin', is_admin);\n  if(session){\n    sessionStorage.setItem('session', session);\n    sessionStorage.setItem('session_name', session_name);\n  }\n  sessionStorage.removeItem('loginmessage');\n\n}\n\nfunction DisplayAlert() {\n  if(sessionStorage.getItem('loginmessage') != null){\n    let message = sessionStorage.getItem('loginmessage')\n    return(\n      <div className=\"row \">\n        <div className=\"col-md-2 \"></div>\n        <div className=\"col-md-8 window-color\">\n        <Alert variant='danger' className='alert'>\n          {message}\n          </Alert>\n        </div>\n        <div className=\"col-md-2 \"></div>\n      </div>\n    );\n  }\n  else {\n    return(\n      <div></div>\n    );\n  }\n}\n\nfunction initializeSessionStorage(topic, subtopic) {\n  sessionStorage.setItem('topic', constant.pySkillsTopic);\n  sessionStorage.setItem('subtopic', constant.pySkillsSubTopic);\n  sessionStorage.setItem('minutes', 0);\n  sessionStorage.setItem('seconds', 0);\n  sessionStorage.setItem('userResponses', JSON.stringify([]));\n  sessionStorage.setItem('retry', false);\n  sessionStorage.setItem('skipall', false);\n}\n\nfunction getTopicFromURL(destination) {\n  let topic, subtopic;\n  const urlSplit = destination.split('/');\n  if(urlSplit[urlSplit.length - 3] === 'chat'){\n    topic = urlSplit[urlSplit.length - 2]\n    subtopic = urlSplit[urlSplit.length - 1]\n  }\n  return {'topic':topic, 'subtopic': subtopic}\n}\n\nfunction getDestinationScreen(destination) {\n  const urlSplit = destination.split('/');\n  if(urlSplit[urlSplit.length - 1] === 'admin'){\n    return 'admin';\n  }\n  else if(urlSplit[urlSplit.length - 3] === 'chat') {\n    return 'chat';\n  }\n  return null;\n}\n\nfunction Redirect() {\n  let history = useHistory();\n  const location = useLocation()\n  let destination;\n  if(sessionStorage.getItem('destinationPath')){\n    destination = sessionStorage.getItem('destinationPath');\n    sessionStorage.removeItem('destinationPath');\n    const screenname = getDestinationScreen(destination);\n    if (screenname === 'chat'){\n      const topicDetail = getTopicFromURL(destination);\n      const topic = topicDetail['topic'];\n      const subtopic = topicDetail['subtopic'];\n      //initializeSessionStorage(topic, subtopic);\n      initializeSessionStorage()\n    }\n  }\n  else{\n    initializeSessionStorage()\n    destination = '/chat/'+constant.pySkillsTopic+'/'+constant.pySkillsSubTopic\n  }\n  history.push({\n      pathname:destination\n  });\n\n  return null;\n}\n","import React,{useState} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../headers/KwykHeader\";\nimport SessionHeader from \"../headers/SessionHeader\";\nimport '../static/css/feedback.css';\nimport * as constant from '../components/Constants'\nfunction Feedback() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-2\"></div>\n        <div className=\"col-lg-8\">\n          <Header />\n          <ShowTemplate />\n        </div>\n      <div className=\"col-lg-2\"></div>\n    </div>\n  </div>\n  );\n}\nexport default Feedback;\n\nfunction ShowTemplate() {\n  const [userInput, setUserInput] = useState(\"\");\n  const username = sessionStorage.getItem('username');\n  let history = useHistory();\n  function handleChange(e){\n    setUserInput(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const serviceID = 'default_service';\n    const templateId = 'template_09oi0b1';\n    sendFeedback(serviceID,templateId, {message: userInput, from_name:username, reply_to: \"<kwyktest01@gmail.com>, <dorait@gmail.com>, <ashish@imorph.com>, <shiny.suresh@gmail.com>\"});\n    setUserInput(\"\");\n    //sessionStorage.clear();\n    history.push({\n      pathname:`/thanks`\n    });\n  }\n  return(\n    <div >\n    <form className = \"fbarea\" onSubmit={handleSubmit}>\n    <div className=\"fblabel\">{constant.feedbackMessage}</div>\n    <div className=\"fblabel blank\"> Feedback / Issue / Query</div>\n    <textarea className=\"fbtext\" value={userInput} placeholder=\"Type your response here...\" onChange={handleChange}></textarea>\n    <input type=\"submit\" value=\"Submit\" className=\"fbsubmitbtn \"/>\n    </form>\n    </div>\n  );\n}\n\nfunction sendFeedback (serviceID,templateId, variables) {\n window.emailjs.send(\n   serviceID, templateId,\n   variables\n   ).then(res => {\n     console.log('Email successfully sent!')\n   })\n   // Handle errors here however you like, or use a React error boundary\n   .catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\n }\n","import React,{useState} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../headers/KwykHeader\";\nimport SessionHeader from \"../headers/SessionHeader\";\nimport '../static/css/feedback.css';\nimport '../static/css/about.css';\nimport * as constant from '../components/Constants'\nfunction About() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-2\"></div>\n        <div className=\"col-lg-8\">\n          <Header />\n          <ShowAboutUs />\n        </div>\n      <div className=\"col-lg-2\"></div>\n    </div>\n  </div>\n  );\n}\nexport default About;\n\nfunction ShowAboutUs() {\n  return(\n    <div className=\"fbarea\">\n      <div className=\"fblabel\"></div>\n      <div className=\"fblabel wrap\">{constant.aboutUs1}</div>\n      <div className=\"fblabel wrap\">{constant.aboutUs2}</div>\n    </div>\n  );\n}\n","import React, {useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../headers/KwykHeader\";\nimport * as constant from '../components/Constants'\nimport usePost from \"../hooks/usePost\";\nimport DisplayAlert from '../components/DisplayAlert'\n\nfunction PasswordReset() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-2\"></div>\n        <div className=\"col-sm-8 chatcolor\">\n            <Header />\n            <br />\n            <ResetArea />\n        </div>\n        <div className=\"col-sm-2\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default PasswordReset;\n\nfunction ResetArea() {\n  const [email, setEmail] = useState(\"\");\n  const [btnValue, setBtnValue] = useState(\"Reset Password\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [pwdMessage,setPwdMessage] = useState(\"\");\n  let history = useHistory();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    let message = '';\n    if(newPassword === confirmPassword){\n      message = <ChangePwd email={email} password={newPassword}/>\n      setPwdMessage(message);\n      setBtnValue(\"Home\")\n      setEmail(\"\")\n      setNewPassword(\"\")\n      setConfirmPassword(\"\")\n    }\n    else {\n      message = \"Password Mismatch\";\n      setPwdMessage(message);\n    }\n  }\n  function handleEmail(e) {\n    setEmail(e.target.value);\n  }\n  function handleOldPassword(e) {\n    setNewPassword(e.target.value);\n  }\n  function handleNewPassword(e) {\n    setConfirmPassword(e.target.value);\n  }\n  function handleClick(e) {\n    if(e.target.value === 'Home'){\n      sessionStorage.removeItem('loginmessage');\n      history.push({\n          pathname:`/`,\n      });\n    }\n  }\n  return(\n    <div className=\"pwdreset\">\n    <form className=\"loginform\" onSubmit={handleSubmit}>\n      <label className=\"pwdtext\"> Change your password here...</label>\n      <input type=\"text\" name=\"email\" className=\"text\" placeholder=\"email id\"\n      value={email} onChange={handleEmail} required/><br/>\n      <input type=\"password\" name=\"password\" className=\"text\" placeholder=\"new password\"\n        value={newPassword} onChange={handleOldPassword} required/><br/>\n      <input type=\"password\" name=\"password\" className=\"text\" placeholder=\"confirm password\"\n          value={confirmPassword} onChange={handleNewPassword} required/><br/>\n      <label className=\"pwdmessage\">{pwdMessage}</label>\n      <input type=\"submit\" value={btnValue} className=\"pwdbtn\" onClick={handleClick}/>\n      </form>\n    </div>\n  );\n}\n\nfunction ChangePwd(props) {\n  const url = constant.pwdResetURL;\n  let message = '';\n  const dataText = { \"email\": props.email, \"password\": props.password}\n  const fetchResponse = usePost(url, dataText, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const response = fetchResponse.data;\n  if (response['status'] === 'success'){\n        message = constant.pwdResetSuccessMsg;\n  }\n  else{\n     message = constant.pwdResetFailedMsg;\n  }\n  return(`${message}`);\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from \"../headers/KwykHeader\";\nimport SessionHeader from \"../headers/SessionHeader\";\nimport '../static/css/error.css';\n\nfunction Page404() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-2\"></div>\n        <div className=\"col-sm-8 chatcolor\">\n            <Header />\n            <Display404 />\n        </div>\n        <div className=\"col-sm-2\"></div>\n      </div>\n    </div>\n  );\n}\nfunction Display404() {\n  return(\n    <div className='error'>\n       <h2><div className='message'>Error: 404 - Page not found</div></h2>\n       <Link to='/'>\n       <div className='link'>Home</div>\n       </Link>\n    </div>\n  );\n}\n\nexport default Page404;\n","import React, {useState} from 'react';\nimport Header from \"../headers/KwykHeader\";\nimport '../static/css/contents.css';\nimport TopicSelectionScreen from \"./TopicSelectionScreen\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport AdminAccessDenied from '../components/AdminAccessDenied';\nimport * as constant from '../components/Constants';\n\nfunction AdminScreen() {\n  let history = useHistory();\n  const location = useLocation();\n\n  if((sessionStorage.getItem('useremail') != null) && (sessionStorage.getItem('is_admin') === 'true')){\n        return <TopicSelection />\n  }\n  else{\n    if(sessionStorage.getItem('is_admin') === 'false'){\n      return <AdminAccessDenied />\n    }\n    const destinationPath = location.pathname\n    history.push({\n        pathname:`/`,\n        query: {destinationPath}\n      });\n    return null;\n  }\n}\nexport default AdminScreen;\n\nfunction TopicSelection(){\n    const [session,setSession] = useState(\"\");\n    const [subtopic,setSubTopic] = useState(\"\");\n\n    function getSelectedSubTopic(data){\n      setSubTopic(data);\n    }\n    function getSelectedSession(data){\n      setSession(data);\n    }\n    return(\n      <div className=\"container\">\n        <div className=\"row\">\n          <Header/>\n          <div className=\"topics-subtopics\">\n            <TopicSelectionScreen\n              getSelectedSession={getSelectedSession}\n              topic={constant.pySkillsTopic}\n              subtopic={subtopic}\n              getSelectedSubTopic={getSelectedSubTopic}\n              />\n\n          </div>\n        </div>\n      </div>\n    );\n}\n\n/*function DisplayButton(props){\n  let history = useHistory();\n  let buttonDisplay;\n  //const [buttonDisplay, setButtonDisplay] = useState(\"none\");\n  if(props.subtopic){\n    buttonDisplay =\"block\";\n  }\n  else{\n    buttonDisplay =\"none\";\n  }\n  function handleClick(e){\n      history.push({\n        pathname:'/admin/'+props.topic+'/'+props.subtopic\n      });\n  }\n  return(\n    <button className=\"next-button\" value=\"start\"\n      onClick={handleClick} style={{display: buttonDisplay}}>Next >> </button>\n  );\n}*/\n","import React from 'react';\nimport Header from \"../headers/KwykHeader\";\nimport SessionHeader from \"../headers/SessionHeader\";\nimport '../static/css/error.css';\n\nfunction Error() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-2\"></div>\n        <div className=\"col-lg-8 chatcolor\">\n            <Header />\n            <DisplayError />\n        </div>\n        <div className=\"col-lg-2\"></div>\n      </div>\n    </div>\n  );\n}\nfunction DisplayError() {\n  return(\n    <div className='error'>\n       <h4><div className='message'>Wrong topic or subtopic. Please check your URL!</div></h4>\n    </div>\n  );\n}\n\nexport default Error;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Header from \"../headers/KwykHeader\";\nimport SessionHeader from \"../headers/SessionHeader\";\nimport '../static/css/error.css';\n\nfunction FeedbackThanks() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-2\"></div>\n        <div className=\"col-sm-8 chatcolor\">\n            <Header />\n            <ThankYouMessage />\n        </div>\n        <div className=\"col-sm-2\"></div>\n      </div>\n    </div>\n  );\n}\nfunction ThankYouMessage() {\n  const history = useHistory();\n  sessionStorage.clear();\n  function handleClick() {\n    history.push({\n      pathname:`/`\n    });\n  }\n  return(\n    <div className='thanks fbarea'>\n       <div className='fbtlabel'>Thank you for your feedback !</div>\n       <button className=\"fbsubmitbtn\" onClick={handleClick}>Home</button>\n    </div>\n  );\n}\n\nexport default FeedbackThanks;\n","import React, { useState } from \"react\";\nimport TopicHeader from \"../headers/TopicHeader\";\nimport { Editor } from '@tinymce/tinymce-react';\nimport * as constant from '../components/Constants';\nimport useFetch from \"../hooks/useFetch\";\nimport DisplayAlert from '../components/DisplayAlert';\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../headers/KwykHeader\";\n\nfunction Explanation() {\n  let history = useHistory();\n  if(sessionStorage.getItem('topic') == null){\n    history.push({\n      pathname:`/404`\n    });\n    return null;\n  }\n  else {\n    return <ShowExplanationPage />\n  }\n}\n\nexport default Explanation;\n\nfunction ShowExplanationPage() {\n  const topic = sessionStorage.getItem('topic');\n  const subtopic = sessionStorage.getItem('subtopic');\n  const username = sessionStorage.getItem('username');\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-2\"></div>\n        <div className=\"col-md-8\">\n            <Header username={username}/>\n            <ShowExplanation topic={topic} subtopic={subtopic}/>\n        </div>\n        <div className=\"col-md-2\"></div>\n      </div>\n    </div>\n  );\n}\n\nfunction ShowExplanation(props) {\n  /*const data = props.data;\n  const topics = data[\"topics\"];\n  const topicWordsResponses = data[\"topic_answers\"];\n  const topicWords = topicWordsResponses[\"topic_words\"];\n  const topicExplanation = topicWordsResponses[\"explanation\"];\n  const topicUserWords = props.topicUserWords;\n  topicWords.sort();\n  const wordExplanations = topicWords.map((word,index)=>{\n    if(word in topicUserWords){\n      return <DisplayExplanation word={word} topicExplanation={topicExplanation} key={index}/>\n    }\n  });\n*/\n  const url = constant.kwykURL+\"explaination_custom\"+\"/\"+props.topic+\"/\"+props.subtopic;\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const data = fetchResponse.data\n  return(\n    <div >\n      <TopicHeader topic={props.topic} subtopic={props.subtopic}/>\n      <div className=\"explanation-area\">\n      <Editor\n       initialValue={data}\n       apiKey= {constant.TINYMCE_APIKEY}\n       disabled={true}\n       init={{\n         plugins: ['noneditable','autoresize'],\n         toolbar: false,\n         menubar: false,\n         inline: true,\n         content_style: 'p { background-color: #ffffff; padding-left: 3px}' + 'ol { background-color: #ffffff; padding:3px; }'+\n         'ul { background-color: #ffffff; padding:3px; }'+'.mce-content-body { background-color: #ffffff }'\n      }} />\n      </div>\n\n    </div>\n  );\n}\n\n\nfunction DisplayExplanation(props) {\n  const explanations = props.topicExplanation[props.word];\n  return(\n    <div className=\"explain-area\">\n      <label className=\"topicname\">\n        {props.word}\n      </label>\n      <div className=\"row explain-text\">\n        {explanations}\n      </div>\n    </div>\n\n  );\n}\n","import React, {useState} from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport DisplayTopic from '../screens/DisplayTopic';\nimport ChatBot from '../screens/ChatBot'\nimport UserStats from '../screens/UserStats'\nimport Responses from '../screens/Responses'\nimport Insights from '../screens/Insights'\nimport Login from \"../screens/Login\";\nimport Feedback from \"../screens/Feedback\";\nimport About from \"../screens/About\";\nimport PasswordReset from './PasswordReset';\nimport Page404 from './Page404';\nimport AdminScreen from \"../screens/AdminScreen\"\nimport SessionSelectionScreen from \"../screens/SessionSelectionScreen\"\nimport Error from './Error';\nimport FeedbackThanks from './FeedbackThanks';\nimport Explanation from \"../screens/Explanations\";\n\nfunction Routes(){\n    return(\n      <Router  basename={`${process.env.PUBLIC_URL}/`}>\n      <Switch>\n      <Route path=\"/\" exact render={() => <Login/>} />\n      <Route path=\"/topics\" exact render={() => <DisplayTopic/>} />\n      <Route path=\"/reset\" exact render={() => <PasswordReset/>} />\n      <Route path=\"/chat/:topic/:subtopic\" render={() => <ChatBot/>} />\n      <Route path=\"/user_stats/:topic/:subtopic\" render={() => <UserStats/>} />\n      <Route path=\"/view_responses/:topic/:subtopic\" render={() => <Responses/>} />\n      <Route path=\"/explanation/:topic/:subtopic\" render={() => <Explanation/>} />\n      <Route path=\"/feedback\" render={() => <Feedback/>} />\n      <Route path=\"/about\" render={() => <About/>} />\n      <Route path=\"/admin\" exact render={() => <AdminScreen/>} />\n      <Route path=\"/admin/:topic/:subtopic\" exact render={() => <SessionSelectionScreen/>} />\n      <Route path=\"/analytics/:subtopic\" render={() =>\n                <Insights />} />\n      <Route path=\"/error\" render={() => <Error/>} />\n      <Route path=\"/thanks\" exact render={() => <FeedbackThanks/>} />\n      <Route render={() => <Page404/>} />\n      </Switch>\n      </Router>\n    );\n}\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Routes from './components/Routes';\n\nfunction App() {\n  return(\n    <Router >\n      <div className=\"App\">\n        <Routes />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/knowbotpng.c964294f.png\";"],"sourceRoot":""}