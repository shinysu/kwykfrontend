{"version":3,"sources":["static/images/clock.png","static/images/idea.png","static/images/send.png","components/Constants.js","utils/jsutils.js","headers/KwykHeader.js","headers/SessionHeader.js","hooks/useFetch.js","components/DisplayAlert.js","components/SelectionButtons.js","screens/TopicSelectionScreen.js","screens/DisplayTopic.js","headers/TimerHeader.js","hooks/useTimer.js","hooks/usePost.js","screens/ChatBot.js","screens/UserStats.js","components/Tab.js","components/WordCloud.js","headers/TopicHeader.js","screens/Explanations.js","screens/Responses.js","screens/Statistics.js","components/AdminAccessDenied.js","screens/Insights.js","screens/Login.js","screens/Feedback.js","components/PasswordReset.js","components/Page404.js","screens/AdminScreen.js","screens/SessionSelectionScreen.js","components/Error.js","components/Routes.js","App.js","index.js","static/images/knowbotpng.png"],"names":["module","exports","tableColors","kwykURL","convertToCamelCase","name","words","split","convertedName","i","length","toUpperCase","substr","Header","props","username","sessionStorage","getItem","topic","utils","className","src","knowbotSVG","alt","DisplayDropDown","history","useHistory","CustomToggle","React","forwardRef","ref","children","onClick","href","e","preventDefault","style","color","backgroundColor","paddingTop","Dropdown","Toggle","as","Menu","size","title","Item","push","pathname","clear","SessionHeader","useFetch","url","defaultResponse","useState","data","setData","a","fetch","res","json","result","isLoading","error","useEffect","getDataFromAPI","DisplayAlert","message","Alert","variant","SelectionButtons","clickedButton","setClickedButton","topics","height","getClickedButton","getSelectedTopic","styling","buttonList","map","index","TopicButton","textColor","buttonColor","key","value","target","TopicSelectionScreen","DisplayTopics","DisplaySubTopics","getSelectedSubTopic","DisplayMessage","fetchResponse","constant","GetSubTopics","subtopics","TopicSelection","setTopic","subtopic","setSubTopic","DisplayStartButton","DisplayTopic","location","useLocation","destinationPath","query","buttonDisplay","setItem","JSON","stringify","display","TimerHeader","useTimer","mins","secs","seconds","setSeconds","minutes","setMinutes","setTime","time","setInterval","clearInterval","usePost","dataText","requestOptions","method","headers","body","postDataToAPI","ChatBot","DisplayTest","chatMessages","prevWords","parse","ShowTimeHeader","DisplayChat","parseInt","setChatMessages","userInput","setUserInput","actions","addChat","includes","chatList","GetChatMessages","messagesEndRef","useRef","current","scrollIntoView","behavior","DisplayForm","getUserInput","input","ShowWelcomeChat","GetWord","ShowHint","DisplayUserInput","textArea","document","querySelector","rows","rowsMin","disabled","text","getCommand","useremail","window","word","Test","messageText","BotReply","hint","handleClick","ideapng","onChange","onKeyPress","charCode","required","sendlogo","UserReply","id","CheckStatsAndDisplay","attemptedWords","attemptedCount","skippedWordCount","StatsPage","DisplayStats","UserStats","skippedCount","DisplayScore","RetrySkips","ViewResponses","Tabs","styled","div","tabcolor","Tab","button","active","Content","ShowWordCloud","options","content","allowNumbers","maxWords","stemmer","stopwordsInput","fontSizes","rotations","rotationAngles","padding","background","width","marginLeft","marginRight","TopicHeader","ShowExplanation","initialValue","apiKey","init","plugins","toolbar","menubar","inline","content_style","ShowResponsePage","ResponsesTab","setActive","reload","ShowResponses","Responses","topicUserWords","topicWordsResponses","topicWords","topicTopWords","sort","wordResponses","DisplayWordResponses","topWords","Statistics","totalUsers","totalWords","leastResponse","mostSkips","commonResponseCount","userResponseData","stats","skipsCount","answeredCount","userAnswerCount","topicData","userWords","Object","keys","entries","userEntries","concat","wordArray","occurrences","reduce","obj","getWordFrequency","getStats","getSortedData","userResponse","userData","divisions","userDivisionData","userResponseCount","answerDivisions","Math","round","ansdivpercent","valRange","centPercent","percent","count","range","getResponseHist","statButtons","maxVal","type","item","DisplayButton","open","setOpen","Button","aria-controls","aria-expanded","Collapse","in","DisplayData","ShowProgressBar","statsBar","statData","popover","users","join","Popover","Title","OverlayTrigger","overlay","ProgressBar","now","label","max","min","sortedData","b","n","slice","AdminAccessDenied","DisplayError","Insights","StatisticsTab","urlSplit","filter","session","ShowInsights","selectedView","setView","ViewSelection","getView","view","DisplayUserData","headerWords","limits","headerData","userDivisions","limitsData","begin","end","getLimits","getHeaderWords","GetTableHeader","GetTableData","titleWord","header","ViewByUsers","ViewByResponses","defaultValue","user","userVal","wordUserCount","getWordResponseCount","tableData","wordCount","wordRow","limit","wordColor","DisplayLogin","sessionPath","DisplayIcon","LoginTab","Login","Redirect","knowbotpng","SignInForm","SignUpForm","email","setEmail","password","setPassword","loginMessage","setLoginMessage","onSubmit","ValidateUser","placeholder","to","userName","setUserName","CreateNewUser","sessionName","response","is_admin","setSessionStorage","session_name","removeItem","initializeSessionStorage","destination","getDestinationScreen","topicDetail","getTopicFromURL","Feedback","ShowTemplate","serviceID","templateId","variables","emailjs","send","then","console","log","catch","err","sendFeedback","from_name","reply_to","PasswordReset","ResetArea","btnValue","setBtnValue","newPassword","setNewPassword","confirmPassword","setConfirmPassword","pwdMessage","setPwdMessage","ChangePwd","Display404","Page404","AdminScreen","SessionSelectionScreen","DisplaySessions","setSession","sessions_details","sessions","k","ShowTestLink","getSessionSlug","sessionname","sessionslug","copySuccess","setCopySuccess","textRef","basename","Error","Routes","process","path","exact","render","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1df6c680.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clock.195b3e8e.png\";","module.exports = __webpack_public_path__ + \"static/media/idea.8c35f5e8.png\";","module.exports = __webpack_public_path__ + \"static/media/send.47d6774c.png\";","//export const username = 'kwyktest@gmail.com'\n//export const username = 'kwykreview@gmail.com'\nexport const greenColor =\"#7bc143\";\nexport const greyColor = \"#edeff2\";\nexport const whiteColor = \"#ffffff\";\nexport const welcomeMessage=\"You will be given a term (a word or a phrase). Please enter as many terms as possible that come to you mind. Separate multiple terms with commas.\"\nexport const tableColors = ['#740000', '#c55b11','#f8aa73', '#b2de83', '#7bc143', '#02b150' ]\nexport const loginTabColor = \"#ffffff\";\nexport const adminTabColor = \"#ffffff\";\nexport const blackColor = \"#000000\";\nexport const darkGrey = \"#959595\";\n\n///URL changes\n//export const kwykURL = \"http://localhost:3000/\";\nexport const kwykURL = \"https://shinykwyk.infoassistants.com/\";\n//export const kwykURL = \"http://ac7c1f0d2149.ngrok.io/\"\nexport const postURL= kwykURL + \"input_custom\";\nexport const loginURL = kwykURL + \"login_custom\";\nexport const pwdResetURL = kwykURL + \"pwd_reset\";\nexport const pwdResetSuccessMsg = 'Your password has been changed! SignIn to continue';\nexport const pwdResetFailedMsg = 'Email id is not registered. Signup with your email id';\nexport const feedbackMessage = 'Hello! you feedback is important to us. Tell us about your experience, issues faced, ideas and suggestions for improvement'\nexport const fbToEmail = 'kwyktest01@gmail.com';\nexport const TINYMCE_APIKEY = \"0h3vsxidv9gzrfe2zafqct55zkg7tfj04dke4pk5j88e3aot\";\nexport const pySkillsTopic = \"python\";\nexport const pySkillsSubTopic = \"python basics\";\n","export function convertToCamelCase(name) {\n  const words = name.split(\" \");\n  let convertedName = \"\";\n  for (let i = 0; i < words.length; i++) {\n    words[i] = words[i][0].toUpperCase() + words[i].substr(1);\n    convertedName = convertedName + \" \" +words[i]\n  }\n  return convertedName;\n}\n","import React from 'react';\nimport '../static/css/header.css';\nimport knowbotSVG from '../static/images/knowbotpng.png';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport * as constant from '../components/Constants'\nimport { useHistory } from \"react-router-dom\";\nimport * as utils from '../utils/jsutils'\n\nfunction Header(props){\n  let session = \"\";\n  let tagline =\"\";\n  let fontSize = \"1em\"\n  let username=\"\";\n  session = sessionStorage.getItem('session_name');\n  if(session === 'undefined'){\n    session = ''\n  }\n  if(sessionStorage.getItem('username')){\n    username = sessionStorage.getItem('username');\n  }\n  if(props.topic){\n    tagline = 'about '+utils.convertToCamelCase(props.topic)\n    fontSize = \"1em\"\n  }\n\n  return(\n    <div className=\"row headercontainer\">\n        <div className=\"col-11\">\n          <div className=\"row window-color\">\n            <div className=\"col-2 headerfont\">\n              <img src={knowbotSVG} className=\"knowbotlogo\" alt=\"logo\" />\n            </div>\n            <div className=\"col-md-6 col-7 headerfont\">\n              <div className=\"row title\">\n                PySkills (Beta-1)\n              </div>\n              <div className=\"row subtitle\">\n                Improve your Python skills\n              </div>\n            </div>\n            <div className=\"col-md-4 col-3 username \">\n              {username}\n            </div>\n          </div>\n        </div>\n        <div className=\"col-1 headerfont\">\n          <DisplayDropDown />\n        </div>\n      </div>\n  );\n}\n\nexport default Header;\n\nfunction DisplayDropDown() {\n  let history = useHistory();\n  function handleLogout() {\n    sessionStorage.clear();\n    history.push({\n      pathname:`/`\n    });\n  }\n  function handleFeedback() {\n      history.push({\n        pathname:`/feedback`\n      });\n    }\n  const CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\n  <a\n    href=\"\"\n    ref={ref}\n    onClick={e => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    {children}\n    <i className=\"fas fa-ellipsis-v ellipsisbutton\"\n       style={{color:constant.blackColor,\n                backgroundColor: constant.whiteColor,\n                paddingTop: \"2vh\"}}>\n    </i>\n  </a>\n));\n\n  return (\n  <Dropdown style={{backgroundColor: constant.whiteColor}}>\n        <Dropdown.Toggle as={CustomToggle} />\n        <Dropdown.Menu size=\"sm\" title=\"\">\n          <Dropdown.Item href=\"#\" onClick={handleFeedback} className=\"ellipsismenu\">FeedBack</Dropdown.Item>\n          <Dropdown.Item href=\"#\" onClick={handleLogout} className=\"ellipsismenu\">Logout</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n\n  );\n\n}\n","import React from \"react\";\nimport '../static/css/chat.css';\n\nfunction SessionHeader() {\n  let username = '';\n  let session = '';\n  if(sessionStorage.getItem('session_name')){\n    session = sessionStorage.getItem('session_name');\n  }\n  \n  return(\n    <div className=\"row headercontainer\">\n        <div className=\"col-12 userheader\">\n          {session}\n        </div>\n    </div>\n  );\n}\n\nexport default SessionHeader;\n","import { useState, useEffect } from \"react\";\n\nfunction useFetch(url, defaultResponse) {\n  const [data, setData] = useState(defaultResponse);\n  async function getDataFromAPI() {\n    try {\n      const res = await fetch(url);\n      const result = await res.json();\n      let dataList = result;\n      setData({\n        isLoading: false,\n        data: dataList\n      });\n    } catch (e) {\n      setData({\n        isLoading: false,\n        error: e\n      });\n    }\n  }\n\n  useEffect(() => {\n    getDataFromAPI()\n  }, [url]);\n  return data;\n}\n\nexport default useFetch;\n","import React from 'react';\nimport Alert from 'react-bootstrap/Alert'\n\nfunction DisplayAlert(props) {\n  let message = \"\"+props.message;\n  return(\n    <Alert variant='danger' className='alert'>\n        {message}\n    </Alert>\n\n  );\n}\n\nexport default DisplayAlert;\n","import React, {useState} from 'react';\nimport * as constant from '../components/Constants'\nimport '../static/css/contents.css';\nimport * as utils from '../utils/jsutils'\n\nfunction SelectionButtons(props){\n  const [clickedButton, setClickedButton] = useState(\"\");\n  const topics = props.topics;\n  let height = \"30vh\";\n  function getClickedButton(name){\n    props.getSelectedTopic(name);\n    setClickedButton(name);\n  }\n  if (props.styling === \"topics-area\"){\n    if(clickedButton === \"\"){\n      height = \"50vh\";\n    }\n    else {\n      height = \"22vh\";\n    }\n  }\n\n  const buttonList = topics.map((topic, index) =>\n      <TopicButton name={topic} textColor={topic === clickedButton ? constant.whiteColor : constant.blackColor }\n      buttonColor={topic === clickedButton ? constant.darkGrey : constant.greyColor}\n      getClickedButton={getClickedButton} key={index}/>\n  );\n  return (<div className={`${props.styling}`} style={{height:height}}>{buttonList}</div>);\n}\n\nexport default SelectionButtons;\n\nfunction TopicButton(props){\n  function handleClick(e){\n    props.getClickedButton(e.target.value);\n  }\n  return (<button className=\"rounded-pill topic-btn\" value={props.name}\n            style={{color: props.textColor, backgroundColor: props.buttonColor}}\n            onClick={handleClick}> {utils.convertToCamelCase(props.name)}</button>);\n}\n","import React from 'react';\nimport * as constant from '../components/Constants'\nimport useFetch from \"../hooks/useFetch\";\nimport '../static/css/contents.css';\nimport DisplayAlert from '../components/DisplayAlert';\nimport SelectionButtons from '../components/SelectionButtons';\n\nfunction TopicSelectionScreen(props) {\n  return(\n    <div>\n        <div className=\"topics-div\">\n          <DisplayTopics getSelectedTopic={props.getSelectedTopic} styling={\"topics-area\"}/>\n        </div>\n        <div className=\"subtopics-div\">\n          <DisplaySubTopics topic={props.topic} getSelectedSubTopic={props.getSelectedSubTopic}/>\n        </div>\n      </div>\n  );\n}\n\nexport default TopicSelectionScreen;\n\nfunction DisplayMessage(props){\n  return(\n    <div className=\"info-text\">\n    <br />\n      {props.message}\n    </div>\n  );\n}\n\nfunction DisplayTopics(props){\n  const url = constant.kwykURL+\"get/topics/custom\";\n  const message = \"Please choose a topic ...\"\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const topics = fetchResponse.data\n  return (\n    <div className=\"subtopics\">\n    <DisplayMessage message={message}/>\n    <SelectionButtons topics={topics} getSelectedTopic={props.getSelectedTopic}\n        styling={props.styling}/>\n    </div>\n  );\n}\n\n\nfunction DisplaySubTopics(props){\n  if(props.topic){\n    return(\n      <div className=\"subtopics\">\n      <DisplayMessage message=\"Choose your subtopic\"/>\n      <GetSubTopics getSelectedSubTopic={props.getSelectedSubTopic} topic={props.topic}\n                styling={\"subtopics-area\"}/>\n      </div>\n    );\n  }\n  else{\n    return(\n      <div>\n      <DisplayMessage message=\"\"/>\n      <div className=\"subtopics-area\"></div>\n      </div>\n    );\n  }\n}\n\n\nfunction GetSubTopics(props){\n  const url = constant.kwykURL+\"get/\"+props.topic+\"/subtopics\";\n\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error}/>\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const subtopics = fetchResponse.data\n  return <SelectionButtons topics={subtopics} getSelectedTopic={props.getSelectedSubTopic} styling={props.styling}/>;\n}\n","import React, {useState} from 'react';\nimport Header from \"../headers/KwykHeader\";\nimport SessionHeader from \"../headers/SessionHeader\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport '../static/css/contents.css';\nimport TopicSelectionScreen from \"./TopicSelectionScreen\";\n\nfunction DisplayTopic(){\n  let history = useHistory();\n  const location = useLocation();\n  if(sessionStorage.getItem('useremail') == null){\n    const destinationPath = location.pathname\n    history.push({\n      pathname:`/`,\n      query: {destinationPath}\n    });\n    return null;\n  }\n  else{\n    return <TopicSelection/>\n  }\n}\n\nfunction TopicSelection(){\n    const [topic,setTopic] = useState(\"\");\n    const [subtopic,setSubTopic] = useState(\"\");\n    function getSelectedTopic(data){\n      setTopic(data);\n    }\n    function getSelectedSubTopic(data){\n      setSubTopic(data);\n    }\n    return(\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-2\"></div>\n            <div className=\"col-lg-8 non-header\">\n              <Header />\n              <TopicSelectionScreen\n                  getSelectedTopic={getSelectedTopic}\n                  topic={topic}\n                  getSelectedSubTopic={getSelectedSubTopic}\n                  />\n              <DisplayStartButton topic={topic} subtopic={subtopic}/>\n            </div>\n          <div className=\"col-lg-2\"></div>\n        </div>\n      </div>\n\n    );\n}\n\nexport default DisplayTopic;\n\nfunction DisplayStartButton(props){\n  let history = useHistory();\n  let buttonDisplay;\n  if(props.subtopic){\n    buttonDisplay =\"block\";\n  }\n  else{\n    buttonDisplay =\"none\";\n  }\n  function handleClick(e){\n      initializeSessionStorage(props.topic, props.subtopic)\n      history.push({\n        pathname:'/chat/'+props.topic+'/'+props.subtopic,\n      });\n  }\n  return(\n    <button className=\"start-button fixed-bottom\" value=\"start\"\n      onClick={handleClick} style={{display: buttonDisplay}}>Start</button>\n\n  );\n}\n\nfunction initializeSessionStorage(topic, subtopic) {\n  sessionStorage.setItem('topic', topic);\n  sessionStorage.setItem('subtopic', subtopic);\n  sessionStorage.setItem('minutes', 0);\n  sessionStorage.setItem('seconds', 0);\n  sessionStorage.setItem('userResponses', JSON.stringify([]));\n  sessionStorage.setItem('retry', false);\n}\n","import React from 'react';\nimport '../static/css/header.css';\nimport clock from '../static/images/clock.png';\n\n\nfunction TimerHeader(props){\n  const time = props.time;\n  const username = sessionStorage.getItem('username');\n  return(\n    <div className=\"row headercontainer timer-row\">\n      <div className=\"col-8\">\n        {username}\n      </div>\n      <div className=\"col-4\">\n        <img src={clock} className=\"clock-img\" alt=\"logo\" />\n        {time[0]} : {time[1]}\n      </div>\n    </div>\n  );\n}\n\nexport default TimerHeader;\n","import { useState, useEffect } from \"react\";\nimport '../static/css/header.css';\n\nconst useTimer = (mins, secs) => {\n    const [seconds, setSeconds] = useState(secs);\n    const [minutes, setMinutes] = useState(mins);\n    useEffect(() => {\n      const time = setInterval(setTime, 1000);\n        return () => {\n          clearInterval(time);\n          //props.getTime(minutes,seconds);\n        }\n    },[seconds]);\n\n    function setTime(){\n      setSeconds(seconds + 1);\n      if(seconds === 59){\n        setSeconds(0);\n        setMinutes(minutes + 1);\n      }\n    }\n\n    return(\n        [minutes,seconds]\n    );\n}\n\nexport default useTimer;\n","import { useState, useEffect } from \"react\";\n\nfunction usePost(url, dataText, defaultResponse) {\n  const [data, setData] = useState(defaultResponse);\n  const  requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify(dataText)\n  };\n  async function postDataToAPI() {\n    try {\n      const res = await fetch(url, requestOptions);\n      const result = await res.json();\n      setData({\n        isLoading: false,\n        data: result\n      });\n    } catch (e) {\n      setData({\n        isLoading: false,\n        error: e\n      });\n    }\n  }\n\n  useEffect(() => {\n    postDataToAPI()\n  }, [url]);\n  return data;\n}\n\nexport default usePost;\n","import React, {useState, useEffect, useRef} from 'react';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Header from \"../headers/KwykHeader\";\nimport TimerHeader from \"../headers/TimerHeader\";\nimport useTimer from \"../hooks/useTimer\";\nimport ideapng from '../static/images/idea.png';\nimport sendlogo from '../static/images/send.png';\nimport '../static/css/chat.css';\nimport * as constant from '../components/Constants'\nimport usePost from \"../hooks/usePost\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport DisplayAlert from '../components/DisplayAlert';\nimport SessionHeader from \"../headers/SessionHeader\";\n\nvar time;\nvar currentWord = '';\nvar is_retry;\n\nfunction ChatBot(){\n  let history = useHistory();\n  const location = useLocation();\n  if(sessionStorage.getItem('useremail') == null){\n    const destinationPath = location.pathname\n    history.push({\n      pathname:`/`,\n      query: {destinationPath}\n    });\n    return null;\n  }\n  else{\n    return <DisplayTest />\n  }\n}\n\nexport default ChatBot;\n\n\nfunction DisplayTest() {\n  let chatMessages = '';\n  let prevWords = [];\n  if(sessionStorage.getItem('userResponses')){\n    prevWords = JSON.parse(sessionStorage.getItem('userResponses'));\n  }\n  is_retry = false;\n  if(sessionStorage.getItem('retry') === 'true'){\n    is_retry = true;\n    chatMessages=[\"retry\"];\n  }\n  else{\n    chatMessages=[\"welcome\",\"first\"];\n  }\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const topic = sessionStorage.getItem('topic');\n  const username = sessionStorage.getItem('username');\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-2\"></div>\n        <div className=\"col-lg-8 non-header\">\n          <Header topic={topic} username={username}/>\n          <ShowTimeHeader/>\n          <DisplayChat minutes={minutes}\n                     seconds={seconds}\n                     chatMessages={chatMessages}\n                     prevWords={prevWords}\n                     />\n        </div>\n        <div className=\"col-lg-2\"></div>\n      </div>\n    </div>\n  );\n}\n\n\nfunction ShowTimeHeader(){\n  const minutes = parseInt(sessionStorage.getItem('minutes'));\n  const seconds = parseInt(sessionStorage.getItem('seconds'));\n  time=useTimer(minutes, seconds);\n  return '';\n}\n\n\nfunction DisplayChat(props){\n  const [chatMessages, setChatMessages] = useState(props.chatMessages);\n  const [userInput, setUserInput] = useState(\"\");\n  const actions = [\"welcome\",\"first\",\"next\",\"skip\",\"hint\",\"afterinput\",\"retry\"];\n  function getUserInput(input){\n    setUserInput(input);\n  }\n  function addChat(message){\n    if(actions.includes(message)){\n      setChatMessages([...chatMessages,message]);\n    }\n    else{\n      setChatMessages([...chatMessages,message,\"afterinput\"]);\n    }\n  }\n  const chatList = chatMessages.map((message,index) => {\n    return <GetChatMessages message={message} key={index}\n         prevWords={props.prevWords} userInput={userInput} addChat={addChat}/>\n  }\n );\n const messagesEndRef = useRef(null);\n useEffect(() => {\n    messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n  },[chatList]);\n return(\n    <div className=\"chatcolor\">\n      <div className=\"chatarea\">\n      <ul>\n        {chatList}\n        <li><div className=\"scroll-div\" ref={messagesEndRef} /></li>\n      </ul>\n      </div>\n        <DisplayForm addChat={addChat} getUserInput={getUserInput}/>\n    </div>\n  );\n}\n\n\nfunction GetChatMessages(props) {\n  const message = props.message;\n  if(message ===\"welcome\"){\n    return <ShowWelcomeChat />;\n  }else if(message ===\"first\" || message ===\"next\" || message ===\"skip\" ||message ===\"retry\"){\n    return <GetWord addChat={props.addChat} message={message} prevWords={props.prevWords}/>\n  }\n  else if(message ===\"hint\"){\n    return <ShowHint addChat={props.addChat} />\n  }\n  else if(message ===\"afterinput\"){\n    return <GetWord addChat={props.addChat} message={props.userInput} prevWords={props.prevWords}/>\n  }\n  else{\n    return <DisplayUserInput input={message}/>\n  }\n}\n\n\nfunction ShowWelcomeChat(props){\n  const textArea = document.querySelector('textarea');\n  const textRowCount = textArea ? textArea.value.split(\"\\n\").length : 0;\n  const rows = textRowCount + 3;\n  return(\n    <li>\n      <div className=\"row bot\">\n        <TextareaAutosize className=\"botmessage\" rows={rows} value={constant.welcomeMessage} rowsMin={3} disabled/>\n      </div>\n    </li>\n  );\n}\n\n\nfunction GetWord(props){\n  let history = useHistory();\n  const url = constant.postURL;\n  let text = getCommand(props.message);\n  const useremail = sessionStorage.getItem('useremail');\n  const topic = sessionStorage.getItem('topic');\n  const subtopic = sessionStorage.getItem('subtopic');\n  const session = sessionStorage.getItem('session');\n\n  const dataText = { \"text\": text, \"username\": useremail, \"session\":session, \"referrer\":window.location.href};\n  const fetchResponse = usePost(url, dataText, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const word = fetchResponse.data.text;\n  if(word === 'finish_topic'){\n    sessionStorage.setItem('minutes', time[0]);\n    sessionStorage.setItem('seconds', time[1]);\n    history.push({\n      pathname:`/user_stats/${topic}/${subtopic}`\n    });\n  }\n  if (word === 'wrong_command'){\n    history.push({\n      pathname:`/error`\n    });\n  }\n  currentWord = word;\n  let prevWords =props.prevWords;\n  if(prevWords.includes(word)){\n    return <Test word={word} addChat={props.addChat}/>\n  }\n  else{\n    const messageNoun = props.message==='first' ? 'first' : 'next';\n    const messageText = \"Your \" + messageNoun + \" word is '\"+word + \"'\";\n    return (<BotReply message={messageText}  addChat={props.addChat} />);\n  }\n}\n\nfunction Test(props) {\n  useEffect(()=>{\n    props.addChat(\"next\");\n  },[props.word])\n  return <div></div>\n}\n\nfunction ShowHint(props){\n  const url = constant.postURL;\n  const text = '/explain';\n  const useremail = sessionStorage.getItem('useremail');\n  const session = sessionStorage.getItem('session');\n\n  const dataText = { \"text\": text, \"username\": useremail, \"session\": session, \"referrer\":window.location.href}\n  const fetchResponse = usePost(url, dataText, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const hint = fetchResponse.data.text;\n\n  return( <BotReply message={hint} addChat={props.addChat} />);\n}\n\nfunction DisplayForm(props){\n  const [userInput, setUserInput] = useState(\"\");\n  const buttonText = \"Skip\"\n  function handleClick(){\n    if(userInput.length > 0){\n      props.getUserInput(userInput);\n      props.addChat(userInput);\n      setUserInput(\"\");\n      /*updateAttemptedCount();\n      if(is_retry){\n        updateSkippedCount('reduce');\n      }*/\n    }\n  }\n  function handleChange(e){\n    setUserInput(e.target.value);\n  }\n  function handleHint(e){\n    props.addChat(\"hint\");\n  }\n  function handleKeyPress(e){\n    if(e.charCode === 13){\n        e.preventDefault();\n        handleClick();\n    }\n  }\n  function handleSkip(e){\n      props.addChat(\"skip\")\n      /*if(!is_retry){\n        updateSkippedCount('add');\n      }*/\n  }\n\n  return(\n    <div className=\"row input-area chatcolor\">\n      <button className=\"ideabutton\" value=\"start\" onClick={handleHint}>\n        <img src={ideapng} className=\"idealogo\" alt=\"logo\" />\n      </button>\n      <button className=\"skipbutton\" onClick={handleSkip}>{buttonText}</button>\n      <TextareaAutosize className=\"input-text\" value={userInput} onChange={handleChange}\n        onKeyPress={handleKeyPress} required/>\n      <button className=\"sendbutton\" value=\"start\" onClick={handleClick}>\n        <img src={sendlogo} className=\"idealogo\" alt=\"logo\" />\n      </button>\n    </div>\n  );\n}\n\nfunction DisplayUserInput(props){\n  return(\n    <UserReply message={props.input} />\n  )\n}\n\nfunction BotReply(props){\n  const textArea = document.querySelector('textarea');\n  const textRowCount = textArea ? textArea.value.split(\"\\n\").length : 0;\n  const rows = textRowCount + 3;\n  return(\n    <li>\n      <div className=\"row bot\">\n        <TextareaAutosize className=\"botmessage\" rows={rows} value={props.message}\n        rowsMin={3} id=\"bottext\" disabled/>\n      </div>\n    </li>\n );\n}\n\nfunction  UserReply(props){\n  return(\n  <li>\n    <div className=\"row bot\">\n      <TextareaAutosize className=\"usermessage\" value={props.message} rowsMin={3} disabled />\n    </div>\n  </li>);\n}\n\n/*function updateSkippedCount(action) {\n  let skippedCount=parseInt(sessionStorage.getItem('skipped'));\n  action ==='add' ? skippedCount++ : skippedCount-- ;\n  sessionStorage.setItem('skipped', skippedCount);\n}\n\nfunction updateAttemptedCount() {\n  let attemptedCount=parseInt(sessionStorage.getItem('attempted'));\n  attemptedCount++;\n  sessionStorage.setItem('attempted', attemptedCount);\n}\n*/\nfunction getCommand(message){\n  let text;\n  switch(message){\n    case 'skip':\n      text = '/skip';\n      break;\n    case 'first':\n    case 'next':\n      text = '/new';\n      break;\n    case 'retry':\n      text = '/retry';\n      break;\n    default:\n      text = message;\n      break;\n  }\n  return text;\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../headers/KwykHeader\";\nimport TimerHeader from \"../headers/TimerHeader\";\nimport '../static/css/stats.css';\nimport useFetch from \"../hooks/useFetch\";\nimport * as constant from '../components/Constants';\nimport DisplayAlert from '../components/DisplayAlert';\n\nfunction UserStats(){\n  let history = useHistory();\n  const useremail = sessionStorage.getItem('useremail');\n  if(useremail == null){\n    history.push({\n      pathname:`/`\n    });\n    return null;\n  }\n  else{\n    return <CheckStatsAndDisplay useremail={useremail}/>\n  }\n}\n\nfunction CheckStatsAndDisplay(props) {\n  const topic = sessionStorage.getItem('topic');\n  const subtopic = sessionStorage.getItem('subtopic');\n  const url = constant.kwykURL+\"user_attempts_custom/\"+props.useremail+\"/\"+topic+\"/\"+subtopic;\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  let history = useHistory();\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const data = fetchResponse.data;\n  const attemptedWords = data['attempted_words'];\n  const attemptedCount = attemptedWords.length;\n  const totalWords = data['topic_words'];\n  const totalWordCount = totalWords.length;\n  const skippedWordCount = totalWordCount - attemptedCount;\n  sessionStorage.setItem('userResponses',JSON.stringify(attemptedWords));\n  sessionStorage.setItem('skipped', skippedWordCount);\n  sessionStorage.setItem('attempted', attemptedCount);\n  if(skippedWordCount === 0){\n    history.push({\n        pathname:`/view_responses/${topic}/${subtopic}`\n      });\n    return null;\n  }\n  else if(attemptedCount === 0){\n    sessionStorage.setItem('retry', true);\n    history.push({\n        pathname:`/chat/${topic}/${subtopic}`\n      });\n    return null;\n  }\n  else{\n    return <StatsPage topic={topic} subtopic={subtopic}/>\n  }\n}\n\nfunction StatsPage(props){\n  const minutes = parseInt(sessionStorage.getItem('minutes'));\n  const seconds = parseInt(sessionStorage.getItem('seconds'));\n  const username = sessionStorage.getItem('username');\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-2\"></div>\n        <div className=\"col-lg-8 chatcolor\">\n            <Header username={username} />\n            <ShowTimeHeader minutes={minutes} seconds={seconds}/>\n            <DisplayStats minutes={minutes} seconds={seconds} topic={props.topic}\n            subtopic={props.subtopic} />\n        </div>\n        <div className=\"col-lg-2\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserStats;\n\nfunction ShowTimeHeader(props){\n  return '';\n}\n\nfunction DisplayStats(props){\n  const attemptedCount = parseInt(sessionStorage.getItem('attempted'));\n  const skippedCount = parseInt(sessionStorage.getItem('skipped'));\n  return(\n    <div className=\"stats-area\">\n      <DisplayScore minutes={props.minutes} seconds={props.seconds}\n      skippedCount={skippedCount} attemptedCount={attemptedCount}/>\n      <RetrySkips topic={props.topic} subtopic={props.subtopic} skippedCount={skippedCount}/>\n      <ViewResponses topic={props.topic} subtopic={props.subtopic}/>\n    </div>\n  );\n}\n\nfunction RetrySkips(props){\n  let history = useHistory();\n  if(props.skippedCount !== 0){\n    function handleClick(){\n      sessionStorage.setItem('retry', true);\n      history.push({\n        pathname:'/chat/'+props.topic+'/'+props.subtopic\n      });\n    }\n    return(\n      <div className= \"button-area\">\n      <button className=\"retry-button\" value=\"retry\" onClick={handleClick}>Retry Skipped Questions </button>\n      </div>\n    );\n  }\n  else{\n    return(\n      <div></div>\n    );\n  }\n}\n\nfunction ViewResponses(props){\n  let history = useHistory();\n  function handleClick(){\n    history.push({\n    pathname:`/view_responses/${props.topic}/${props.subtopic}`\n    });\n  }\n  return(\n    <div className= \"button-area\">\n    <button className=\"retry-button\" value=\"response\" onClick={handleClick}>See Responses & Explanation</button>\n    </div>\n  );\n}\n\n/*function SwitchTopic(){\n  let history = useHistory();\n  function handleClick(){\n    history.push('/topics')\n  }\n  return(\n    <div className= \"button-area\">\n    <button className=\"retry-button\" value=\"retry\" onClick={handleClick}>Switch Topic</button>\n    </div>\n  );\n}\n*/\nfunction FeedBack(){\n  let history = useHistory();\n  function handleClick(){\n      history.push('/feedback')\n\n  }\n  return(\n    <div className= \"button-area\">\n      <button className=\"retry-button\" value=\"retry\" onClick={handleClick}>Feedback</button>\n    </div>\n  );\n}\n\nfunction DisplayScore(props){\n  return(\n    <div className= \"display-area\">\n      <br />\n      <div className = \"row\">\n        <div className=\"col-12 topic-text center\">\n        You have completed this topic!\n        </div>\n      </div>\n      <div className = \"row\">\n        <div className=\"col-2 darkgrey\"></div>\n        <div className=\"col-4 stat-text left\">\n        #Attempted\n        </div>\n        <div className=\"col-6 topic-text left\">\n        : {props.attemptedCount}\n        </div>\n      </div>\n      <div className = \"row \">\n        <div className=\"col-2 darkgrey\"></div>\n        <div className=\"col-4 stat-text left\">\n        #Skipped\n        </div>\n        <div className=\"col-6 topic-text left\">\n        : {props.skippedCount}\n        </div>\n      </div>\n      <div className = \"row \">\n        <div className=\"col-2 darkgrey\"></div>\n        <div className=\"col-4 stat-text left\">\n        #Time Taken\n        </div>\n        <div className=\"col-6 topic-text left\">\n          : {props.minutes} mins : {props.seconds} secs\n        </div>\n      </div>\n    </div>\n  );\n}\n","import styled from \"styled-components\";\nexport const Tabs = styled.div`\n  overflow: hidden;\n  background: ${props => props.tabcolor};\n  font-family: \"Helvetica\";\n  height: 3em;\n  width:100%;\n`;\n\nexport const Tab = styled.button`\n  border: none;\n  outline: none;\n  cursor: pointer;\n  width: 50%;\n  position: relative;\n  background: ${props => props.tabcolor};\n\n  font-size: 1em;\n  border: ${props => (props.active ? \"1px solid #ccc\" : \"\")};\n  border-bottom: ${props => (props.active ? \"none\" : \"\")};\n  color: ${props => (props.active ? \"#000000\" : \"#959595\")};\n  height: ${props => (props.active ? \"2.6em\" : \"2.6em; top:.4em\")};\n  transition: background-color 0.5s ease-in-out;\n\n  :hover {\n    color: #000000;\n  }\n`;\nexport const Content = styled.div`\n  ${props => (props.active ? \"\" : \"display:none\")}\n`;\n","import React from \"react\";\nimport ReactWordcloud from 'react-wordcloud';\nimport { Resizable } from \"re-resizable\";\n\n\nfunction ShowWordCloud(props) {\n  if(props.data.length > 0){\n    const words = props.data;\n    const options = {\n      content: {\n        allowNumbers: false,\n        maxWords: 50,\n        stemmer: null,\n        stopwordsInput: '',\n        },\n      fontSizes: [10, 60],\n      rotations: 3,\n      rotationAngles: [0, 0],\n      padding: 3,\n      backgroundColor:\"#ffffff\"\n    }\n    const resizeStyle = {\n      background: \"#ede2d5\",\n      width:'90%',\n      height: '100%',\n      marginLeft: '5%',\n      marginRight: '5%'\n    }\n    return (\n      <ReactWordcloud className=\"wordcloud\" options={options} words={words} style={resizeStyle}/>\n    );\n  }\n  else {\n    return <div></div>\n  }\n}\n\nexport default ShowWordCloud;\n","import React from 'react';\nimport * as utils from '../utils/jsutils';\n\n\nfunction TopicHeader(props){\n  const username = sessionStorage.getItem('username');\n  return(\n    <div className=\"row headercontainer grey\">\n      <div className=\"col-12 grey\">\n        <span className=\"topic-label\"> Topic:</span>\n        <span className=\"topic-label\"> {utils.convertToCamelCase(props.subtopic)}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default TopicHeader;\n","import React, { useState } from \"react\";\nimport TopicHeader from \"../headers/TopicHeader\";\nimport { Editor } from '@tinymce/tinymce-react';\nimport * as constant from '../components/Constants';\nimport useFetch from \"../hooks/useFetch\";\nimport DisplayAlert from '../components/DisplayAlert';\n\nfunction ShowExplanation(props) {\n  /*const data = props.data;\n  const topics = data[\"topics\"];\n  const topicWordsResponses = data[\"topic_answers\"];\n  const topicWords = topicWordsResponses[\"topic_words\"];\n  const topicExplanation = topicWordsResponses[\"explanation\"];\n  const topicUserWords = props.topicUserWords;\n  topicWords.sort();\n  const wordExplanations = topicWords.map((word,index)=>{\n    if(word in topicUserWords){\n      return <DisplayExplanation word={word} topicExplanation={topicExplanation} key={index}/>\n    }\n  });\n*/\n  const url = constant.kwykURL+\"explaination_custom\"+\"/\"+props.topic+\"/\"+props.subtopic;\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const data = fetchResponse.data\n  return(\n    <div >\n      <TopicHeader topic={props.topic} subtopic={props.subtopic}/>\n      <div className=\"explanation-area\">\n      <Editor\n       initialValue={data}\n       apiKey= {constant.TINYMCE_APIKEY}\n       disabled={true}\n       init={{\n         plugins: ['noneditable','autoresize'],\n         toolbar: false,\n         menubar: false,\n         inline: true,\n         content_style: 'p { background-color: #ffffff; padding-left: 3px}' + 'ol { background-color: #ffffff; padding:3px; }'+\n         'ul { background-color: #ffffff; padding:3px; }'+'.mce-content-body { background-color: #ffffff }'\n      }} />\n      </div>\n\n    </div>\n  );\n}\n\nexport default ShowExplanation;\n\nfunction DisplayExplanation(props) {\n  const explanations = props.topicExplanation[props.word];\n  return(\n    <div className=\"explain-area\">\n      <label className=\"topicname\">\n        {props.word}\n      </label>\n      <div className=\"row explain-text\">\n        {explanations}\n      </div>\n    </div>\n\n  );\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Tabs, Tab, Content } from \"../components/Tab\";\nimport Header from \"../headers/KwykHeader\";\nimport SessionHeader from \"../headers/SessionHeader\";\nimport '../static/css/header.css';\nimport '../static/css/stats.css';\nimport useFetch from \"../hooks/useFetch\";\nimport * as constant from '../components/Constants';\nimport DisplayAlert from '../components/DisplayAlert';\nimport ShowWordCloud from '../components/WordCloud'\nimport ShowExplanation from \"./Explanations\";\nimport * as utils from '../utils/jsutils';\nimport TopicHeader from \"../headers/TopicHeader\";\n\nfunction Responses() {\n  let history = useHistory();\n  if(sessionStorage.getItem('topic') == null){\n    history.push({\n      pathname:`/404`\n    });\n    return null;\n  }\n  else {\n    return <ShowResponsePage />\n  }\n}\n\nfunction ShowResponsePage() {\n  const topic = sessionStorage.getItem('topic');\n  const subtopic = sessionStorage.getItem('subtopic');\n  const username = sessionStorage.getItem('username');\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-2\"></div>\n        <div className=\"col-md-8\">\n            <Header username={username}/>\n            <ResponsesTab topic={topic} subtopic={subtopic} />\n        </div>\n        <div className=\"col-md-2\"></div>\n      </div>\n    </div>\n  );\n}\n\nfunction ResponsesTab(props){\n  const [active, setActive] = useState(0);\n  let history = useHistory();\n  const handleClick = e => {\n    const index = parseInt(e.target.id, 0);\n    if(index === 0){\n      window.location.reload()\n    }\n    if (index !== active) {\n      setActive(index);\n    }\n  };\n  return(\n    <div className=\"tab-color\">\n      <Tabs tabcolor={constant.adminTabColor}>\n        <Tab onClick={handleClick} active={active === 0} id={0} tabcolor={constant.adminTabColor}>\n          Responses\n        </Tab>\n        <Tab onClick={handleClick} active={active === 1} id={1} tabcolor={constant.adminTabColor}>\n          Explanation\n        </Tab>\n      </Tabs>\n      <>\n        <Content active={active === 0}>\n          <ShowResponses topic={props.topic} subtopic={props.subtopic}/>\n        </Content>\n        <Content active={active === 1}>\n          <ShowExplanation topic={props.topic} subtopic={props.subtopic}/>\n        </Content>\n      </>\n    </div>\n  );\n}\nexport default Responses;\n\nfunction ShowResponses(props){\n  const useremail = sessionStorage.getItem('useremail');\n  const url = constant.kwykURL+\"user_stats_custom/\"+useremail+\"/\"+props.topic+\"/\"+props.subtopic;\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const data = fetchResponse.data\n  const topicUserWords = JSON.parse(sessionStorage.getItem('userResponses'));\n  const topicWordsResponses = data[\"topic_answers\"];\n  const topicWords = topicWordsResponses[\"topic_words\"];\n  const topicTopWords = topicWordsResponses[\"top_words\"];\n  topicWords.sort();\n  const wordResponses = topicWords.map((word,index)=>{\n    if(topicUserWords.includes(word)){\n      return <DisplayWordResponses word={word} topicTopWords={topicTopWords} topicUserWords={topicUserWords} key={index}/>\n    }\n  });\n  return(\n    <div >\n      <TopicHeader topic={props.topic} subtopic={props.subtopic}/>\n      <div className= \"responses-area\">\n      <ul className=\"chatcolor\">\n        {wordResponses}\n      </ul>\n      </div>\n      <div className=\"bottom-area\"></div>\n    </div>\n  );\n}\n\n\nfunction DisplayWordResponses(props){\n  const userWords = props.topicUserWords[props.word];\n  const topWords = props.topicTopWords[props.word];\n  return(\n    <div className=\"word-response\">\n    <label className=\"topicname\">{props.word}</label>\n    <ShowWordCloud data={topWords} />\n    </div>\n  );\n}\n\nfunction DisplayWord(props){\n  let words = \"\"\n  if(props.words){\n    words = props.words.split(',');\n  }\n  return(\n    <div>\n    {words ?\n        <div className=\"white\">{words.map((word,index) => <div className=\"white\" key={index}>\n            <label className=\"word\">{word}</label>\n        </div>)}</div>\n        : null}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Collapse from 'react-bootstrap/Collapse';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\nimport '../static/css/admin.css';\nimport ShowWordCloud from '../components/WordCloud'\n\nfunction Statistics(props){\n  return(\n    <div className='stats'>\n      <DisplayStats data={props.data}/>\n    </div>\n  );\n}\n\nexport default Statistics;\n\nfunction DisplayStats(props) {\n  let totalUsers = 0, totalWords = 0;\n  let leastResponse =[];\n  let mostSkips =[];\n  let commonResponseCount =[];\n  let userResponseCount =[];\n  let userResponseData;\n  const stats = getStats(props.data);\n  const answeredCount =stats[\"answeredCount\"];\n  const skipsCount = stats[\"skipsCount\"];\n  commonResponseCount = stats[\"commonResponseCount\"];\n  const userAnswerCount = stats[\"userAnswerCount\"];\n  totalUsers = stats[\"totalUsers\"];\n  totalWords = stats[\"totalWords\"];\n  mostSkips = getSortedData(skipsCount,1); //second arg 1 to sort desc\n  leastResponse = getSortedData(answeredCount,0);\n  const userResponse = getResponseHist(userAnswerCount, totalWords);\n  userResponseData = userResponse[\"userDivisionData\"];\n  userResponseCount = userResponse[\"userResponseCount\"];\n  const displayItems = [\n                  {message:'Common user responses',data:commonResponseCount, maxVal:totalWords,\n                  type:'cloud'},\n                  {message:'Key terms with least responses',data:leastResponse,maxVal:totalUsers,\n                    type:'progress'},\n                  {message:'Key terms with most skips',data:mostSkips,maxVal:totalUsers,\n                type:'progress'},\n                  {message:'Key terms attempted by users',data:userResponseCount,maxVal:totalUsers,\n                  value:userResponseData,type:'progress'}\n                ]\n  const statButtons = displayItems.map((item,index)=>{\n    return <DisplayButton message={item.message} key={index} maxVal={item.maxVal}\n    data={item.data} value={item.value} type={item.type}/>\n  });\n  return(\n    <div className=\"display-stats\">\n    {statButtons}\n    </div>\n  );\n}\n\nfunction DisplayButton(props){\n  const [open, setOpen] = useState(false);\n  return(\n    <div className=\"display-btn\">\n      <Button\n        onClick={() => setOpen(!open)}\n        aria-controls=\"collapse-text\"\n        aria-expanded={open}\n        variant=\"stats\"\n        className=\"btn-stats\"\n      >\n        {props.message}\n      </Button>\n      <Collapse in={open} className=\"stats-data\">\n        <div className=\"chatcolor\">\n          <DisplayData maxVal={props.maxVal} data={props.data} value={props.value} type={props.type}/>\n        </div>\n      </Collapse>\n    </div>\n  );\n}\n\nfunction DisplayData(props) {\n  if(props.type === 'progress'){\n    return <ShowProgressBar maxVal={props.maxVal} data={props.data} value={props.value}/>\n  }\n  else{\n    return <ShowWordCloud maxVal={props.maxVal} data={props.data} />\n  }\n}\n\nfunction ShowProgressBar(props){\n    const data = props.data;\n    const maxVal = props.maxVal==0? 100:props.maxVal;\n    const statsBar = data.map((statData,index)=>{\n        const percent = statData[1];\n        const range = statData[0];\n        let popover;\n        if(props.value){\n          const names = props.value[range];\n          let users = names.join('\\n');\n          popover = (\n            <Popover>\n              <Popover.Title >Users</Popover.Title>\n              <Popover.Content>\n              { users}\n              </Popover.Content>\n            </Popover>\n          );\n        }\n        else{\n            popover = (\n              <Popover> </Popover>\n            );\n        }\n        return (\n          <div className=\"row\">\n            <div className=\"col-sm-4 white\">\n            <label className=\"data-label\"> {statData[0]} </label>\n            </div>\n            <div className=\"col-sm-8 white\">\n            <OverlayTrigger overlay={popover}>\n            <ProgressBar className=\"progress\" now={percent} label={`${percent} `} key={index} max={maxVal} min='0'/>\n            </OverlayTrigger>\n            </div>\n          </div>\n        );\n      });\n    return(\n    <div className=\"statsBar\">\n      {statsBar}\n    </div>\n    );\n}\n\nfunction getStats(data){\n  let skipsCount = {};\n  let answeredCount = {};\n  let wordResponses =[];\n  let userAnswerCount = {};\n  const topicData = data;\n  const words = topicData[\"topic_words\"];\n  const userWords = topicData[\"user_data\"];\n  const totalUsers = Object.keys(userWords).length;\n  const totalWords = words.length;\n  for(var i=0; i < words.length; i++){\n      const word = words[i];\n      skipsCount[word] = 0;\n      answeredCount[word] = 0;\n  }\n  for (i=0; i < words.length; i++){\n      const word = words[i];\n      for(const [key, value] of Object.entries(userWords)){\n        const userEntries = value;\n        if(!Object.keys(userEntries).includes(word)){\n          skipsCount[word] += 1;\n        }\n        else{\n          userAnswerCount[key] = (userAnswerCount[key]||0)+1;\n          answeredCount[word] +=1;\n          wordResponses=wordResponses.concat(userEntries[word].split(\",\"))\n        }\n      }\n    }\n    wordResponses = getWordFrequency(wordResponses);\n    return {\"answeredCount\": answeredCount, \"skipsCount\": skipsCount, \"commonResponseCount\":wordResponses,\n    \"totalUsers\":totalUsers, \"userAnswerCount\":userAnswerCount,\n    \"totalWords\":totalWords}\n}\n\nfunction getWordFrequency(wordArray) {\n  var occurrences = wordArray.reduce(function(obj, index) {\n  obj[index] = (obj[index] || 0) + 1;\n  return obj;\n  }, {});\n  let words = [];\n  for(const [key, value] of Object.entries(occurrences)){\n    words.push({text:key,value:value})\n  }\n  return words;\n}\n\nfunction getSortedData(data,type,count=5){\n  let sortedData = [];\n  for (var word in data) {\n    sortedData.push([word, data[word]]);\n  }\n  sortedData.sort(function(a, b) {\n    if(type === 0){\n      return a[1] - b[1];\n    }\n    else{\n      return b[1] - a[1];\n    }\n  });\n  for(var n=count; n < sortedData.length; n++){\n    if(sortedData[n-1][1] === sortedData[n][1]){\n      count++;\n    }\n    else {\n      break;\n    }\n  }\n  return sortedData.slice(0,count);\n  }\n\nfunction getResponseHist(userData, totalWords) {\n  const divisions = [0, 0.25, 0.5, 0.75, 1];\n  let userDivisionData = {};\n  let userResponseCount =[]\n  //answerDivisions contains split up of word count\n  const answerDivisions = divisions.map((value,index) =>{\n    return `${Math.round(divisions[index] * totalWords)}`\n  });\n  //ansdivpercent = [\"0 - 24\", \"25 - 49\", \"50 - 74\", \"75 - 99\", \"100\"]\n  const ansdivpercent = divisions.map((value,index) =>{\n    let valRange;\n    if(parseInt(value) === 1){\n      valRange = `100%`;\n    }\n    else{\n      valRange = `${value * 100}-${divisions[index + 1]*100 -1}%`\n    }\n    userDivisionData[valRange] =[];\n    return valRange;\n  });\n  for(const [key, value] of Object.entries(userData)){\n    if(value === totalWords){\n      const centPercent = ansdivpercent[ansdivpercent.length - 1];\n      userDivisionData[centPercent].push(key)\n\n    }\n    else{\n      for(let i = 0; i < answerDivisions.length-1; i++){\n        if((value >= answerDivisions[i]) && ((value < answerDivisions[i+1]))){\n          const percent = ansdivpercent[i];\n          userDivisionData[percent].push(key);\n\n        }\n      }\n    }\n  }\n  let count = 0;\n  for(let i=0; i < ansdivpercent.length; i++){\n    const range = ansdivpercent[i];\n    if(userDivisionData[range]){\n      count=userDivisionData[range].length;\n    }\n    userResponseCount.push([range, count]);\n  }\n  return {\"userDivisionData\":userDivisionData, \"userResponseCount\":userResponseCount};\n}\n","import React from 'react';\nimport Header from \"../headers/KwykHeader\";\nfunction AdminAccessDenied() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <Header/>\n        <DisplayError />\n      </div>\n    </div>\n  );\n}\n\nexport default AdminAccessDenied;\n\nfunction DisplayError() {\n  return(\n    <div className='adminerror'>\n       <h4><div className='adminmessage'>Admin Access Denied</div></h4>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Tabs, Tab, Content } from \"../components/Tab\";\nimport Header from \"../headers/KwykHeader\";\nimport '../static/css/header.css';\nimport '../static/css/admin.css';\nimport useFetch from \"../hooks/useFetch\";\nimport * as constant from '../components/Constants'\nimport Statistics from \"./Statistics\";\nimport DisplayAlert from '../components/DisplayAlert';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport AdminAccessDenied from '../components/AdminAccessDenied'\n\nfunction Insights() {\n  let history = useHistory();\n  const location = useLocation();\n\n  if((sessionStorage.getItem('useremail') != null) &&\n      (sessionStorage.getItem('is_admin') === 'true')){\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Header />\n          <StatisticsTab />\n        </div>\n      </div>\n    );\n  }\n  else{\n    if(sessionStorage.getItem('is_admin') === 'false'){\n      return <AdminAccessDenied />\n    }\n    const destinationPath = location.pathname\n    history.push({\n        pathname:`/`,\n        query: {destinationPath}\n      });\n    return null;\n  }\n}\n\nexport default Insights;\n\nfunction StatisticsTab(props){\n  const [active, setActive] = useState(0);\n  const handleClick = e => {\n    const index = parseInt(e.target.id, 0);\n    if (index !== active) {\n      setActive(index);\n    }\n  };\n  let urlSplit = window.location.href.split(\"insights/\")[1].split('/')\n  urlSplit = urlSplit.filter(item => item);\n  const topic = urlSplit[0];\n  const subtopic = urlSplit[1];\n  var url = '';\n  if(urlSplit.length > 2){\n    const session = urlSplit[2];\n    url = constant.kwykURL+\"admin/user_data_custom/\"+topic+\"/\"+subtopic+\"/\"+session;\n  }\n  else{\n    url = constant.kwykURL+\"admin/user_data_custom/\"+topic+\"/\"+subtopic;\n  }\n\n  //const url = constant.kwykURL+\"admin/user_data_custom/\";\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const data = fetchResponse.data;\n\n  return(\n    <div className=\"tab-color\">\n      <Tabs tabcolor={constant.adminTabColor}>\n        <Tab onClick={handleClick} active={active === 0} id={0} tabcolor={constant.adminTabColor}>\n          Statistics\n        </Tab>\n        <Tab onClick={handleClick} active={active === 1} id={1} tabcolor={constant.adminTabColor}>\n          Insights\n        </Tab>\n      </Tabs>\n      <>\n        <Content active={active === 0}>\n          <Statistics data={data}/>\n        </Content>\n        <Content active={active === 1}>\n          <ShowInsights data={data}/>\n        </Content>\n      </>\n    </div>\n  );\n}\n\nfunction ShowInsights(props){\n  const [selectedView, setView] = useState(\"user\");\n  function getView(value){\n    setView(value);\n  }\n  const userData = props.data;\n  return(\n    <div className='insightsview'>\n      <ViewSelection getView={getView} view={selectedView}/>\n      <DisplayUserData userData={userData} selectedView={selectedView}/>\n    </div>\n  );\n}\n\nfunction DisplayUserData(props){\n  let headerWords, limits;\n  const data = props.userData;\n  if(data){\n    const headerData = getHeaderWords(data, props.selectedView);\n    headerWords = headerData[\"headerWords\"];\n    limits = headerData[\"limits\"];\n  }\n  return(\n    <div className=\"display-data\">\n      <table className=\"container\">\n        <GetTableHeader selectedView={props.selectedView} headerWords={headerWords}/>\n        <GetTableData data={data} selectedView={props.selectedView} limits={limits}/>\n      </table>\n    </div>\n  );\n}\n\nfunction GetTableHeader(props){\n  let titleWord;\n   if(props.headerWords){\n     if(props.selectedView === \"user\"){\n       titleWord = \"Username\";\n     }\n     else{\n       titleWord = \"Key Terms\";\n     }\n     const header = props.headerWords.map((word,index)=>{\n       return <th className=\"data\" key={index}>{word}</th>\n     });\n     return(\n       <thead>\n         <tr>\n           <th style={{\"minWidth\":\"200px\"}}>{titleWord}</th>\n           {header}\n         </tr>\n      </thead>\n     );\n   }\n   else {\n     return <thead><tr></tr></thead>\n   }\n}\n\nfunction GetTableData(props){\n  let words, userData;\n  if(props.data){\n     words=props.data[\"topic_words\"];\n     userData = props.data[\"user_data\"];\n  }\n  if(props.selectedView === \"user\"){\n    return <ViewByUsers words={words} userData={userData}/>\n  }\n  else{\n    return <ViewByResponses words={words} userData={userData} limits={props.limits}/>\n  }\n}\n\nfunction ViewSelection(props){\n  const [view, setView] = useState(props.view);\n  function handleChange(e){\n    setView(e.target.value);\n    props.getView(e.target.value);\n  }\n  return(\n    <div className=\"view-div\">\n    Choose a view :\n    <select className=\"view-select\" onChange={handleChange} defaultValue={'user'} value={view}>\n      <option value=\"user\">View By Users</option>\n      <option value=\"responses\"> View By Responses </option>)\n    </select>\n    </div>\n  );\n}\n\nfunction getHeaderWords(data, view) {\n  const userWords = data[\"user_data\"];\n  const totalUsers = Object.keys(userWords).length;\n  const divisions = [0, 0.25, 0.5, 0.75, 1];\n  const userDivisions = divisions.map((value,index) =>{\n    return `${Math.round(divisions[index] * totalUsers)}`\n  });\n  let headerWords=[];\n  let limits = [];\n  if(view === \"user\"){\n    headerWords = data[\"topic_words\"];\n  }\n  else{\n    const limitsData = getLimits(totalUsers, userDivisions);\n    headerWords = limitsData['headerWords'];\n    limits = limitsData['limits'];\n  }\n  return {\"headerWords\":headerWords, \"limits\":limits};\n}\n\nfunction ViewByUsers(props){\n    const userData = props.userData;\n    const words = props.words;\n    if(userData){\n      const data = Object.keys(userData).map((user,index)=>{\n      const userVal = userData[user];\n      const userInput = words.map((word,index)=>{\n        if(userVal[word]){\n          return <td style={{backgroundColor:\"#b2de83\"}} key={index}></td>;\n        }\n        else {\n          return <td style={{backgroundColor:\"#c35c14\"}} key={index}></td>;\n        }\n      });\n      return(\n        <tr key={index}>\n          <th className=\"rowheader\">{user}</th>\n          {userInput}\n        </tr>\n      );\n    });\n    return <tbody>{data}</tbody>\n  }\n  else{\n    return <tbody></tbody>\n  }\n}\n\nfunction ViewByResponses(props) {\n  const userData = props.userData;\n  const words = props.words;\n  let wordUserCount = {};\n  if(userData){\n    const data = words.map((word,index)=>{\n        wordUserCount[word] = getWordResponseCount(word, userData);\n    });\n  }\n  const tableData = Object.keys(wordUserCount).map((word, index)=>{\n    const wordCount = wordUserCount[word];\n    const wordRow = props.limits.map((limit, index)=>{\n      let wordColor = \"#ffffff\";\n      if((wordCount >= limit[0]) && (wordCount <= limit[1])){\n        wordColor  = constant.tableColors[index];\n      }\n      return <td style={{backgroundColor:wordColor}} key={index}></td>\n    });\n\n    return (\n      <tr key={index}>\n        <th className='rowheader'>{word}</th>\n        {wordRow}\n      </tr>\n    );\n  });\n  return <tbody>{tableData}</tbody>\n\n}\n\nfunction getWordResponseCount(word, userData){\n  let count = 0;\n  for(const [key, value] of Object.entries(userData)){\n    const userEntries = value;\n    if(Object.keys(userEntries).includes(word)){\n        count++;\n    }\n  }\n  return count;\n}\n\nfunction getLimits(totalUsers, userDivisions){\n  let headerWords=[];\n  let limits = [];\n  if(totalUsers < 5){\n    for(var i=0; i<=totalUsers; i++ ){\n      limits.push([i,i]);\n      headerWords.push(i);\n    }\n  }\n  else{\n    headerWords.push(0);\n    limits.push([0,0])\n    for(let index = 1; index < userDivisions.length; index++){\n      let begin = parseInt(userDivisions[index-1]) + 1;\n      let end = parseInt(userDivisions[index]);\n      if(end === totalUsers){\n        end = end-1;\n      }\n      if(end < begin){\n        break;\n      }\n      if(begin === end){\n        headerWords.push(end);\n        limits.push([end, end]);\n      }\n      else{\n        headerWords.push(`${begin} - ${end}` );\n        limits.push([begin, end]);\n      }\n\n    }\n    headerWords.push(totalUsers);\n    limits.push([totalUsers, totalUsers]);\n  }\n  return {\"headerWords\":headerWords, \"limits\":limits};\n}\n","import React,{useState} from 'react';\nimport knowbotpng from '../static/images/knowbotpng.png';\nimport '../static/css/login.css';\nimport { Tabs, Tab, Content } from \"../components/Tab\";\nimport * as constant from '../components/Constants'\nimport usePost from \"../hooks/usePost\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport Alert from 'react-bootstrap/Alert'\nvar session = \"\"\n\nfunction Login() {\n  const location = useLocation();\n  if (location.query){\n    sessionStorage.setItem('destinationPath', location.query.destinationPath)\n  }\n  if(sessionStorage.getItem('useremail') != null){\n    return <Redirect />;\n  }\n  else{\n    return <DisplayLogin />\n  }\n}\n\nfunction DisplayLogin(){\n  //sessionStorage.clear()\n  const sessionPath = window.location.href.split('?session=')[1]\n  if(typeof(sessionPath) !== 'undefined'){\n    session = sessionPath.split('/')[0]\n  }\n  return(\n    <div className=\"container\">\n      <DisplayIcon />\n      <LoginTab />\n      <DisplayAlert />\n    </div>\n  );\n}\n\nexport default Login;\n\nfunction DisplayIcon() {\n  return(\n    <div className=\"row\">\n        <div className=\"col-lg-2\"></div>\n        <div className=\"col-lg-8 window-color center\">\n          <div className=\"row login\">\n            <div className=\"col-4 window-color\">\n              <img src={knowbotpng} className=\"login-logo\" alt=\"logo\" />\n            </div>\n            <div className=\"col-8 window-color\">\n              <div className=\"row logintitle\">\n                PySkills (Beta-1)\n              </div>\n              <div className=\"row loginsubtitle\">\n                Improve your Python skills\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-2\"></div>\n    </div>\n  );\n}\n\nfunction DisplayTitle() {\n  return(\n    <div className=\"row \">\n        <div className=\"col-lg-2 \"></div>\n        <div className=\"col-lg-8 window-color title\">\n            Microknowledge - Little bits of knowledge\n        </div>\n        <div className=\"col-lg-2 \"></div>\n    </div>\n  );\n}\n\nfunction LoginTab(props){\n  const [active, setActive] = useState(0);\n  const handleClick = e => {\n    const index = parseInt(e.target.id, 0);\n    if (index !== active) {\n      setActive(index);\n    }\n  };\n\n  return(\n    <div className=\"row \">\n      <div className=\"col-lg-2 \"></div>\n        <div className=\"col-lg-8 window-color logintab\">\n    <div className=\"tab-color\">\n      <Tabs tabcolor={constant.loginTabColor}>\n        <Tab onClick={handleClick} active={active === 0} id={0} tabcolor={constant.loginTabColor}>\n          SignIn\n        </Tab>\n        <Tab onClick={handleClick} active={active === 1} id={1} tabcolor={constant.loginTabColor}>\n          SignUp\n        </Tab>\n      </Tabs>\n      <>\n        <Content active={active === 0}>\n          <SignInForm />\n        </Content>\n        <Content active={active === 1}>\n          <SignUpForm />\n        </Content>\n      </>\n    </div>\n    </div>\n    <div className=\"col-lg-2 \"></div>\n</div>\n  );\n}\n\nfunction SignInForm() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginMessage,setLoginMessage] = useState(\"\");\n  function handleSubmit(e) {\n    e.preventDefault();\n    const message = <ValidateUser email={email} password={password}/>\n    setLoginMessage(message);\n    setEmail(\"\")\n    setPassword(\"\")\n  }\n  function handleEmail(e){\n    setEmail(e.target.value);\n  }\n  function handlePassword(e) {\n    setPassword(e.target.value);\n  }\n  return(\n    <form className=\"loginform\" onSubmit={handleSubmit}>\n      <input type=\"text\" name=\"email\" className=\"text\" placeholder=\"email\"\n      value={email} onChange={handleEmail} required/><br/>\n      <input type=\"password\" name=\"password\" className=\"text\" placeholder=\"password\"\n        value={password} onChange={handlePassword} required/><br/>\n      <label className=\"text\">{loginMessage}</label>\n      <input type=\"submit\" value=\"Sign In\" className=\"signin\"/>\n      <Link to='/reset'>\n      <div className='link reset'>Forgot password?</div>\n      </Link>\n    </form>\n  );\n}\n\nfunction SignUpForm() {\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginMessage,setLoginMessage] = useState(\"\");\n  function handleSubmit(e) {\n    e.preventDefault();\n    const message = <CreateNewUser username={userName} email={email} password={password}/>\n    setLoginMessage(message);\n    setUserName(\"\")\n    setEmail(\"\")\n    setPassword(\"\")\n  }\n  function handleUserName(e) {\n    setUserName(e.target.value);\n  }\n  function handleEmail(e){\n    setEmail(e.target.value);\n  }\n  function handlePassword(e) {\n    setPassword(e.target.value);\n  }\n  return(\n    <form className=\"loginform\" onSubmit={handleSubmit}>\n      <input type=\"text\" id=\"username\" name=\"username\" className=\"text\" value={userName}\n        placeholder=\"username\" onChange={handleUserName} required/><br/>\n      <input type=\"text\" name=\"email\" className=\"text\" placeholder=\"email\"\n      value={email} onChange={handleEmail} required/><br/>\n      <input type=\"password\" name=\"password\" className=\"text\" placeholder=\"password\"\n      value={password} onChange={handlePassword} required/><br/>\n      <label className=\"text\">{loginMessage}</label>\n      <input type=\"submit\" value=\"Sign Up\" className=\"signin\"/>\n    </form>\n  );\n}\n\nfunction ValidateUser(props) {\n  const url = constant.loginURL;\n  const location = useLocation()\n  let loginMessage = '';\n  let sessionName = '';\n  const dataText = { \"email\": props.email, \"password\": props.password, \"session\": session, \"action\": \"signin\"}\n  const fetchResponse = usePost(url, dataText, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const response = fetchResponse.data;\n\n  if(response['status'] === \"password mismatch\"){\n    loginMessage = \"Incorrect Password\";\n    sessionStorage.setItem('loginmessage', loginMessage);\n    window.location.reload();\n  }\n  else if(response['status'] === \"user not found\"){\n    loginMessage = \"Email id is not registered!\";\n    sessionStorage.setItem('loginmessage', loginMessage);\n    window.location.reload();\n  }\n  else{\n    loginMessage = \"Signed in Successfully!\";\n    sessionName = response['session_name'];\n    const userName = response['username'];\n    const is_admin = response['is_admin'];\n    setSessionStorage(userName, props.email, session, sessionName, is_admin);\n    return <Redirect />\n  }\n  return(``);\n}\n\nfunction CreateNewUser(props) {\n  const url = constant.loginURL;\n  const location = useLocation()\n  let loginMessage ='';\n  let sessionName = '';\n  const dataText = { \"username\":props.username, \"email\": props.email, \"password\": props.password,\n    \"session\": session, \"action\": \"signup\"}\n  const fetchResponse = usePost(url, dataText, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const response = fetchResponse.data;\n  if (response['status'] === 'inserted'){\n    sessionName = response['session_name'];\n    const is_admin = false;\n    loginMessage = \"Signed Up Successfully!\";\n    setSessionStorage(props.username, props.email, session, sessionName, is_admin);\n    return <Redirect />\n  }\n  else if(response['status'] === 'duplicate'){\n    loginMessage = \"Email id is already registered\"\n    sessionStorage.setItem('loginmessage', loginMessage);\n    window.location.reload();\n  }\n  return(``)\n}\n\nfunction setSessionStorage(username, useremail, session, session_name, is_admin) {\n  sessionStorage.setItem('username', username);\n  sessionStorage.setItem('useremail', useremail);\n  sessionStorage.setItem('is_admin', is_admin);\n  if(session){\n    sessionStorage.setItem('session', session);\n    sessionStorage.setItem('session_name', session_name);\n  }\n  sessionStorage.removeItem('loginmessage');\n\n}\n\nfunction DisplayAlert() {\n  if(sessionStorage.getItem('loginmessage') != null){\n    let message = sessionStorage.getItem('loginmessage')\n    return(\n      <div className=\"row \">\n        <div className=\"col-md-2 \"></div>\n        <div className=\"col-md-8 window-color\">\n        <Alert variant='danger' className='alert'>\n          {message}\n          </Alert>\n        </div>\n        <div className=\"col-md-2 \"></div>\n      </div>\n    );\n  }\n  else {\n    return(\n      <div></div>\n    );\n  }\n}\n\nfunction initializeSessionStorage(topic, subtopic) {\n  sessionStorage.setItem('topic', constant.pySkillsTopic);\n  sessionStorage.setItem('subtopic', constant.pySkillsSubTopic);\n  sessionStorage.setItem('minutes', 0);\n  sessionStorage.setItem('seconds', 0);\n  sessionStorage.setItem('userResponses', JSON.stringify([]));\n  sessionStorage.setItem('retry', false);\n}\n\nfunction getTopicFromURL(destination) {\n  let topic, subtopic;\n  const urlSplit = destination.split('/');\n  if(urlSplit[urlSplit.length - 3] === 'chat'){\n    topic = urlSplit[urlSplit.length - 2]\n    subtopic = urlSplit[urlSplit.length - 1]\n  }\n  return {'topic':topic, 'subtopic': subtopic}\n}\n\nfunction getDestinationScreen(destination) {\n  const urlSplit = destination.split('/');\n  if(urlSplit[urlSplit.length - 1] === 'admin'){\n    return 'admin';\n  }\n  else if(urlSplit[urlSplit.length - 3] === 'chat') {\n    return 'chat';\n  }\n  return null;\n}\n\nfunction Redirect() {\n  let history = useHistory();\n  const location = useLocation()\n  let destination;\n  if(sessionStorage.getItem('destinationPath')){\n    destination = sessionStorage.getItem('destinationPath');\n    sessionStorage.removeItem('destinationPath');\n    const screenname = getDestinationScreen(destination);\n    if (screenname === 'chat'){\n      const topicDetail = getTopicFromURL(destination);\n      const topic = topicDetail['topic'];\n      const subtopic = topicDetail['subtopic'];\n      //initializeSessionStorage(topic, subtopic);\n      initializeSessionStorage()\n    }\n  }\n  else{\n    initializeSessionStorage()\n    destination = '/chat/'+constant.pySkillsTopic+'/'+constant.pySkillsSubTopic\n  }\n  history.push({\n      pathname:destination\n  });\n\n  return null;\n}\n","import React,{useState} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../headers/KwykHeader\";\nimport SessionHeader from \"../headers/SessionHeader\";\nimport '../static/css/feedback.css';\nimport * as constant from '../components/Constants'\nfunction Feedback() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-2\"></div>\n        <div className=\"col-lg-8\">\n          <Header />\n          <ShowTemplate />\n        </div>\n      <div className=\"col-lg-2\"></div>\n    </div>\n  </div>\n  );\n}\nexport default Feedback;\n\nfunction ShowTemplate() {\n  const [userInput, setUserInput] = useState(\"\");\n  const username = sessionStorage.getItem('username');\n  let history = useHistory();\n  function handleChange(e){\n    setUserInput(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const serviceID = 'default_service';\n    const templateId = 'template_09oi0b1';\n    sendFeedback(serviceID,templateId, {message: userInput, from_name:username, reply_to: constant.fbToEmail});\n    setUserInput(\"\");\n    history.push({\n      pathname:`/topics`\n    });\n  }\n  return(\n    <div >\n    <form className = \"fbarea\" onSubmit={handleSubmit}>\n    <div className=\"fblabel\">{constant.feedbackMessage}</div>\n    <div className=\"fblabel blank\"> Feedback / Issue / Query</div>\n    <textarea className=\"fbtext\" value={userInput} placeholder=\"Type your response here...\" onChange={handleChange}></textarea>\n    <input type=\"submit\" value=\"Submit\" className=\"fbsubmitbtn \"/>\n    </form>\n    </div>\n  );\n}\n\nfunction sendFeedback (serviceID,templateId, variables) {\n window.emailjs.send(\n   serviceID, templateId,\n   variables\n   ).then(res => {\n     console.log('Email successfully sent!')\n   })\n   // Handle errors here however you like, or use a React error boundary\n   .catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\n }\n","import React, {useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../headers/KwykHeader\";\nimport * as constant from '../components/Constants'\nimport usePost from \"../hooks/usePost\";\nimport DisplayAlert from '../components/DisplayAlert'\n\nfunction PasswordReset() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-2\"></div>\n        <div className=\"col-sm-8 chatcolor\">\n            <Header />\n            <br />\n            <ResetArea />\n        </div>\n        <div className=\"col-sm-2\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default PasswordReset;\n\nfunction ResetArea() {\n  const [email, setEmail] = useState(\"\");\n  const [btnValue, setBtnValue] = useState(\"Reset Password\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [pwdMessage,setPwdMessage] = useState(\"\");\n  let history = useHistory();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    let message = '';\n    if(newPassword === confirmPassword){\n      message = <ChangePwd email={email} password={newPassword}/>\n      setPwdMessage(message);\n      setBtnValue(\"Home\")\n      setEmail(\"\")\n      setNewPassword(\"\")\n      setConfirmPassword(\"\")\n    }\n    else {\n      message = \"Password Mismatch\";\n      setPwdMessage(message);\n    }\n  }\n  function handleEmail(e) {\n    setEmail(e.target.value);\n  }\n  function handleOldPassword(e) {\n    setNewPassword(e.target.value);\n  }\n  function handleNewPassword(e) {\n    setConfirmPassword(e.target.value);\n  }\n  function handleClick(e) {\n    if(e.target.value === 'Home'){\n      sessionStorage.removeItem('loginmessage');\n      history.push({\n          pathname:`/`,\n      });\n    }\n  }\n  return(\n    <div className=\"pwdreset\">\n    <form className=\"loginform\" onSubmit={handleSubmit}>\n      <label className=\"pwdtext\"> Change your password here...</label>\n      <input type=\"text\" name=\"email\" className=\"text\" placeholder=\"email id\"\n      value={email} onChange={handleEmail} required/><br/>\n      <input type=\"password\" name=\"password\" className=\"text\" placeholder=\"new password\"\n        value={newPassword} onChange={handleOldPassword} required/><br/>\n      <input type=\"password\" name=\"password\" className=\"text\" placeholder=\"confirm password\"\n          value={confirmPassword} onChange={handleNewPassword} required/><br/>\n      <label className=\"pwdmessage\">{pwdMessage}</label>\n      <input type=\"submit\" value={btnValue} className=\"pwdbtn\" onClick={handleClick}/>\n      </form>\n    </div>\n  );\n}\n\nfunction ChangePwd(props) {\n  const url = constant.pwdResetURL;\n  let message = '';\n  const dataText = { \"email\": props.email, \"password\": props.password}\n  const fetchResponse = usePost(url, dataText, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const response = fetchResponse.data;\n  if (response['status'] === 'success'){\n        message = constant.pwdResetSuccessMsg;\n  }\n  else{\n     message = constant.pwdResetFailedMsg;\n  }\n  return(`${message}`);\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from \"../headers/KwykHeader\";\nimport SessionHeader from \"../headers/SessionHeader\";\nimport '../static/css/error.css';\n\nfunction Page404() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-2\"></div>\n        <div className=\"col-sm-8 chatcolor\">\n            <Header />\n            <Display404 />\n        </div>\n        <div className=\"col-sm-2\"></div>\n      </div>\n    </div>\n  );\n}\nfunction Display404() {\n  return(\n    <div className='error'>\n       <h2><div className='message'>Error: 404 - Page not found</div></h2>\n       <Link to='/topics'>\n       <div className='link'>Home</div>\n       </Link>\n    </div>\n  );\n}\n\nexport default Page404;\n","import React, {useState} from 'react';\nimport Header from \"../headers/KwykHeader\";\nimport '../static/css/contents.css';\nimport TopicSelectionScreen from \"./TopicSelectionScreen\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport AdminAccessDenied from '../components/AdminAccessDenied';\n\nfunction AdminScreen() {\n  let history = useHistory();\n  const location = useLocation();\n\n  if((sessionStorage.getItem('useremail') != null) && (sessionStorage.getItem('is_admin') === 'true')){\n        return <TopicSelection />\n  }\n  else{\n    if(sessionStorage.getItem('is_admin') === 'false'){\n      return <AdminAccessDenied />\n    }\n    const destinationPath = location.pathname\n    history.push({\n        pathname:`/`,\n        query: {destinationPath}\n      });\n    return null;\n  }\n}\nexport default AdminScreen;\n\nfunction TopicSelection(){\n    const [topic,setTopic] = useState(\"\");\n    const [subtopic,setSubTopic] = useState(\"\");\n    function getSelectedTopic(data){\n      setTopic(data);\n    }\n    function getSelectedSubTopic(data){\n      setSubTopic(data);\n    }\n    return(\n      <div className=\"container\">\n        <div className=\"row\">\n          <Header/>\n          <div className=\"topics-subtopics\">\n            <TopicSelectionScreen\n              getSelectedTopic={getSelectedTopic}\n              topic={topic}\n              getSelectedSubTopic={getSelectedSubTopic}\n              />\n            <DisplayButton topic={topic} subtopic={subtopic}/>\n          </div>\n        </div>\n      </div>\n    );\n}\n\nfunction DisplayButton(props){\n  let history = useHistory();\n  let buttonDisplay;\n  //const [buttonDisplay, setButtonDisplay] = useState(\"none\");\n  if(props.subtopic){\n    buttonDisplay =\"block\";\n  }\n  else{\n    buttonDisplay =\"none\";\n  }\n  function handleClick(e){\n      history.push({\n        pathname:'/admin/'+props.topic+'/'+props.subtopic\n      });\n  }\n  return(\n    <button className=\"next-button\" value=\"start\"\n      onClick={handleClick} style={{display: buttonDisplay}}>Next >> </button>\n  );\n}\n","import React, {useState, useRef} from 'react';\nimport * as constant from '../components/Constants'\nimport useFetch from \"../hooks/useFetch\";\nimport '../static/css/contents.css';\nimport DisplayAlert from '../components/DisplayAlert';\nimport { useHistory } from \"react-router-dom\";\nimport SelectionButtons from '../components/SelectionButtons';\nimport Header from \"../headers/KwykHeader\";\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\nfunction SessionSelectionScreen() {\n  const urlSplit = window.location.href.split(\"/\")\n  const topic = urlSplit[urlSplit.length-2]\n  const subtopic = urlSplit[urlSplit.length-1]\n\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <Header/>\n        <div className=\"sessions\">\n          <div className=\"row topics-div\">\n            <DisplaySessions topic={topic} subtopic={subtopic}\n              styling={\"sessions-area\"}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SessionSelectionScreen;\n\nfunction DisplaySessions(props){\n  const [session,setSession] = useState(\"\");\n  function getSelectedSession(data){\n    setSession(data);\n  }\n  const url = constant.kwykURL+\"get/sessions/custom\";\n  const message = \"Please choose your session ...\"\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const sessions_details = fetchResponse.data\n  var sessions = []\n  for(var k in sessions_details){\n    sessions.push(sessions_details[k]['session_name']);\n  }\n  return (\n    <div className=\"subtopics\">\n     <div className=\"admin-session\">\n      <DisplayMessage message={message}/>\n      <SelectionButtons topics={sessions} getSelectedTopic={getSelectedSession}\n        styling={props.styling}/>\n      <ShowTestLink topic={props.topic} subtopic={props.subtopic}\n        session={getSessionSlug(sessions_details,session)}/>\n      </div>\n      <DisplayButton topic={props.topic} subtopic={props.subtopic} sessionname={session}\n          sessionslug={getSessionSlug(sessions_details,session)}\n          />\n    </div>\n  );\n}\n\nfunction DisplayMessage(props){\n  return(\n    <div className=\"info-text\">\n    <br />\n      {props.message}\n    </div>\n  );\n}\n\nfunction DisplayButton(props){\n  let history = useHistory();\n  let buttonDisplay;\n  //const [buttonDisplay, setButtonDisplay] = useState(\"none\");\n  if(props.subtopic){\n    buttonDisplay =\"block\";\n  }\n  else{\n    buttonDisplay =\"none\";\n  }\n  function handleClick(e){\n    let pathname = '';\n    if (props.sessionslug !== ''){\n      pathname='/insights/'+props.topic+'/'+props.subtopic+'/'+props.sessionslug\n    }\n    else{\n      pathname='/insights/'+props.topic+'/'+props.subtopic\n    }\n    history.push({\n      pathname:pathname\n    });\n\n      //history.push('/'+props.topic+'/'+props.subtopic);\n  }\n  return(\n    <div className='session-btn-div'>\n      <button className=\"stats-button\" value=\"start\"\n        onClick={handleClick} style={{display: buttonDisplay}}>View Statistics</button>\n    </div>\n  );\n}\n\n\nfunction ShowTestLink(props) {\n  const [copySuccess, setCopySuccess] = useState('');\n  const textRef = useRef(null);\n  const basename = window.location.href.split(\"admin\")[0];\n  let url = '';\n  if(props.session){\n    url  = basename.split('#')[0]+'?session='+props.session+'/#/chat/'+props.topic+'/'+props.subtopic\n  }\n  else{\n    url  = basename+'chat/'+props.topic+'/'+props.subtopic\n  }\n\n  function handleClick(e) {\n    setCopySuccess('Copied!');\n  };\n\n  return(\n    <div className=\"row testlink\">\n      <div className = \"col-2 testlink\">\n      <label className=\"linklabel\"> Test Link:  </label>\n      </div>\n      <div className = \"col-10 testlink\">\n      <input type=\"text\" ref={textRef} name=\"email\" className=\"linktext\" value={url} placeholder={url}\n       disabled=\"disabled\" id=\"link\"/>\n       <CopyToClipboard text={url}>\n           <button className=\"linkbutton\" onClick={handleClick}>Copy</button>\n       </CopyToClipboard>\n       <span className=\"copytext\">{copySuccess}</span>\n      </div>\n    </div>\n  );\n}\n\nfunction getSessionSlug(sessions_details,session) {\n  for(var k in sessions_details){\n    if (sessions_details[k]['session_name'] === session){\n      return sessions_details[k]['session_slug'];\n    }\n  }\n  return \"\";\n}\n","import React from 'react';\nimport Header from \"../headers/KwykHeader\";\nimport SessionHeader from \"../headers/SessionHeader\";\nimport '../static/css/error.css';\n\nfunction Error() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-2\"></div>\n        <div className=\"col-lg-8 chatcolor\">\n            <Header />\n            <DisplayError />\n        </div>\n        <div className=\"col-lg-2\"></div>\n      </div>\n    </div>\n  );\n}\nfunction DisplayError() {\n  return(\n    <div className='error'>\n       <h4><div className='message'>Wrong topic or subtopic. Please check your URL!</div></h4>\n    </div>\n  );\n}\n\nexport default Error;\n","import React, {useState} from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport DisplayTopic from '../screens/DisplayTopic';\nimport ChatBot from '../screens/ChatBot'\nimport UserStats from '../screens/UserStats'\nimport Responses from '../screens/Responses'\nimport Insights from '../screens/Insights'\nimport Login from \"../screens/Login\";\nimport Feedback from \"../screens/Feedback\";\nimport PasswordReset from './PasswordReset';\nimport Page404 from './Page404';\nimport AdminScreen from \"../screens/AdminScreen\"\nimport SessionSelectionScreen from \"../screens/SessionSelectionScreen\"\nimport Error from './Error';\n\nfunction Routes(){\n    return(\n      <Router  basename={`${process.env.PUBLIC_URL}/`}>\n      <Switch>\n      <Route path=\"/\" exact render={() => <Login/>} />\n      <Route path=\"/topics\" exact render={() => <DisplayTopic/>} />\n      <Route path=\"/reset\" exact render={() => <PasswordReset/>} />\n      <Route path=\"/chat/:topic/:subtopic\" render={() => <ChatBot/>} />\n      <Route path=\"/user_stats/:topic/:subtopic\" render={() => <UserStats/>} />\n      <Route path=\"/view_responses/:topic/:subtopic\" render={() => <Responses/>} />\n      <Route path=\"/feedback\" render={() => <Feedback/>} />\n      <Route path=\"/admin\" exact render={() => <AdminScreen/>} />\n      <Route path=\"/admin/:topic/:subtopic\" exact render={() => <SessionSelectionScreen/>} />\n      <Route path=\"/insights/:topic/:subtopic\" render={() =>\n                <Insights />} />\n      <Route path=\"/error\" render={() => <Error/>} />\n      <Route render={() => <Page404/>} />\n      </Switch>\n      </Router>\n    );\n}\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Routes from './components/Routes';\n\nfunction App() {\n  return(\n    <Router >\n      <div className=\"App\">\n        <Routes />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/knowbotpng.c964294f.png\";"],"sourceRoot":""}