{"version":3,"sources":["static/images/clock.png","static/images/idea.png","static/images/send.png","components/Constants.js","utils/jsutils.js","headers/KwykHeader.js","headers/SessionHeader.js","hooks/useFetch.js","components/DisplayAlert.js","components/SelectionButtons.js","screens/TopicSelectionScreen.js","screens/DisplayTopic.js","headers/TimerHeader.js","hooks/useTimer.js","hooks/usePost.js","screens/ChatBot.js","screens/UserStats.js","components/Tab.js","components/WordCloud.js","screens/Responses.js","screens/Statistics.js","components/AdminAccessDenied.js","screens/Insights.js","screens/Login.js","screens/Feedback.js","components/PasswordReset.js","components/Page404.js","screens/AdminScreen.js","screens/SessionSelectionScreen.js","components/Error.js","components/Routes.js","App.js","index.js","static/images/knowbotpng.png"],"names":["module","exports","tableColors","kwykURL","convertToCamelCase","name","words","split","convertedName","i","length","toUpperCase","substr","Header","props","username","sessionStorage","getItem","topic","utils","className","src","knowbotSVG","alt","DisplayDropDown","history","useHistory","Dropdown","style","backgroundColor","Toggle","id","color","Menu","Item","href","onClick","clear","push","pathname","SessionHeader","session","useFetch","url","defaultResponse","useState","data","setData","a","fetch","res","json","result","isLoading","error","useEffect","getDataFromAPI","DisplayAlert","message","Alert","variant","SelectionButtons","clickedButton","setClickedButton","topics","height","getClickedButton","getSelectedTopic","styling","buttonList","map","index","TopicButton","textColor","buttonColor","key","value","e","target","TopicSelectionScreen","DisplayTopics","DisplaySubTopics","getSelectedSubTopic","DisplayMessage","fetchResponse","constant","GetSubTopics","subtopics","TopicSelection","setTopic","subtopic","setSubTopic","DisplayStartButton","DisplayTopic","location","useLocation","destinationPath","query","buttonDisplay","setItem","JSON","stringify","display","TimerHeader","useTimer","mins","secs","seconds","setSeconds","minutes","setMinutes","setTime","time","setInterval","clearInterval","usePost","is_retry","dataText","requestOptions","method","headers","body","postDataToAPI","currentWord","ChatBot","DisplayTest","chatMessages","prevWords","parse","ShowTimeHeader","DisplayChat","parseInt","setChatMessages","userInput","setUserInput","actions","addChat","includes","chatList","GetChatMessages","messagesEndRef","useRef","current","scrollIntoView","behavior","ref","DisplayForm","getUserInput","input","ShowWelcomeChat","GetWord","ShowHint","DisplayUserInput","textArea","document","querySelector","rows","rowsMin","disabled","text","getCommand","useremail","window","word","Test","messageText","BotReply","hint","handleClick","userResponses","attemptedCount","updateAttemptedCount","updateSkippedCount","ideapng","onChange","onKeyPress","charCode","preventDefault","required","sendlogo","UserReply","action","skippedCount","StatsPage","DisplayStats","UserStats","DisplayScore","RetrySkips","ViewResponses","FeedBack","Tabs","styled","div","tabcolor","Tab","button","active","Content","ShowWordCloud","console","log","options","content","allowNumbers","maxWords","stemmer","stopwordsInput","fontSizes","rotations","rotationAngles","padding","background","width","marginLeft","marginRight","ShowResponsePage","ResponsesTab","setActive","topicUserWords","ShowResponses","Responses","selectedValue","setSelectedValue","topicWordsResponses","topicWords","topicTopWords","sort","wordResponses","DisplayWordResponses","TopicHeader","getSelectedValue","topWords","Statistics","totalUsers","totalWords","leastResponse","mostSkips","commonResponseCount","userResponseData","stats","skipsCount","answeredCount","userAnswerCount","topicData","userWords","Object","keys","entries","userEntries","concat","wordArray","occurrences","reduce","obj","getWordFrequency","getStats","getSortedData","userResponse","userData","divisions","userDivisionData","userResponseCount","answerDivisions","Math","round","ansdivpercent","valRange","centPercent","percent","count","range","getResponseHist","statButtons","maxVal","type","item","DisplayButton","open","setOpen","Button","aria-controls","aria-expanded","Collapse","in","DisplayData","ShowProgressBar","statsBar","statData","popover","users","join","Popover","Title","OverlayTrigger","overlay","ProgressBar","now","label","max","min","sortedData","b","n","slice","AdminAccessDenied","DisplayError","Insights","StatisticsTab","urlSplit","filter","ShowInsights","selectedView","setView","ViewSelection","getView","view","DisplayUserData","headerWords","limits","headerData","userDivisions","limitsData","begin","end","getLimits","getHeaderWords","GetTableHeader","GetTableData","titleWord","header","ViewByUsers","ViewByResponses","defaultValue","user","userVal","wordUserCount","getWordResponseCount","tableData","wordCount","wordRow","limit","wordColor","DisplayLogin","sessionPath","DisplayIcon","LoginTab","Login","Redirect","knowbotpng","SignInForm","SignUpForm","email","setEmail","password","setPassword","loginMessage","setLoginMessage","onSubmit","ValidateUser","placeholder","to","userName","setUserName","CreateNewUser","sessionName","response","reload","is_admin","setSessionStorage","session_name","removeItem","destination","getDestinationScreen","topicDetail","getTopicFromURL","initializeSessionStorage","Feedback","ShowTemplate","serviceID","templateId","variables","emailjs","send","then","catch","err","sendFeedback","from_name","reply_to","PasswordReset","ResetArea","btnValue","setBtnValue","newPassword","setNewPassword","confirmPassword","setConfirmPassword","pwdMessage","setPwdMessage","ChangePwd","Display404","Page404","AdminScreen","SessionSelectionScreen","DisplaySessions","setSession","sessions_details","sessions","k","ShowTestLink","getSessionSlug","sessionname","sessionslug","copySuccess","setCopySuccess","textRef","basename","Error","Routes","process","path","exact","render","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cf3d39ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clock.195b3e8e.png\";","module.exports = __webpack_public_path__ + \"static/media/idea.8c35f5e8.png\";","module.exports = __webpack_public_path__ + \"static/media/send.caef97a4.png\";","//export const username = 'kwyktest@gmail.com'\n//export const username = 'kwykreview@gmail.com'\nexport const greenColor =\"#7bc143\";\nexport const greyColor = \"#edeff2\";\nexport const whiteColor = \"#ffffff\";\nexport const welcomeMessage=\"You will be given a term (a word or a phrase). Please enter as many terms as possible that come to you mind. Separate multiple terms with commas.\"\nexport const tableColors = ['#740000', '#c55b11','#f8aa73', '#b2de83', '#7bc143', '#02b150' ]\nexport const loginTabColor = \"#ffffff\";\nexport const adminTabColor = \"#ffffff\";\nexport const blackColor = \"#000000\";\nexport const darkGrey = \"#959595\";\n\n///URL changes\n//export const kwykURL = \"http://localhost:3000/\";\nexport const kwykURL = \"https://shinykwyk.infoassistants.com/\";\n//export const kwykURL = \"http://ac7c1f0d2149.ngrok.io/\"\nexport const postURL= kwykURL + \"input_custom\";\nexport const loginURL = kwykURL + \"login_custom\";\nexport const pwdResetURL = kwykURL + \"pwd_reset\";\nexport const pwdResetSuccessMsg = 'Your password has been changed! SignIn to continue';\nexport const pwdResetFailedMsg = 'Email id is not registered. Signup with your email id';\nexport const feedbackMessage = 'Hello! you feedback is important to us. Tell us about your experience, issues faced, ideas and suggestions for improvement'\nexport const fbToEmail = 'kwyktest01@gmail.com'\n","export function convertToCamelCase(name) {\n  const words = name.split(\" \");\n  let convertedName = \"\";\n  for (let i = 0; i < words.length; i++) {\n    words[i] = words[i][0].toUpperCase() + words[i].substr(1);\n    convertedName = convertedName + \" \" +words[i]\n  }\n  return convertedName;\n}\n","import React from 'react';\nimport '../static/css/header.css';\nimport knowbotSVG from '../static/images/knowbotpng.png';\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport * as constant from '../components/Constants'\nimport { useHistory } from \"react-router-dom\";\nimport * as utils from '../utils/jsutils'\n\nfunction Header(props){\n  let session = \"\";\n  let tagline =\"\";\n  let fontSize = \"1em\"\n  let username=\"\";\n  session = sessionStorage.getItem('session_name');\n  if(session === 'undefined'){\n    session = ''\n  }\n  if(sessionStorage.getItem('username')){\n    username = sessionStorage.getItem('username');\n  }\n  if(props.topic){\n    tagline = 'about '+utils.convertToCamelCase(props.topic)\n    fontSize = \"1em\"\n  }\n\n  return(\n    <div className=\"row headercontainer\">\n        <div className=\"col-11\">\n          <div className=\"row window-color\">\n            <div className=\"col-2 headerfont\">\n              <img src={knowbotSVG} className=\"knowbotlogo\" alt=\"logo\" />\n            </div>\n            <div className=\"col-6 headerfont\">\n              <div className=\"row title\">\n                Perception (Beta-1)\n              </div>\n              <div className=\"row subtitle\">\n                A word association game\n              </div>\n            </div>\n            <div className=\"col-4 username \">\n              {username}\n            </div>\n          </div>\n        </div>\n        <div className=\"col-1 headerfont\">\n          <DisplayDropDown />\n        </div>\n      </div>\n  );\n}\n\nexport default Header;\n\nfunction DisplayDropDown() {\n  let history = useHistory();\n  function handleLogout() {\n    sessionStorage.clear();\n    history.push({\n      pathname:`/`\n    });\n  }\n  return(\n    <Dropdown style={{backgroundColor: constant.whiteColor}}>\n      <Dropdown.Toggle className=\"ellipsisbutton\" id=\"dropdown-basic\"\n        style={{backgroundColor: constant.whiteColor, color:constant.blackColor}}>\n      </Dropdown.Toggle>\n      <Dropdown.Menu>\n        <Dropdown.Item href=\"#\" onClick={handleLogout} className=\"ellipsismenu\">Logout</Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n","import React from \"react\";\nimport '../static/css/chat.css';\n\nfunction SessionHeader() {\n  let username = '';\n  let session = '';\n  if(sessionStorage.getItem('session_name')){\n    session = sessionStorage.getItem('session_name');\n  }\n  \n  return(\n    <div className=\"row headercontainer\">\n        <div className=\"col-12 userheader\">\n          {session}\n        </div>\n    </div>\n  );\n}\n\nexport default SessionHeader;\n","import { useState, useEffect } from \"react\";\n\nfunction useFetch(url, defaultResponse) {\n  const [data, setData] = useState(defaultResponse);\n  async function getDataFromAPI() {\n    try {\n      const res = await fetch(url);\n      const result = await res.json();\n      let dataList = result;\n      setData({\n        isLoading: false,\n        data: dataList\n      });\n    } catch (e) {\n      setData({\n        isLoading: false,\n        error: e\n      });\n    }\n  }\n\n  useEffect(() => {\n    getDataFromAPI()\n  }, [url]);\n  return data;\n}\n\nexport default useFetch;\n","import React from 'react';\nimport Alert from 'react-bootstrap/Alert'\n\nfunction DisplayAlert(props) {\n  let message = \"\"+props.message;\n  return(\n    <Alert variant='danger' className='alert'>\n        {message}\n    </Alert>\n\n  );\n}\n\nexport default DisplayAlert;\n","import React, {useState} from 'react';\nimport * as constant from '../components/Constants'\nimport '../static/css/contents.css';\nimport * as utils from '../utils/jsutils'\n\nfunction SelectionButtons(props){\n  const [clickedButton, setClickedButton] = useState(\"\");\n  const topics = props.topics;\n  let height = \"30vh\";\n  function getClickedButton(name){\n    props.getSelectedTopic(name);\n    setClickedButton(name);\n  }\n  if (props.styling === \"topics-area\"){\n    if(clickedButton === \"\"){\n      height = \"50vh\";\n    }\n    else {\n      height = \"22vh\";\n    }\n  }\n\n  const buttonList = topics.map((topic, index) =>\n      <TopicButton name={topic} textColor={topic === clickedButton ? constant.whiteColor : constant.blackColor }\n      buttonColor={topic === clickedButton ? constant.darkGrey : constant.greyColor}\n      getClickedButton={getClickedButton} key={index}/>\n  );\n  return (<div className={`${props.styling}`} style={{height:height}}>{buttonList}</div>);\n}\n\nexport default SelectionButtons;\n\nfunction TopicButton(props){\n  function handleClick(e){\n    props.getClickedButton(e.target.value);\n  }\n  return (<button className=\"rounded-pill topic-btn\" value={props.name}\n            style={{color: props.textColor, backgroundColor: props.buttonColor}}\n            onClick={handleClick}> {utils.convertToCamelCase(props.name)}</button>);\n}\n","import React from 'react';\nimport * as constant from '../components/Constants'\nimport useFetch from \"../hooks/useFetch\";\nimport '../static/css/contents.css';\nimport DisplayAlert from '../components/DisplayAlert';\nimport SelectionButtons from '../components/SelectionButtons';\n\nfunction TopicSelectionScreen(props) {\n  return(\n    <div>\n        <div className=\"topics-div\">\n          <DisplayTopics getSelectedTopic={props.getSelectedTopic} styling={\"topics-area\"}/>\n        </div>\n        <div className=\"subtopics-div\">\n          <DisplaySubTopics topic={props.topic} getSelectedSubTopic={props.getSelectedSubTopic}/>\n        </div>\n      </div>\n  );\n}\n\nexport default TopicSelectionScreen;\n\nfunction DisplayMessage(props){\n  return(\n    <div className=\"info-text\">\n    <br />\n      {props.message}\n    </div>\n  );\n}\n\nfunction DisplayTopics(props){\n  const url = constant.kwykURL+\"get/topics/custom\";\n  const message = \"Please choose a topic ...\"\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const topics = fetchResponse.data\n  return (\n    <div className=\"subtopics\">\n    <DisplayMessage message={message}/>\n    <SelectionButtons topics={topics} getSelectedTopic={props.getSelectedTopic}\n        styling={props.styling}/>\n    </div>\n  );\n}\n\n\nfunction DisplaySubTopics(props){\n  if(props.topic){\n    return(\n      <div className=\"subtopics\">\n      <DisplayMessage message=\"Choose your subtopic\"/>\n      <GetSubTopics getSelectedSubTopic={props.getSelectedSubTopic} topic={props.topic}\n                styling={\"subtopics-area\"}/>\n      </div>\n    );\n  }\n  else{\n    return(\n      <div>\n      <DisplayMessage message=\"\"/>\n      <div className=\"subtopics-area\"></div>\n      </div>\n    );\n  }\n}\n\n\nfunction GetSubTopics(props){\n  const url = constant.kwykURL+\"get/\"+props.topic+\"/subtopics\";\n\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error}/>\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const subtopics = fetchResponse.data\n  return <SelectionButtons topics={subtopics} getSelectedTopic={props.getSelectedSubTopic} styling={props.styling}/>;\n}\n","import React, {useState} from 'react';\nimport Header from \"../headers/KwykHeader\";\nimport SessionHeader from \"../headers/SessionHeader\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport '../static/css/contents.css';\nimport TopicSelectionScreen from \"./TopicSelectionScreen\";\n\nfunction DisplayTopic(){\n  let history = useHistory();\n  const location = useLocation();\n  if(sessionStorage.getItem('useremail') == null){\n    const destinationPath = location.pathname\n    history.push({\n      pathname:`/`,\n      query: {destinationPath}\n    });\n    return null;\n  }\n  else{\n    return <TopicSelection/>\n  }\n}\n\nfunction TopicSelection(){\n    const [topic,setTopic] = useState(\"\");\n    const [subtopic,setSubTopic] = useState(\"\");\n    function getSelectedTopic(data){\n      setTopic(data);\n    }\n    function getSelectedSubTopic(data){\n      setSubTopic(data);\n    }\n    return(\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-2\"></div>\n            <div className=\"col-lg-8 non-header\">\n              <Header />\n              <SessionHeader />\n              <TopicSelectionScreen\n                  getSelectedTopic={getSelectedTopic}\n                  topic={topic}\n                  getSelectedSubTopic={getSelectedSubTopic}\n                  />\n              <DisplayStartButton topic={topic} subtopic={subtopic}/>\n            </div>\n          <div className=\"col-lg-2\"></div>\n        </div>\n      </div>\n\n    );\n}\n\nexport default DisplayTopic;\n\nfunction DisplayStartButton(props){\n  let history = useHistory();\n  let buttonDisplay;\n  if(props.subtopic){\n    buttonDisplay =\"block\";\n  }\n  else{\n    buttonDisplay =\"none\";\n  }\n  function handleClick(e){\n      initializeSessionStorage(props.topic, props.subtopic)\n      history.push({\n        pathname:'/chat/'+props.topic+'/'+props.subtopic,\n      });\n  }\n  return(\n    <button className=\"start-button fixed-bottom\" value=\"start\"\n      onClick={handleClick} style={{display: buttonDisplay}}>Start</button>\n\n  );\n}\n\nfunction initializeSessionStorage(topic, subtopic) {\n  sessionStorage.setItem('topic', topic);\n  sessionStorage.setItem('subtopic', subtopic);\n  sessionStorage.setItem('attempted', 0);\n  sessionStorage.setItem('skipped', 0);\n  sessionStorage.setItem('minutes', 0);\n  sessionStorage.setItem('seconds', 0);\n  sessionStorage.setItem('userResponses', JSON.stringify({}));\n  sessionStorage.setItem('retry', false);\n}\n","import React from 'react';\nimport '../static/css/header.css';\nimport clock from '../static/images/clock.png';\n\n\nfunction TimerHeader(props){\n  const time = props.time;\n  const username = sessionStorage.getItem('username');\n  return(\n    <div className=\"row headercontainer timer-row\">\n      <div className=\"col-8\">\n        {username}\n      </div>\n      <div className=\"col-4\">\n        <img src={clock} className=\"clock-img\" alt=\"logo\" />\n        {time[0]} : {time[1]}\n      </div>\n    </div>\n  );\n}\n\nexport default TimerHeader;\n","import { useState, useEffect } from \"react\";\nimport '../static/css/header.css';\n\nconst useTimer = (mins, secs) => {\n    const [seconds, setSeconds] = useState(secs);\n    const [minutes, setMinutes] = useState(mins);\n    useEffect(() => {\n      const time = setInterval(setTime, 1000);\n        return () => {\n          clearInterval(time);\n          //props.getTime(minutes,seconds);\n        }\n    },[seconds]);\n\n    function setTime(){\n      setSeconds(seconds + 1);\n      if(seconds === 59){\n        setSeconds(0);\n        setMinutes(minutes + 1);\n      }\n    }\n\n    return(\n        [minutes,seconds]\n    );\n}\n\nexport default useTimer;\n","import { useState, useEffect } from \"react\";\n\nfunction usePost(url, dataText, defaultResponse) {\n  const [data, setData] = useState(defaultResponse);\n  const  requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify(dataText)\n  };\n  async function postDataToAPI() {\n    try {\n      const res = await fetch(url, requestOptions);\n      const result = await res.json();\n      setData({\n        isLoading: false,\n        data: result\n      });\n    } catch (e) {\n      setData({\n        isLoading: false,\n        error: e\n      });\n    }\n  }\n\n  useEffect(() => {\n    postDataToAPI()\n  }, [url]);\n  return data;\n}\n\nexport default usePost;\n","import React, {useState, useEffect, useRef} from 'react';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Header from \"../headers/KwykHeader\";\nimport TimerHeader from \"../headers/TimerHeader\";\nimport useTimer from \"../hooks/useTimer\";\nimport ideapng from '../static/images/idea.png';\nimport sendlogo from '../static/images/send.png';\nimport '../static/css/chat.css';\nimport * as constant from '../components/Constants'\nimport usePost from \"../hooks/usePost\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport DisplayAlert from '../components/DisplayAlert';\nimport SessionHeader from \"../headers/SessionHeader\";\n\nvar time;\nvar currentWord = '';\nvar is_retry;\n\nfunction ChatBot(){\n  let history = useHistory();\n  const location = useLocation();\n  if(sessionStorage.getItem('useremail') == null){\n    const destinationPath = location.pathname\n    history.push({\n      pathname:`/`,\n      query: {destinationPath}\n    });\n    return null;\n  }\n  else{\n    return <DisplayTest />\n  }\n}\n\nexport default ChatBot;\n\n\nfunction DisplayTest() {\n  let chatMessages = '';\n  let prevWords = {};\n  if(sessionStorage.getItem('userResponses')){\n    prevWords = JSON.parse(sessionStorage.getItem('userResponses'));\n  }\n  is_retry = false;\n  if(sessionStorage.getItem('retry') === 'true'){\n    is_retry = true;\n    chatMessages=[\"retry\"];\n  }\n  else{\n    chatMessages=[\"welcome\",\"first\"];\n  }\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const topic = sessionStorage.getItem('topic');\n  const username = sessionStorage.getItem('username');\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-2\"></div>\n        <div className=\"col-lg-8 non-header\">\n          <Header topic={topic} username={username}/>\n          <SessionHeader />\n          <ShowTimeHeader/>\n          <DisplayChat minutes={minutes}\n                     seconds={seconds}\n                     chatMessages={chatMessages}\n                     prevWords={prevWords}\n                     />\n        </div>\n        <div className=\"col-lg-2\"></div>\n      </div>\n    </div>\n  );\n}\n\n\nfunction ShowTimeHeader(){\n  const minutes = parseInt(sessionStorage.getItem('minutes'));\n  const seconds = parseInt(sessionStorage.getItem('seconds'));\n  time=useTimer(minutes, seconds);\n  return '';\n}\n\n\nfunction DisplayChat(props){\n  const [chatMessages, setChatMessages] = useState(props.chatMessages);\n  const [userInput, setUserInput] = useState(\"\");\n  const actions = [\"welcome\",\"first\",\"next\",\"skip\",\"hint\",\"afterinput\",\"retry\"];\n  function getUserInput(input){\n    setUserInput(input);\n  }\n  function addChat(message){\n    if(actions.includes(message)){\n      setChatMessages([...chatMessages,message]);\n    }\n    else{\n      setChatMessages([...chatMessages,message,\"afterinput\"]);\n    }\n  }\n  const chatList = chatMessages.map((message,index) => {\n    return <GetChatMessages message={message} key={index}\n         prevWords={props.prevWords} userInput={userInput} addChat={addChat}/>\n  }\n );\n const messagesEndRef = useRef(null);\n useEffect(() => {\n    messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n  },[chatList]);\n return(\n    <div className=\"chatcolor\">\n      <div className=\"chatarea\">\n      <ul>\n        {chatList}\n        <li><div className=\"scroll-div\" ref={messagesEndRef} /></li>\n      </ul>\n      </div>\n        <DisplayForm addChat={addChat} getUserInput={getUserInput}/>\n    </div>\n  );\n}\n\n\nfunction GetChatMessages(props) {\n  const message = props.message;\n  if(message ===\"welcome\"){\n    return <ShowWelcomeChat />;\n  }else if(message ===\"first\" || message ===\"next\" || message ===\"skip\" ||message ===\"retry\"){\n    return <GetWord addChat={props.addChat} message={message} prevWords={props.prevWords}/>\n  }\n  else if(message ===\"hint\"){\n    return <ShowHint addChat={props.addChat} />\n  }\n  else if(message ===\"afterinput\"){\n    return <GetWord addChat={props.addChat} message={props.userInput} prevWords={props.prevWords}/>\n  }\n  else{\n    return <DisplayUserInput input={message}/>\n  }\n}\n\n\nfunction ShowWelcomeChat(props){\n  const textArea = document.querySelector('textarea');\n  const textRowCount = textArea ? textArea.value.split(\"\\n\").length : 0;\n  const rows = textRowCount + 3;\n  return(\n    <li>\n      <div className=\"row bot\">\n        <TextareaAutosize className=\"botmessage\" rows={rows} value={constant.welcomeMessage} rowsMin={3} disabled/>\n      </div>\n    </li>\n  );\n}\n\n\nfunction GetWord(props){\n  let history = useHistory();\n  const url = constant.postURL;\n  let text = getCommand(props.message);\n  const useremail = sessionStorage.getItem('useremail');\n  const topic = sessionStorage.getItem('topic');\n  const subtopic = sessionStorage.getItem('subtopic');\n  const session = sessionStorage.getItem('session');\n\n  const dataText = { \"text\": text, \"username\": useremail, \"session\":session, \"referrer\":window.location.href};\n  const fetchResponse = usePost(url, dataText, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const word = fetchResponse.data.text;\n  if(word === 'finish_topic'){\n    sessionStorage.setItem('minutes', time[0]);\n    sessionStorage.setItem('seconds', time[1]);\n    history.push({\n      pathname:`/user_stats/${topic}/${subtopic}`\n    });\n  }\n  if (word === 'wrong_command'){\n    history.push({\n      pathname:`/error`\n    });\n  }\n  currentWord = word;\n  if(word in props.prevWords){\n    return <Test word={word} addChat={props.addChat}/>\n  }\n  else{\n    const messageNoun = props.message==='first' ? 'first' : 'next';\n    const messageText = \"Your \" + messageNoun + \" word is '\"+word + \"'\";\n    return (<BotReply message={messageText}  addChat={props.addChat} />);\n  }\n}\n\nfunction Test(props) {\n  useEffect(()=>{\n    props.addChat(\"next\");\n  },[props.word])\n  return <div></div>\n}\n\nfunction ShowHint(props){\n  const url = constant.postURL;\n  const text = '/explain';\n  const useremail = sessionStorage.getItem('useremail');\n  const session = sessionStorage.getItem('session');\n\n  const dataText = { \"text\": text, \"username\": useremail, \"session\": session, \"referrer\":window.location.href}\n  const fetchResponse = usePost(url, dataText, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const hint = fetchResponse.data.text;\n\n  return( <BotReply message={hint} addChat={props.addChat} />);\n}\n\nfunction DisplayForm(props){\n  const [userInput, setUserInput] = useState(\"\");\n  const buttonText = \"Skip\"\n  function handleClick(){\n    if(userInput.length > 0){\n      let userResponses = JSON.parse(sessionStorage.getItem('userResponses'));\n      userResponses[currentWord] = userInput;\n      sessionStorage.setItem('userResponses',JSON.stringify(userResponses));\n      props.getUserInput(userInput);\n      props.addChat(userInput);\n      setUserInput(\"\");\n      updateAttemptedCount();\n      if(is_retry){\n        updateSkippedCount('reduce');\n      }\n    }\n  }\n  function handleChange(e){\n    setUserInput(e.target.value);\n  }\n  function handleHint(e){\n    props.addChat(\"hint\");\n  }\n  function handleKeyPress(e){\n    if(e.charCode === 13){\n        e.preventDefault();\n        handleClick();\n    }\n  }\n  function handleSkip(e){\n      props.addChat(\"skip\")\n      if(!is_retry){\n        updateSkippedCount('add');\n      }\n  }\n\n  return(\n    <div className=\"row input-area chatcolor\">\n      <button className=\"ideabutton\" value=\"start\" onClick={handleHint}>\n        <img src={ideapng} className=\"idealogo\" alt=\"logo\" />\n      </button>\n      <button className=\"skipbutton\" onClick={handleSkip}>{buttonText}</button>\n      <TextareaAutosize className=\"input-text\" value={userInput} onChange={handleChange}\n        onKeyPress={handleKeyPress} required/>\n      <button className=\"sendbutton\" value=\"start\" onClick={handleClick}>\n        <img src={sendlogo} className=\"idealogo\" alt=\"logo\" />\n      </button>\n    </div>\n  );\n}\n\nfunction DisplayUserInput(props){\n  return(\n    <UserReply message={props.input} />\n  )\n}\n\nfunction BotReply(props){\n  const textArea = document.querySelector('textarea');\n  const textRowCount = textArea ? textArea.value.split(\"\\n\").length : 0;\n  const rows = textRowCount + 3;\n  return(\n    <li>\n      <div className=\"row bot\">\n        <TextareaAutosize className=\"botmessage\" rows={rows} value={props.message}\n        rowsMin={3} id=\"bottext\" disabled/>\n      </div>\n    </li>\n );\n}\n\nfunction  UserReply(props){\n  return(\n  <li>\n    <div className=\"row bot\">\n      <TextareaAutosize className=\"usermessage\" value={props.message} rowsMin={3} disabled />\n    </div>\n  </li>);\n}\n\nfunction updateSkippedCount(action) {\n  let skippedCount=parseInt(sessionStorage.getItem('skipped'));\n  action ==='add' ? skippedCount++ : skippedCount-- ;\n  sessionStorage.setItem('skipped', skippedCount);\n}\n\nfunction updateAttemptedCount() {\n  let attemptedCount=parseInt(sessionStorage.getItem('attempted'));\n  attemptedCount++;\n  sessionStorage.setItem('attempted', attemptedCount);\n}\n\nfunction getCommand(message){\n  let text;\n  switch(message){\n    case 'skip':\n      text = '/skip';\n      break;\n    case 'first':\n    case 'next':\n      text = '/new';\n      break;\n    case 'retry':\n      text = '/retry';\n      break;\n    default:\n      text = message;\n      break;\n  }\n  return text;\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../headers/KwykHeader\";\nimport TimerHeader from \"../headers/TimerHeader\";\nimport '../static/css/stats.css';\n\nfunction UserStats(){\n  let history = useHistory();\n  if(sessionStorage.getItem('useremail') == null){\n    history.push({\n      pathname:`/`\n    });\n    return null;\n  }\n  else{\n    return <StatsPage />\n  }\n}\n\nfunction StatsPage(){\n  const minutes = parseInt(sessionStorage.getItem('minutes'));\n  const seconds = parseInt(sessionStorage.getItem('seconds'));\n  const topic = sessionStorage.getItem('topic');\n  const subtopic = sessionStorage.getItem('subtopic');\n  const username = sessionStorage.getItem('username');\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-2\"></div>\n        <div className=\"col-lg-8 chatcolor\">\n            <Header username={username} />\n            <ShowTimeHeader minutes={minutes} seconds={seconds}/>\n            <DisplayStats minutes={minutes} seconds={seconds} topic={topic}\n            subtopic={subtopic} />\n        </div>\n        <div className=\"col-lg-2\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserStats;\n\nfunction ShowTimeHeader(props){\n  return '';\n}\n\nfunction DisplayStats(props){\n  const attemptedCount = parseInt(sessionStorage.getItem('attempted'));\n  const skippedCount = parseInt(sessionStorage.getItem('skipped'));\n  return(\n    <div className=\"stats-area\">\n      <DisplayScore minutes={props.minutes} seconds={props.seconds}\n      skippedCount={skippedCount} attemptedCount={attemptedCount}/>\n      <RetrySkips topic={props.topic} subtopic={props.subtopic} skippedCount={skippedCount}/>\n      <ViewResponses topic={props.topic} subtopic={props.subtopic}/>\n      <FeedBack />\n    </div>\n  );\n}\n\nfunction RetrySkips(props){\n  let history = useHistory();\n  if(props.skippedCount !== 0){\n    function handleClick(){\n      sessionStorage.setItem('retry', true);\n      history.push({\n        pathname:'/chat/'+props.topic+'/'+props.subtopic\n      });\n    }\n    return(\n      <div className= \"button-area\">\n      <button className=\"retry-button\" value=\"retry\" onClick={handleClick}>Retry Skipped Questions </button>\n      </div>\n    );\n  }\n  else{\n    return(\n      <div></div>\n    );\n  }\n}\n\nfunction ViewResponses(props){\n  let history = useHistory();\n  function handleClick(){\n    history.push({\n    pathname:`/view_responses/${props.topic}/${props.subtopic}`\n    });\n  }\n  return(\n    <div className= \"button-area\">\n    <button className=\"retry-button\" value=\"response\" onClick={handleClick}>See Responses & Explanation</button>\n    </div>\n  );\n}\n\n/*function SwitchTopic(){\n  let history = useHistory();\n  function handleClick(){\n    history.push('/topics')\n  }\n  return(\n    <div className= \"button-area\">\n    <button className=\"retry-button\" value=\"retry\" onClick={handleClick}>Switch Topic</button>\n    </div>\n  );\n}\n*/\nfunction FeedBack(){\n  let history = useHistory();\n  function handleClick(){\n      history.push('/feedback')\n\n  }\n  return(\n    <div className= \"button-area\">\n      <button className=\"retry-button\" value=\"retry\" onClick={handleClick}>Feedback</button>\n    </div>\n  );\n}\n\nfunction DisplayScore(props){\n  return(\n    <div className= \"display-area\">\n      <br />\n      <div className = \"row\">\n        <div className=\"col-12 topic-text center\">\n        You have completed this topic!\n        </div>\n      </div>\n      <div className = \"row\">\n        <div className=\"col-2 darkgrey\"></div>\n        <div className=\"col-4 stat-text left\">\n        #Attempted\n        </div>\n        <div className=\"col-6 topic-text left\">\n        : {props.attemptedCount}\n        </div>\n      </div>\n      <div className = \"row \">\n        <div className=\"col-2 darkgrey\"></div>\n        <div className=\"col-4 stat-text left\">\n        #Skipped\n        </div>\n        <div className=\"col-6 topic-text left\">\n        : {props.skippedCount}\n        </div>\n      </div>\n      <div className = \"row \">\n        <div className=\"col-2 darkgrey\"></div>\n        <div className=\"col-4 stat-text left\">\n        #Time Taken\n        </div>\n        <div className=\"col-6 topic-text left\">\n          : {props.minutes} mins : {props.seconds} secs\n        </div>\n      </div>\n    </div>\n  );\n}\n","import styled from \"styled-components\";\nexport const Tabs = styled.div`\n  overflow: hidden;\n  background: ${props => props.tabcolor};\n  font-family: \"Helvetica\";\n  height: 3em;\n  width:100%;\n`;\n\nexport const Tab = styled.button`\n  border: none;\n  outline: none;\n  cursor: pointer;\n  width: 50%;\n  position: relative;\n  background: ${props => props.tabcolor};\n\n  font-size: 1em;\n  border: ${props => (props.active ? \"1px solid #ccc\" : \"\")};\n  border-bottom: ${props => (props.active ? \"none\" : \"\")};\n  color: ${props => (props.active ? \"#000000\" : \"#959595\")};\n  height: ${props => (props.active ? \"2.6em\" : \"2.6em; top:.4em\")};\n  transition: background-color 0.5s ease-in-out;\n\n  :hover {\n    color: #000000;\n  }\n`;\nexport const Content = styled.div`\n  ${props => (props.active ? \"\" : \"display:none\")}\n`;\n","import React from \"react\";\nimport ReactWordcloud from 'react-wordcloud';\nimport { Resizable } from \"re-resizable\";\n\n\nfunction ShowWordCloud(props) {\n  console.log(props.data);\n  if(props.data.length > 0){\n  const words = props.data;\n  const options = {\n    content: {\n      allowNumbers: false,\n      maxWords: 100,\n      stemmer: null,\n      stopwordsInput: '',\n    },\n    fontSizes: [10, 60],\n    rotations: 3,\n    rotationAngles: [0, 0],\n    padding: 3,\n    backgroundColor:\"#ffffff\"\n  }\n  const resizeStyle = {\n    background: \"#ede2d5\",\n    width:'90%',\n    height: '100%',\n    marginLeft: '5%',\n    marginRight: '5%'\n  }\n  return (\n    <ReactWordcloud className=\"wordcloud\" options={options} words={words} style={resizeStyle}/>\n  );\n}\nelse {\nreturn <div></div>\n}\n}\n\nexport default ShowWordCloud;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Tabs, Tab, Content } from \"../components/Tab\";\nimport Header from \"../headers/KwykHeader\";\nimport SessionHeader from \"../headers/SessionHeader\";\nimport '../static/css/header.css';\nimport '../static/css/stats.css';\nimport useFetch from \"../hooks/useFetch\";\nimport * as constant from '../components/Constants';\nimport DisplayAlert from '../components/DisplayAlert';\nimport ShowWordCloud from '../components/WordCloud'\n\nfunction Responses() {\n  let history = useHistory();\n  if(sessionStorage.getItem('topic') == null){\n    history.push({\n      pathname:`/404`\n    });\n    return null;\n  }\n  else {\n    return <ShowResponsePage />\n  }\n}\n\nfunction ShowResponsePage() {\n  const topic = sessionStorage.getItem('topic');\n  const subtopic = sessionStorage.getItem('subtopic');\n  const username = sessionStorage.getItem('username');\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-2\"></div>\n        <div className=\"col-md-8\">\n            <Header username={username}/>\n            <SessionHeader />\n            <ResponsesTab topic={topic} subtopic={subtopic} />\n        </div>\n        <div className=\"col-md-2\"></div>\n      </div>\n    </div>\n  );\n}\n\nfunction ResponsesTab(props){\n  const [active, setActive] = useState(0);\n  const handleClick = e => {\n    const index = parseInt(e.target.id, 0);\n    if (index !== active) {\n      setActive(index);\n    }\n  };\n  const useremail = sessionStorage.getItem('useremail');\n  const url = constant.kwykURL+\"user_stats_custom/\"+useremail+\"/\"+props.topic+\"/\"+props.subtopic;\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const data = fetchResponse.data\n  console.log(\"DATA=\", data);\n  const topicUserWords = JSON.parse(sessionStorage.getItem('userResponses'));\n  return(\n    <div className=\"tab-color\">\n      <Tabs tabcolor={constant.adminTabColor}>\n        <Tab onClick={handleClick} active={active === 0} id={0} tabcolor={constant.adminTabColor}>\n          RESPONSES\n        </Tab>\n      </Tabs>\n      <>\n        <Content active={active === 0}>\n          <ShowResponses topic={props.topic} subtopic={props.subtopic} data={data} topicUserWords={topicUserWords}/>\n        </Content>\n      </>\n    </div>\n  );\n}\nexport default Responses;\n\nfunction ShowResponses(props){\n  const [selectedValue, setSelectedValue] = useState(convertToCamelCase(props.subtopic));\n  function getSelectedValue(value){\n    setSelectedValue(value);\n  }\n  const data = props.data;\n  const topicWordsResponses = data[\"topic_answers\"];\n  const topicWords = topicWordsResponses[\"topic_words\"];\n  const topicTopWords = topicWordsResponses[\"top_words\"];\n  const topicUserWords = props.topicUserWords;\n  topicWords.sort();\n  const wordResponses = topicWords.map((word,index)=>{\n    if(word in topicUserWords){\n      return <DisplayWordResponses word={word} topicTopWords={topicTopWords} topicUserWords={topicUserWords} key={index}/>\n    }\n  });\n  return(\n    <div >\n      <TopicHeader topics={props.subtopic} getSelectedValue={getSelectedValue} selectedValue={selectedValue}/>\n      <div className= \"responses-area\">\n      <ul>\n        {wordResponses}\n      </ul>\n      </div>\n      <div className=\"bottom-area\"></div>\n    </div>\n  );\n}\n\nfunction TopicHeader(props){\n  const username = sessionStorage.getItem('username');\n  return(\n    <div className=\"row headercontainer grey\">\n      <span className=\"grey topic-label\"> Topic:</span>\n      <span className=\"grey topic-label\"> {props.selectedValue} </span>\n    </div>\n  );\n}\n\nfunction DisplayWordResponses(props){\n  const userWords = props.topicUserWords[props.word];\n  const topWords = props.topicTopWords[props.word];\n  return(\n    <div className=\"word-response\">\n    <label className=\"topicname\">{props.word}</label>\n    <ShowWordCloud data={topWords} />\n    </div>\n  );\n}\n\nfunction DisplayWord(props){\n  let words = \"\"\n  if(props.words){\n    words = props.words.split(',');\n  }\n  return(\n    <div>\n    {words ?\n        <div className=\"white\">{words.map((word,index) => <div className=\"white\" key={index}>\n            <label className=\"word\">{word}</label>\n        </div>)}</div>\n        : null}\n    </div>\n  );\n}\n\nfunction ShowExplanation(props) {\n  const [selectedValue, setSelectedValue] = useState(convertToCamelCase(props.subtopic));\n  function getSelectedValue(value){\n    setSelectedValue(value);\n  }\n  const data = props.data;\n  const topics = data[\"topics\"];\n  const topicWordsResponses = data[\"topic_answers\"];\n  const topicWords = topicWordsResponses[\"topic_words\"];\n  const topicExplanation = topicWordsResponses[\"explanation\"];\n  const topicUserWords = props.topicUserWords;\n  topicWords.sort();\n  const wordExplanations = topicWords.map((word,index)=>{\n    if(word in topicUserWords){\n      return <DisplayExplanation word={word} topicExplanation={topicExplanation} key={index}/>\n    }\n  });\n\n  return(\n    <div >\n      <TopicHeader topics={topics} getSelectedValue={getSelectedValue} selectedValue={selectedValue}/>\n      <div className=\"responses-area\">\n      <ul>\n        {wordExplanations}\n      </ul>\n      </div>\n      <div className=\"bottom-area\"></div>\n    </div>\n  );\n}\n\nfunction DisplayExplanation(props) {\n  const explanations = props.topicExplanation[props.word];\n  return(\n    <div className=\"explain-area\">\n      <label className=\"topicname\">\n        {props.word}\n      </label>\n      <div className=\"row explain-text\">\n        {explanations}\n      </div>\n    </div>\n\n  );\n}\n\nfunction convertToCamelCase(name) {\n  const words = name.split(\" \");\n  let convertedName = \"\";\n  for (let i = 0; i < words.length; i++) {\n    words[i] = words[i][0].toUpperCase() + words[i].substr(1);\n    convertedName = convertedName + \" \" +words[i]\n  }\n  return convertedName;\n}\n","import React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Collapse from 'react-bootstrap/Collapse';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\nimport '../static/css/admin.css';\nimport ShowWordCloud from '../components/WordCloud'\n\nfunction Statistics(props){\n  console.log(props.data);\n  return(\n    <div className='stats'>\n      <DisplayStats data={props.data}/>\n    </div>\n  );\n}\n\nexport default Statistics;\n\nfunction DisplayStats(props) {\n  let totalUsers = 0, totalWords = 0;\n  let leastResponse =[];\n  let mostSkips =[];\n  let commonResponseCount =[];\n  let userResponseCount =[];\n  let userResponseData;\n  const stats = getStats(props.data);\n  const answeredCount =stats[\"answeredCount\"];\n  const skipsCount = stats[\"skipsCount\"];\n  commonResponseCount = stats[\"commonResponseCount\"];\n  const userAnswerCount = stats[\"userAnswerCount\"];\n  totalUsers = stats[\"totalUsers\"];\n  totalWords = stats[\"totalWords\"];\n  mostSkips = getSortedData(skipsCount,1); //second arg 1 to sort desc\n  leastResponse = getSortedData(answeredCount,0);\n  const userResponse = getResponseHist(userAnswerCount, totalWords);\n  userResponseData = userResponse[\"userDivisionData\"];\n  userResponseCount = userResponse[\"userResponseCount\"];\n  const displayItems = [\n                  {message:'Common user responses',data:commonResponseCount, maxVal:totalWords,\n                  type:'cloud'},\n                  {message:'Key terms with least responses',data:leastResponse,maxVal:totalUsers,\n                    type:'progress'},\n                  {message:'Key terms with most skips',data:mostSkips,maxVal:totalUsers,\n                type:'progress'},\n                  {message:'Key terms attempted by users',data:userResponseCount,maxVal:totalUsers,\n                  value:userResponseData,type:'progress'}\n                ]\n  const statButtons = displayItems.map((item,index)=>{\n    return <DisplayButton message={item.message} key={index} maxVal={item.maxVal}\n    data={item.data} value={item.value} type={item.type}/>\n  });\n  return(\n    <div className=\"display-stats\">\n    {statButtons}\n    </div>\n  );\n}\n\nfunction DisplayButton(props){\n  const [open, setOpen] = useState(false);\n  return(\n    <div className=\"display-btn\">\n      <Button\n        onClick={() => setOpen(!open)}\n        aria-controls=\"collapse-text\"\n        aria-expanded={open}\n        variant=\"stats\"\n        className=\"btn-stats\"\n      >\n        {props.message}\n      </Button>\n      <Collapse in={open} className=\"stats-data\">\n        <div className=\"chatcolor\">\n          <DisplayData maxVal={props.maxVal} data={props.data} value={props.value} type={props.type}/>\n        </div>\n      </Collapse>\n    </div>\n  );\n}\n\nfunction DisplayData(props) {\n  if(props.type === 'progress'){\n    return <ShowProgressBar maxVal={props.maxVal} data={props.data} value={props.value}/>\n  }\n  else{\n    return <ShowWordCloud maxVal={props.maxVal} data={props.data} />\n  }\n}\n\nfunction ShowProgressBar(props){\n    const data = props.data;\n    const maxVal = props.maxVal==0? 100:props.maxVal;\n    const statsBar = data.map((statData,index)=>{\n        console.log(\"statData=\", statData);\n        const percent = statData[1];\n        const range = statData[0];\n        let popover;\n        if(props.value){\n          const names = props.value[range];\n          let users = names.join('\\n');\n          popover = (\n            <Popover>\n              <Popover.Title >Users</Popover.Title>\n              <Popover.Content>\n              { users}\n              </Popover.Content>\n            </Popover>\n          );\n        }\n        else{\n            popover = (\n              <Popover> </Popover>\n            );\n        }\n        return (\n          <div className=\"row\">\n            <div className=\"col-sm-4 white\">\n            <label className=\"data-label\"> {statData[0]} </label>\n            </div>\n            <div className=\"col-sm-8 white\">\n            <OverlayTrigger overlay={popover}>\n            <ProgressBar className=\"progress\" now={percent} label={`${percent} `} key={index} max={maxVal} min='0'/>\n            </OverlayTrigger>\n            </div>\n          </div>\n        );\n      });\n    return(\n    <div className=\"statsBar\">\n      {statsBar}\n    </div>\n    );\n}\n\nfunction getStats(data){\n  let skipsCount = {};\n  let answeredCount = {};\n  let wordResponses =[];\n  let userAnswerCount = {};\n  const topicData = data;\n  const words = topicData[\"topic_words\"];\n  const userWords = topicData[\"user_data\"];\n  const totalUsers = Object.keys(userWords).length;\n  const totalWords = words.length;\n  for(var i=0; i < words.length; i++){\n      const word = words[i];\n      skipsCount[word] = 0;\n      answeredCount[word] = 0;\n  }\n  for (i=0; i < words.length; i++){\n      const word = words[i];\n      for(const [key, value] of Object.entries(userWords)){\n        const userEntries = value;\n        if(!Object.keys(userEntries).includes(word)){\n          skipsCount[word] += 1;\n        }\n        else{\n          userAnswerCount[key] = (userAnswerCount[key]||0)+1;\n          answeredCount[word] +=1;\n          wordResponses=wordResponses.concat(userEntries[word].split(\",\"))\n        }\n      }\n    }\n    wordResponses = getWordFrequency(wordResponses);\n    return {\"answeredCount\": answeredCount, \"skipsCount\": skipsCount, \"commonResponseCount\":wordResponses,\n    \"totalUsers\":totalUsers, \"userAnswerCount\":userAnswerCount,\n    \"totalWords\":totalWords}\n}\n\nfunction getWordFrequency(wordArray) {\n  var occurrences = wordArray.reduce(function(obj, index) {\n  obj[index] = (obj[index] || 0) + 1;\n  return obj;\n  }, {});\n  let words = [];\n  for(const [key, value] of Object.entries(occurrences)){\n    words.push({text:key,value:value})\n  }\n  return words;\n}\n\nfunction getSortedData(data,type,count=5){\n  let sortedData = [];\n  for (var word in data) {\n    sortedData.push([word, data[word]]);\n  }\n  sortedData.sort(function(a, b) {\n    if(type === 0){\n      return a[1] - b[1];\n    }\n    else{\n      return b[1] - a[1];\n    }\n  });\n  for(var n=count; n < sortedData.length; n++){\n    if(sortedData[n-1][1] === sortedData[n][1]){\n      count++;\n    }\n    else {\n      break;\n    }\n  }\n  return sortedData.slice(0,count);\n  }\n\nfunction getResponseHist(userData, totalWords) {\n  const divisions = [0, 0.25, 0.5, 0.75, 1];\n  let userDivisionData = {};\n  let userResponseCount =[]\n  //answerDivisions contains split up of word count\n  const answerDivisions = divisions.map((value,index) =>{\n    return `${Math.round(divisions[index] * totalWords)}`\n  });\n  //ansdivpercent = [\"0 - 24\", \"25 - 49\", \"50 - 74\", \"75 - 99\", \"100\"]\n  const ansdivpercent = divisions.map((value,index) =>{\n    let valRange;\n    if(parseInt(value) === 1){\n      valRange = `100%`;\n    }\n    else{\n      valRange = `${value * 100}-${divisions[index + 1]*100 -1}%`\n    }\n    userDivisionData[valRange] =[];\n    return valRange;\n  });\n  for(const [key, value] of Object.entries(userData)){\n    if(value === totalWords){\n      const centPercent = ansdivpercent[ansdivpercent.length - 1];\n      userDivisionData[centPercent].push(key)\n\n    }\n    else{\n      for(let i = 0; i < answerDivisions.length-1; i++){\n        if((value >= answerDivisions[i]) && ((value < answerDivisions[i+1]))){\n          const percent = ansdivpercent[i];\n          userDivisionData[percent].push(key);\n\n        }\n      }\n    }\n  }\n  let count = 0;\n  for(let i=0; i < ansdivpercent.length; i++){\n    const range = ansdivpercent[i];\n    if(userDivisionData[range]){\n      count=userDivisionData[range].length;\n    }\n    userResponseCount.push([range, count]);\n  }\n  return {\"userDivisionData\":userDivisionData, \"userResponseCount\":userResponseCount};\n}\n","import React from 'react';\nimport Header from \"../headers/KwykHeader\";\nfunction AdminAccessDenied() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <Header/>\n        <DisplayError />\n      </div>\n    </div>\n  );\n}\n\nexport default AdminAccessDenied;\n\nfunction DisplayError() {\n  return(\n    <div className='adminerror'>\n       <h4><div className='adminmessage'>Admin Access Denied</div></h4>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Tabs, Tab, Content } from \"../components/Tab\";\nimport Header from \"../headers/KwykHeader\";\nimport '../static/css/header.css';\nimport '../static/css/admin.css';\nimport useFetch from \"../hooks/useFetch\";\nimport * as constant from '../components/Constants'\nimport Statistics from \"./Statistics\";\nimport DisplayAlert from '../components/DisplayAlert';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport AdminAccessDenied from '../components/AdminAccessDenied'\n\nfunction Insights() {\n  let history = useHistory();\n  const location = useLocation();\n\n  if((sessionStorage.getItem('useremail') != null) &&\n      (sessionStorage.getItem('is_admin') === 'true')){\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Header />\n          <StatisticsTab />\n        </div>\n      </div>\n    );\n  }\n  else{\n    if(sessionStorage.getItem('is_admin') === 'false'){\n      return <AdminAccessDenied />\n    }\n    const destinationPath = location.pathname\n    history.push({\n        pathname:`/`,\n        query: {destinationPath}\n      });\n    return null;\n  }\n}\n\nexport default Insights;\n\nfunction StatisticsTab(props){\n  const [active, setActive] = useState(0);\n  const handleClick = e => {\n    const index = parseInt(e.target.id, 0);\n    if (index !== active) {\n      setActive(index);\n    }\n  };\n  let urlSplit = window.location.href.split(\"insights/\")[1].split('/')\n  urlSplit = urlSplit.filter(item => item);\n  const topic = urlSplit[0];\n  const subtopic = urlSplit[1];\n  var url = '';\n  if(urlSplit.length > 2){\n    const session = urlSplit[2];\n    url = constant.kwykURL+\"admin/user_data_custom/\"+topic+\"/\"+subtopic+\"/\"+session;\n  }\n  else{\n    url = constant.kwykURL+\"admin/user_data_custom/\"+topic+\"/\"+subtopic;\n  }\n\n  //const url = constant.kwykURL+\"admin/user_data_custom/\";\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const data = fetchResponse.data;\n\n  return(\n    <div className=\"tab-color\">\n      <Tabs tabcolor={constant.adminTabColor}>\n        <Tab onClick={handleClick} active={active === 0} id={0} tabcolor={constant.adminTabColor}>\n          STATISTICS\n        </Tab>\n        <Tab onClick={handleClick} active={active === 1} id={1} tabcolor={constant.adminTabColor}>\n          INSIGHTS\n        </Tab>\n      </Tabs>\n      <>\n        <Content active={active === 0}>\n          <Statistics data={data}/>\n        </Content>\n        <Content active={active === 1}>\n          <ShowInsights data={data}/>\n        </Content>\n      </>\n    </div>\n  );\n}\n\nfunction ShowInsights(props){\n  const [selectedView, setView] = useState(\"user\");\n  function getView(value){\n    setView(value);\n  }\n  const userData = props.data;\n  return(\n    <div className='insightsview'>\n      <ViewSelection getView={getView} view={selectedView}/>\n      <DisplayUserData userData={userData} selectedView={selectedView}/>\n    </div>\n  );\n}\n\nfunction DisplayUserData(props){\n  let headerWords, limits;\n  const data = props.userData;\n  if(data){\n    const headerData = getHeaderWords(data, props.selectedView);\n    headerWords = headerData[\"headerWords\"];\n    limits = headerData[\"limits\"];\n  }\n  return(\n    <div className=\"display-data\">\n      <table className=\"container\">\n        <GetTableHeader selectedView={props.selectedView} headerWords={headerWords}/>\n        <GetTableData data={data} selectedView={props.selectedView} limits={limits}/>\n      </table>\n    </div>\n  );\n}\n\nfunction GetTableHeader(props){\n  let titleWord;\n   if(props.headerWords){\n     if(props.selectedView === \"user\"){\n       titleWord = \"Username\";\n     }\n     else{\n       titleWord = \"Key Terms\";\n     }\n     const header = props.headerWords.map((word,index)=>{\n       return <th className=\"data\" key={index}>{word}</th>\n     });\n     return(\n       <thead>\n         <tr>\n           <th style={{\"minWidth\":\"200px\"}}>{titleWord}</th>\n           {header}\n         </tr>\n      </thead>\n     );\n   }\n   else {\n     return <thead><tr></tr></thead>\n   }\n}\n\nfunction GetTableData(props){\n  let words, userData;\n  if(props.data){\n     words=props.data[\"topic_words\"];\n     userData = props.data[\"user_data\"];\n  }\n  if(props.selectedView === \"user\"){\n    return <ViewByUsers words={words} userData={userData}/>\n  }\n  else{\n    return <ViewByResponses words={words} userData={userData} limits={props.limits}/>\n  }\n}\n\nfunction ViewSelection(props){\n  const [view, setView] = useState(props.view);\n  function handleChange(e){\n    setView(e.target.value);\n    props.getView(e.target.value);\n  }\n  return(\n    <div className=\"view-div\">\n    Choose a view : \n    <select className=\"view-select\" onChange={handleChange} defaultValue={'user'} value={view}>\n      <option value=\"user\">View By Users</option>\n      <option value=\"responses\"> View By Responses </option>)\n    </select>\n    </div>\n  );\n}\n\nfunction getHeaderWords(data, view) {\n  const userWords = data[\"user_data\"];\n  const totalUsers = Object.keys(userWords).length;\n  const divisions = [0, 0.25, 0.5, 0.75, 1];\n  const userDivisions = divisions.map((value,index) =>{\n    return `${Math.round(divisions[index] * totalUsers)}`\n  });\n  let headerWords=[];\n  let limits = [];\n  if(view === \"user\"){\n    headerWords = data[\"topic_words\"];\n  }\n  else{\n    const limitsData = getLimits(totalUsers, userDivisions);\n    headerWords = limitsData['headerWords'];\n    limits = limitsData['limits'];\n  }\n  return {\"headerWords\":headerWords, \"limits\":limits};\n}\n\nfunction ViewByUsers(props){\n    const userData = props.userData;\n    const words = props.words;\n    if(userData){\n      const data = Object.keys(userData).map((user,index)=>{\n      const userVal = userData[user];\n      const userInput = words.map((word,index)=>{\n        if(userVal[word]){\n          return <td style={{backgroundColor:\"#b2de83\"}} key={index}></td>;\n        }\n        else {\n          return <td style={{backgroundColor:\"#c35c14\"}} key={index}></td>;\n        }\n      });\n      return(\n        <tr key={index}>\n          <th className=\"rowheader\">{user}</th>\n          {userInput}\n        </tr>\n      );\n    });\n    return <tbody>{data}</tbody>\n  }\n  else{\n    return <tbody></tbody>\n  }\n}\n\nfunction ViewByResponses(props) {\n  const userData = props.userData;\n  const words = props.words;\n  let wordUserCount = {};\n  if(userData){\n    const data = words.map((word,index)=>{\n        wordUserCount[word] = getWordResponseCount(word, userData);\n    });\n  }\n  const tableData = Object.keys(wordUserCount).map((word, index)=>{\n    const wordCount = wordUserCount[word];\n    const wordRow = props.limits.map((limit, index)=>{\n      let wordColor = \"#ffffff\";\n      if((wordCount >= limit[0]) && (wordCount <= limit[1])){\n        wordColor  = constant.tableColors[index];\n      }\n      return <td style={{backgroundColor:wordColor}} key={index}></td>\n    });\n\n    return (\n      <tr key={index}>\n        <th className='rowheader'>{word}</th>\n        {wordRow}\n      </tr>\n    );\n  });\n  return <tbody>{tableData}</tbody>\n\n}\n\nfunction getWordResponseCount(word, userData){\n  let count = 0;\n  for(const [key, value] of Object.entries(userData)){\n    const userEntries = value;\n    if(Object.keys(userEntries).includes(word)){\n        count++;\n    }\n  }\n  return count;\n}\n\nfunction getLimits(totalUsers, userDivisions){\n  let headerWords=[];\n  let limits = [];\n  if(totalUsers < 5){\n    for(var i=0; i<=totalUsers; i++ ){\n      limits.push([i,i]);\n      headerWords.push(i);\n    }\n  }\n  else{\n    headerWords.push(0);\n    limits.push([0,0])\n    for(let index = 1; index < userDivisions.length; index++){\n      let begin = parseInt(userDivisions[index-1]) + 1;\n      let end = parseInt(userDivisions[index]);\n      if(end === totalUsers){\n        end = end-1;\n      }\n      if(end < begin){\n        break;\n      }\n      if(begin === end){\n        headerWords.push(end);\n        limits.push([end, end]);\n      }\n      else{\n        headerWords.push(`${begin} - ${end}` );\n        limits.push([begin, end]);\n      }\n\n    }\n    headerWords.push(totalUsers);\n    limits.push([totalUsers, totalUsers]);\n  }\n  return {\"headerWords\":headerWords, \"limits\":limits};\n}\n","import React,{useState} from 'react';\nimport knowbotpng from '../static/images/knowbotpng.png';\nimport '../static/css/login.css';\nimport { Tabs, Tab, Content } from \"../components/Tab\";\nimport * as constant from '../components/Constants'\nimport usePost from \"../hooks/usePost\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport Alert from 'react-bootstrap/Alert'\nvar session = \"\"\n\nfunction Login() {\n  const location = useLocation();\n  if (location.query){\n    sessionStorage.setItem('destinationPath', location.query.destinationPath)\n  }\n  if(sessionStorage.getItem('useremail') != null){\n    return <Redirect />;\n  }\n  else{\n    return <DisplayLogin />\n  }\n}\n\nfunction DisplayLogin(){\n  //sessionStorage.clear()\n  const sessionPath = window.location.href.split('?session=')[1]\n  if(typeof(sessionPath) !== 'undefined'){\n    session = sessionPath.split('/')[0]\n  }\n  return(\n    <div className=\"container\">\n      <DisplayIcon />\n      <LoginTab />\n      <DisplayAlert />\n    </div>\n  );\n}\n\nexport default Login;\n\nfunction DisplayIcon() {\n  return(\n    <div className=\"row logo-title\">\n        <div className=\"col-2 \"></div>\n        <div className=\"col-8 window-color center\">\n          <div className=\"row\">\n            <div className=\"col-4 window-color\">\n              <img src={knowbotpng} className=\"login-logo\" alt=\"logo\" />\n            </div>\n            <div className=\"col-8 window-color\">\n              <div className=\"row logintitle\">\n                Perception (Beta-1)\n              </div>\n              <div className=\"row loginsubtitle\">\n                A word association game\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-2 \"></div>\n    </div>\n  );\n}\n\nfunction DisplayTitle() {\n  return(\n    <div className=\"row \">\n        <div className=\"col-md-2 \"></div>\n        <div className=\"col-md-8 window-color title\">\n            Microknowledge - Little bits of knowledge\n        </div>\n        <div className=\"col-md-2 \"></div>\n    </div>\n  );\n}\n\nfunction LoginTab(props){\n  const [active, setActive] = useState(0);\n  const handleClick = e => {\n    const index = parseInt(e.target.id, 0);\n    if (index !== active) {\n      setActive(index);\n    }\n  };\n\n  return(\n    <div className=\"row \">\n      <div className=\"col-md-2 \"></div>\n        <div className=\"col-md-8 window-color logintab\">\n    <div className=\"tab-color\">\n      <Tabs tabcolor={constant.loginTabColor}>\n        <Tab onClick={handleClick} active={active === 0} id={0} tabcolor={constant.loginTabColor}>\n          SignIn\n        </Tab>\n        <Tab onClick={handleClick} active={active === 1} id={1} tabcolor={constant.loginTabColor}>\n          SignUp\n        </Tab>\n      </Tabs>\n      <>\n        <Content active={active === 0}>\n          <SignInForm />\n        </Content>\n        <Content active={active === 1}>\n          <SignUpForm />\n        </Content>\n      </>\n    </div>\n    </div>\n    <div className=\"col-md-2 \"></div>\n</div>\n  );\n}\n\nfunction SignInForm() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginMessage,setLoginMessage] = useState(\"\");\n  function handleSubmit(e) {\n    e.preventDefault();\n    const message = <ValidateUser email={email} password={password}/>\n    setLoginMessage(message);\n    setEmail(\"\")\n    setPassword(\"\")\n  }\n  function handleEmail(e){\n    setEmail(e.target.value);\n  }\n  function handlePassword(e) {\n    setPassword(e.target.value);\n  }\n  return(\n    <form className=\"loginform\" onSubmit={handleSubmit}>\n      <input type=\"text\" name=\"email\" className=\"text\" placeholder=\"email\"\n      value={email} onChange={handleEmail} required/><br/>\n      <input type=\"password\" name=\"password\" className=\"text\" placeholder=\"password\"\n        value={password} onChange={handlePassword} required/><br/>\n      <label className=\"text\">{loginMessage}</label>\n      <input type=\"submit\" value=\"Sign In\" className=\"signin\"/>\n      <Link to='/reset'>\n      <div className='link reset'>Forgot password?</div>\n      </Link>\n    </form>\n  );\n}\n\nfunction SignUpForm() {\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginMessage,setLoginMessage] = useState(\"\");\n  function handleSubmit(e) {\n    e.preventDefault();\n    const message = <CreateNewUser username={userName} email={email} password={password}/>\n    setLoginMessage(message);\n    setUserName(\"\")\n    setEmail(\"\")\n    setPassword(\"\")\n  }\n  function handleUserName(e) {\n    setUserName(e.target.value);\n  }\n  function handleEmail(e){\n    setEmail(e.target.value);\n  }\n  function handlePassword(e) {\n    setPassword(e.target.value);\n  }\n  return(\n    <form className=\"loginform\" onSubmit={handleSubmit}>\n      <input type=\"text\" id=\"username\" name=\"username\" className=\"text\" value={userName}\n        placeholder=\"username\" onChange={handleUserName} required/><br/>\n      <input type=\"text\" name=\"email\" className=\"text\" placeholder=\"email\"\n      value={email} onChange={handleEmail} required/><br/>\n      <input type=\"password\" name=\"password\" className=\"text\" placeholder=\"password\"\n      value={password} onChange={handlePassword} required/><br/>\n      <label className=\"text\">{loginMessage}</label>\n      <input type=\"submit\" value=\"Sign Up\" className=\"signin\"/>\n    </form>\n  );\n}\n\nfunction ValidateUser(props) {\n  const url = constant.loginURL;\n  const location = useLocation()\n  let loginMessage = '';\n  let sessionName = '';\n  const dataText = { \"email\": props.email, \"password\": props.password, \"session\": session, \"action\": \"signin\"}\n  const fetchResponse = usePost(url, dataText, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const response = fetchResponse.data;\n\n  if(response['status'] === \"password mismatch\"){\n    loginMessage = \"Incorrect Password\";\n    sessionStorage.setItem('loginmessage', loginMessage);\n    window.location.reload();\n  }\n  else if(response['status'] === \"user not found\"){\n    loginMessage = \"Email id is not registered!\";\n    sessionStorage.setItem('loginmessage', loginMessage);\n    window.location.reload();\n  }\n  else{\n    loginMessage = \"Signed in Successfully!\";\n    sessionName = response['session_name'];\n    const userName = response['username'];\n    const is_admin = response['is_admin'];\n    setSessionStorage(userName, props.email, session, sessionName, is_admin);\n    return <Redirect />\n  }\n  return(``);\n}\n\nfunction CreateNewUser(props) {\n  const url = constant.loginURL;\n  const location = useLocation()\n  let loginMessage ='';\n  let sessionName = '';\n  const dataText = { \"username\":props.username, \"email\": props.email, \"password\": props.password,\n    \"session\": session, \"action\": \"signup\"}\n  const fetchResponse = usePost(url, dataText, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const response = fetchResponse.data;\n  if (response['status'] === 'inserted'){\n    sessionName = response['session_name'];\n    const is_admin = false;\n    loginMessage = \"Signed Up Successfully!\";\n    setSessionStorage(props.username, props.email, session, sessionName, is_admin);\n    return <Redirect />\n  }\n  else if(response['status'] === 'duplicate'){\n    loginMessage = \"Email id is already registered\"\n    sessionStorage.setItem('loginmessage', loginMessage);\n    window.location.reload();\n  }\n  return(``)\n}\n\nfunction setSessionStorage(username, useremail, session, session_name, is_admin) {\n  sessionStorage.setItem('username', username);\n  sessionStorage.setItem('useremail', useremail);\n  sessionStorage.setItem('is_admin', is_admin);\n  if(session){\n    sessionStorage.setItem('session', session);\n    sessionStorage.setItem('session_name', session_name);\n  }\n  sessionStorage.removeItem('loginmessage');\n\n}\n\nfunction DisplayAlert() {\n  if(sessionStorage.getItem('loginmessage') != null){\n    let message = sessionStorage.getItem('loginmessage')\n    return(\n      <div className=\"row \">\n        <div className=\"col-md-2 \"></div>\n        <div className=\"col-md-8 window-color\">\n        <Alert variant='danger' className='alert'>\n          {message}\n          </Alert>\n        </div>\n        <div className=\"col-md-2 \"></div>\n      </div>\n    );\n  }\n  else {\n    return(\n      <div></div>\n    );\n  }\n}\n\nfunction initializeSessionStorage(topic, subtopic) {\n  sessionStorage.setItem('topic', topic);\n  sessionStorage.setItem('subtopic', subtopic);\n  sessionStorage.setItem('attempted', 0);\n  sessionStorage.setItem('skipped', 0);\n  sessionStorage.setItem('minutes', 0);\n  sessionStorage.setItem('seconds', 0);\n  sessionStorage.setItem('userResponses', JSON.stringify({}));\n  sessionStorage.setItem('retry', false);\n}\n\nfunction getTopicFromURL(destination) {\n  let topic, subtopic;\n  const urlSplit = destination.split('/');\n  if(urlSplit[urlSplit.length - 3] === 'chat'){\n    topic = urlSplit[urlSplit.length - 2]\n    subtopic = urlSplit[urlSplit.length - 1]\n  }\n  return {'topic':topic, 'subtopic': subtopic}\n}\n\nfunction getDestinationScreen(destination) {\n  const urlSplit = destination.split('/');\n  if(urlSplit[urlSplit.length - 1] === 'admin'){\n    return 'admin';\n  }\n  else if(urlSplit[urlSplit.length - 3] === 'chat') {\n    return 'chat';\n  }\n  return null;\n}\n\nfunction Redirect() {\n  let history = useHistory();\n  const location = useLocation()\n  let destination;\n  if(sessionStorage.getItem('destinationPath')){\n    destination = sessionStorage.getItem('destinationPath');\n    sessionStorage.removeItem('destinationPath');\n    const screenname = getDestinationScreen(destination);\n    if (screenname === 'chat'){\n      const topicDetail = getTopicFromURL(destination);\n      const topic = topicDetail['topic'];\n      const subtopic = topicDetail['subtopic'];\n      initializeSessionStorage(topic, subtopic);\n    }\n  }\n  else{\n    destination = `/topics`;\n  }\n  history.push({\n      pathname:destination\n  });\n\n  return null;\n}\n","import React,{useState} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../headers/KwykHeader\";\nimport SessionHeader from \"../headers/SessionHeader\";\nimport '../static/css/feedback.css';\nimport * as constant from '../components/Constants'\nfunction Feedback() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-2\"></div>\n        <div className=\"col-lg-8\">\n          <Header />\n          <SessionHeader />\n          <ShowTemplate />\n        </div>\n      <div className=\"col-lg-2\"></div>\n    </div>\n  </div>\n  );\n}\nexport default Feedback;\n\nfunction ShowTemplate() {\n  const [userInput, setUserInput] = useState(\"\");\n  const username = sessionStorage.getItem('username');\n  let history = useHistory();\n  function handleChange(e){\n    setUserInput(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    console.log(\"clicked\");\n    e.preventDefault();\n    const serviceID = 'default_service';\n    const templateId = 'template_09oi0b1';\n    sendFeedback(serviceID,templateId, {message: userInput, from_name:username, reply_to: constant.fbToEmail});\n    setUserInput(\"\");\n    history.push({\n      pathname:`/topics`\n    });\n  }\n  return(\n    <div >\n    <form className = \"fbarea\" onSubmit={handleSubmit}>\n    <div className=\"fblabel\">{constant.feedbackMessage}</div>\n    <div className=\"fblabel blank\"> Feedback / Issue / Query</div>\n    <textarea className=\"fbtext\" value={userInput} placeholder=\"Type your response here...\" onChange={handleChange}></textarea>\n    <input type=\"submit\" value=\"Submit\" className=\"fbsubmitbtn \"/>\n    </form>\n    </div>\n  );\n}\n\nfunction sendFeedback (serviceID,templateId, variables) {\n window.emailjs.send(\n   serviceID, templateId,\n   variables\n   ).then(res => {\n     console.log('Email successfully sent!')\n   })\n   // Handle errors here however you like, or use a React error boundary\n   .catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\n }\n","import React, {useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../headers/KwykHeader\";\nimport * as constant from '../components/Constants'\nimport usePost from \"../hooks/usePost\";\nimport DisplayAlert from '../components/DisplayAlert'\n\nfunction PasswordReset() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-2\"></div>\n        <div className=\"col-sm-8 chatcolor\">\n            <Header />\n            <br />\n            <ResetArea />\n        </div>\n        <div className=\"col-sm-2\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default PasswordReset;\n\nfunction ResetArea() {\n  const [email, setEmail] = useState(\"\");\n  const [btnValue, setBtnValue] = useState(\"Reset Password\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [pwdMessage,setPwdMessage] = useState(\"\");\n  let history = useHistory();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    let message = '';\n    if(newPassword === confirmPassword){\n      message = <ChangePwd email={email} password={newPassword}/>\n      setPwdMessage(message);\n      setBtnValue(\"Home\")\n      setEmail(\"\")\n      setNewPassword(\"\")\n      setConfirmPassword(\"\")\n    }\n    else {\n      message = \"Password Mismatch\";\n      setPwdMessage(message);\n    }\n  }\n  function handleEmail(e) {\n    setEmail(e.target.value);\n  }\n  function handleOldPassword(e) {\n    setNewPassword(e.target.value);\n  }\n  function handleNewPassword(e) {\n    setConfirmPassword(e.target.value);\n  }\n  function handleClick(e) {\n    if(e.target.value === 'Home'){\n      sessionStorage.removeItem('loginmessage');\n      history.push({\n          pathname:`/`,\n      });\n    }\n  }\n  return(\n    <div className=\"pwdreset\">\n    <form className=\"loginform\" onSubmit={handleSubmit}>\n      <label className=\"pwdtext\"> Change your password here...</label>\n      <input type=\"text\" name=\"email\" className=\"text\" placeholder=\"email id\"\n      value={email} onChange={handleEmail} required/><br/>\n      <input type=\"password\" name=\"password\" className=\"text\" placeholder=\"new password\"\n        value={newPassword} onChange={handleOldPassword} required/><br/>\n      <input type=\"password\" name=\"password\" className=\"text\" placeholder=\"confirm password\"\n          value={confirmPassword} onChange={handleNewPassword} required/><br/>\n      <label className=\"pwdmessage\">{pwdMessage}</label>\n      <input type=\"submit\" value={btnValue} className=\"pwdbtn\" onClick={handleClick}/>\n      </form>\n    </div>\n  );\n}\n\nfunction ChangePwd(props) {\n  const url = constant.pwdResetURL;\n  let message = '';\n  const dataText = { \"email\": props.email, \"password\": props.password}\n  const fetchResponse = usePost(url, dataText, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const response = fetchResponse.data;\n  if (response['status'] === 'success'){\n        message = constant.pwdResetSuccessMsg;\n  }\n  else{\n     message = constant.pwdResetFailedMsg;\n  }\n  return(`${message}`);\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from \"../headers/KwykHeader\";\nimport SessionHeader from \"../headers/SessionHeader\";\nimport '../static/css/error.css';\n\nfunction Page404() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-2\"></div>\n        <div className=\"col-sm-8 chatcolor\">\n            <Header />\n            <SessionHeader/>\n            <Display404 />\n        </div>\n        <div className=\"col-sm-2\"></div>\n      </div>\n    </div>\n  );\n}\nfunction Display404() {\n  return(\n    <div className='error'>\n       <h2><div className='message'>Error: 404 - Page not found</div></h2>\n       <Link to='/topics'>\n       <div className='link'>Home</div>\n       </Link>\n    </div>\n  );\n}\n\nexport default Page404;\n","import React, {useState} from 'react';\nimport Header from \"../headers/KwykHeader\";\nimport '../static/css/contents.css';\nimport TopicSelectionScreen from \"./TopicSelectionScreen\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport AdminAccessDenied from '../components/AdminAccessDenied';\n\nfunction AdminScreen() {\n  let history = useHistory();\n  const location = useLocation();\n\n  if((sessionStorage.getItem('useremail') != null) && (sessionStorage.getItem('is_admin') === 'true')){\n        return <TopicSelection />\n  }\n  else{\n    if(sessionStorage.getItem('is_admin') === 'false'){\n      return <AdminAccessDenied />\n    }\n    const destinationPath = location.pathname\n    history.push({\n        pathname:`/`,\n        query: {destinationPath}\n      });\n    return null;\n  }\n}\nexport default AdminScreen;\n\nfunction TopicSelection(){\n    const [topic,setTopic] = useState(\"\");\n    const [subtopic,setSubTopic] = useState(\"\");\n    function getSelectedTopic(data){\n      setTopic(data);\n    }\n    function getSelectedSubTopic(data){\n      setSubTopic(data);\n    }\n    return(\n      <div className=\"container\">\n        <div className=\"row\">\n          <Header/>\n          <div className=\"topics-subtopics\">\n            <TopicSelectionScreen\n              getSelectedTopic={getSelectedTopic}\n              topic={topic}\n              getSelectedSubTopic={getSelectedSubTopic}\n              />\n            <DisplayButton topic={topic} subtopic={subtopic}/>\n          </div>\n        </div>\n      </div>\n    );\n}\n\nfunction DisplayButton(props){\n  let history = useHistory();\n  let buttonDisplay;\n  //const [buttonDisplay, setButtonDisplay] = useState(\"none\");\n  if(props.subtopic){\n    buttonDisplay =\"block\";\n  }\n  else{\n    buttonDisplay =\"none\";\n  }\n  function handleClick(e){\n      history.push({\n        pathname:'/admin/'+props.topic+'/'+props.subtopic\n      });\n  }\n  return(\n    <button className=\"next-button\" value=\"start\"\n      onClick={handleClick} style={{display: buttonDisplay}}>Next >> </button>\n  );\n}\n","import React, {useState, useRef} from 'react';\nimport * as constant from '../components/Constants'\nimport useFetch from \"../hooks/useFetch\";\nimport '../static/css/contents.css';\nimport DisplayAlert from '../components/DisplayAlert';\nimport { useHistory } from \"react-router-dom\";\nimport SelectionButtons from '../components/SelectionButtons';\nimport Header from \"../headers/KwykHeader\";\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\nfunction SessionSelectionScreen() {\n  const urlSplit = window.location.href.split(\"/\")\n  const topic = urlSplit[urlSplit.length-2]\n  const subtopic = urlSplit[urlSplit.length-1]\n\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <Header/>\n        <div className=\"sessions\">\n          <div className=\"row topics-div\">\n            <DisplaySessions topic={topic} subtopic={subtopic}\n              styling={\"sessions-area\"}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SessionSelectionScreen;\n\nfunction DisplaySessions(props){\n  const [session,setSession] = useState(\"\");\n  function getSelectedSession(data){\n    setSession(data);\n  }\n  const url = constant.kwykURL+\"get/sessions/custom\";\n  const message = \"Please choose your session ...\"\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const sessions_details = fetchResponse.data\n  var sessions = []\n  for(var k in sessions_details){\n    sessions.push(sessions_details[k]['session_name']);\n  }\n  return (\n    <div className=\"subtopics\">\n     <div className=\"admin-session\">\n      <DisplayMessage message={message}/>\n      <SelectionButtons topics={sessions} getSelectedTopic={getSelectedSession}\n        styling={props.styling}/>\n      <ShowTestLink topic={props.topic} subtopic={props.subtopic}\n        session={getSessionSlug(sessions_details,session)}/>\n      </div>\n      <DisplayButton topic={props.topic} subtopic={props.subtopic} sessionname={session}\n          sessionslug={getSessionSlug(sessions_details,session)}\n          />\n    </div>\n  );\n}\n\nfunction DisplayMessage(props){\n  return(\n    <div className=\"info-text\">\n    <br />\n      {props.message}\n    </div>\n  );\n}\n\nfunction DisplayButton(props){\n  let history = useHistory();\n  let buttonDisplay;\n  //const [buttonDisplay, setButtonDisplay] = useState(\"none\");\n  if(props.subtopic){\n    buttonDisplay =\"block\";\n  }\n  else{\n    buttonDisplay =\"none\";\n  }\n  function handleClick(e){\n    let pathname = '';\n    if (props.sessionslug !== ''){\n      pathname='/insights/'+props.topic+'/'+props.subtopic+'/'+props.sessionslug\n    }\n    else{\n      pathname='/insights/'+props.topic+'/'+props.subtopic\n    }\n    history.push({\n      pathname:pathname\n    });\n\n      //history.push('/'+props.topic+'/'+props.subtopic);\n  }\n  return(\n    <div className='session-btn-div'>\n      <button className=\"stats-button\" value=\"start\"\n        onClick={handleClick} style={{display: buttonDisplay}}>View Statistics</button>\n    </div>\n  );\n}\n\n\nfunction ShowTestLink(props) {\n  const [copySuccess, setCopySuccess] = useState('');\n  const textRef = useRef(null);\n  const basename = window.location.href.split(\"admin\")[0];\n  let url = '';\n  if(props.session){\n    url  = basename.split('#')[0]+'?session='+props.session+'/#/chat/'+props.topic+'/'+props.subtopic\n  }\n  else{\n    url  = basename+'chat/'+props.topic+'/'+props.subtopic\n  }\n\n  function handleClick(e) {\n    setCopySuccess('Copied!');\n  };\n\n  return(\n    <div className=\"row testlink\">\n      <div className = \"col-2 testlink\">\n      <label className=\"linklabel\"> Test Link:  </label>\n      </div>\n      <div className = \"col-10 testlink\">\n      <input type=\"text\" ref={textRef} name=\"email\" className=\"linktext\" value={url} placeholder={url}\n       disabled=\"disabled\" id=\"link\"/>\n       <CopyToClipboard text={url}>\n           <button className=\"linkbutton\" onClick={handleClick}>Copy</button>\n       </CopyToClipboard>\n       <span className=\"copytext\">{copySuccess}</span>\n      </div>\n    </div>\n  );\n}\n\nfunction getSessionSlug(sessions_details,session) {\n  for(var k in sessions_details){\n    if (sessions_details[k]['session_name'] === session){\n      return sessions_details[k]['session_slug'];\n    }\n  }\n  return \"\";\n}\n","import React from 'react';\nimport Header from \"../headers/KwykHeader\";\nimport SessionHeader from \"../headers/SessionHeader\";\nimport '../static/css/error.css';\n\nfunction Error() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-2\"></div>\n        <div className=\"col-lg-8 chatcolor\">\n            <Header />\n            <SessionHeader/>\n            <DisplayError />\n        </div>\n        <div className=\"col-lg-2\"></div>\n      </div>\n    </div>\n  );\n}\nfunction DisplayError() {\n  return(\n    <div className='error'>\n       <h4><div className='message'>Wrong topic or subtopic. Please check your URL!</div></h4>\n    </div>\n  );\n}\n\nexport default Error;\n","import React, {useState} from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport DisplayTopic from '../screens/DisplayTopic';\nimport ChatBot from '../screens/ChatBot'\nimport UserStats from '../screens/UserStats'\nimport Responses from '../screens/Responses'\nimport Insights from '../screens/Insights'\nimport Login from \"../screens/Login\";\nimport Feedback from \"../screens/Feedback\";\nimport PasswordReset from './PasswordReset';\nimport Page404 from './Page404';\nimport AdminScreen from \"../screens/AdminScreen\"\nimport SessionSelectionScreen from \"../screens/SessionSelectionScreen\"\nimport Error from './Error';\n\nfunction Routes(){\n    return(\n      <Router  basename={`${process.env.PUBLIC_URL}/`}>\n      <Switch>\n      <Route path=\"/\" exact render={() => <Login/>} />\n      <Route path=\"/topics\" exact render={() => <DisplayTopic/>} />\n      <Route path=\"/reset\" exact render={() => <PasswordReset/>} />\n      <Route path=\"/chat/:topic/:subtopic\" render={() => <ChatBot/>} />\n      <Route path=\"/user_stats/:topic/:subtopic\" render={() => <UserStats/>} />\n      <Route path=\"/view_responses/:topic/:subtopic\" render={() => <Responses/>} />\n      <Route path=\"/feedback\" render={() => <Feedback/>} />\n      <Route path=\"/admin\" exact render={() => <AdminScreen/>} />\n      <Route path=\"/admin/:topic/:subtopic\" exact render={() => <SessionSelectionScreen/>} />\n      <Route path=\"/insights/:topic/:subtopic\" render={() =>\n                <Insights />} />\n      <Route path=\"/error\" render={() => <Error/>} />\n      <Route render={() => <Page404/>} />\n      </Switch>\n      </Router>\n    );\n}\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Routes from './components/Routes';\n\nfunction App() {\n  return(\n    <Router >\n      <div className=\"App\">\n        <Routes />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/knowbotpng.c964294f.png\";"],"sourceRoot":""}