{"version":3,"sources":["static/images/clock.png","static/images/idea.png","static/images/send.png","components/Constants.js","headers/KwykHeader.js","headers/UserHeader.js","hooks/useFetch.js","components/DisplayAlert.js","components/SelectionButtons.js","screens/TopicSelectionScreen.js","screens/DisplayTopic.js","headers/TimerHeader.js","hooks/useTimer.js","hooks/usePost.js","screens/ChatBot.js","screens/UserStats.js","components/Tab.js","screens/Responses.js","screens/Statistics.js","components/AdminAccessDenied.js","screens/Insights.js","screens/Login.js","screens/Feedback.js","components/PasswordReset.js","components/Page404.js","screens/AdminScreen.js","screens/SessionSelectionScreen.js","components/Error.js","components/Routes.js","App.js","index.js","static/images/knowbotSVG.svg"],"names":["module","exports","tableColors","kwykURL","Header","session","sessionStorage","getItem","history","useHistory","className","src","knowbotSVG","alt","Dropdown","Toggle","id","style","backgroundColor","color","Menu","Item","href","onClick","clear","push","pathname","UserHeader","username","useFetch","url","defaultResponse","useState","data","setData","a","fetch","res","json","result","isLoading","error","useEffect","getDataFromAPI","DisplayAlert","props","message","Alert","variant","SelectionButtons","clickedButton","setClickedButton","topics","height","getClickedButton","name","getSelectedTopic","styling","buttonList","map","topic","index","TopicButton","textColor","buttonColor","key","value","e","target","words","split","convertedName","i","length","toUpperCase","substr","convertToCamelCase","TopicSelectionScreen","DisplayTopics","DisplaySubTopics","getSelectedSubTopic","DisplayMessage","fetchResponse","constant","GetSubTopics","subtopics","TopicSelection","setTopic","subtopic","setSubTopic","DisplayStartButton","DisplayTopic","location","useLocation","destinationPath","query","buttonDisplay","setItem","JSON","stringify","display","TimerHeader","time","clock","useTimer","mins","secs","seconds","setSeconds","minutes","setMinutes","setTime","setInterval","clearInterval","usePost","is_retry","dataText","requestOptions","method","headers","body","postDataToAPI","currentWord","ChatBot","DisplayTest","chatMessages","prevWords","parse","ShowTimeHeader","DisplayChat","parseInt","setChatMessages","userInput","setUserInput","actions","addChat","includes","chatList","GetChatMessages","messagesEndRef","useRef","current","scrollIntoView","behavior","ref","DisplayForm","getUserInput","input","ShowWelcomeChat","GetWord","ShowHint","DisplayUserInput","textArea","document","querySelector","rows","rowsMin","disabled","text","getCommand","useremail","window","word","Test","messageText","BotReply","hint","handleClick","userResponses","attemptedCount","updateAttemptedCount","updateSkippedCount","ideapng","onChange","onKeyPress","charCode","preventDefault","required","sendlogo","UserReply","action","skippedCount","StatsPage","DisplayStats","UserStats","DisplayScore","RetrySkips","ViewResponses","FeedBack","Tabs","styled","div","tabcolor","Tab","button","active","Content","ShowResponsePage","ResponsesTab","setActive","topicUserWords","ShowResponses","ShowExplanation","Responses","selectedValue","setSelectedValue","topicWordsResponses","topicWords","topicTopWords","sort","wordResponses","DisplayWordResponses","TopicHeader","getSelectedValue","userWords","topWords","DisplayWord","topicExplanation","wordExplanations","DisplayExplanation","explanations","Statistics","totalUsers","totalWords","leastResponse","mostSkips","commonResponseCount","userResponseData","stats","skipsCount","answeredCount","userAnswerCount","topicData","Object","keys","entries","userEntries","concat","wordArray","occurrences","reduce","obj","getWordFrequency","getStats","getSortedData","userResponse","userData","divisions","userDivisionData","userResponseCount","answerDivisions","Math","round","ansdivpercent","valRange","centPercent","percent","count","range","getResponseHist","statButtons","maxVal","type","item","DisplayButton","open","setOpen","Button","aria-controls","aria-expanded","Collapse","in","DisplatData","ShowProgressBar","ShowWordCloud","resizeStyle","background","width","defaultSize","options","fontSizes","rotations","rotationAngles","padding","statsBar","statData","console","log","popover","users","join","Popover","Title","OverlayTrigger","overlay","ProgressBar","now","label","max","min","sortedData","b","n","slice","AdminAccessDenied","DisplayError","Insights","StatisticsTab","urlSplit","filter","ShowInsights","selectedView","setView","ViewSelection","getView","view","DisplayUserData","headerWords","limits","headerData","userDivisions","limitsData","begin","end","getLimits","getHeaderWords","GetTableHeader","GetTableData","titleWord","header","ViewByUsers","ViewByResponses","defaultValue","user","userVal","wordUserCount","getWordResponseCount","tableData","wordCount","wordRow","limit","wordColor","DisplayLogin","sessionPath","DisplayIcon","DisplayTitle","LoginTab","Login","Redirect","SignInForm","SignUpForm","email","setEmail","password","setPassword","loginMessage","setLoginMessage","onSubmit","ValidateUser","placeholder","to","userName","setUserName","CreateNewUser","sessionName","response","reload","is_admin","setSessionStorage","session_name","removeItem","destination","getDestinationScreen","topicDetail","getTopicFromURL","initializeSessionStorage","Feedback","ShowTemplate","serviceID","templateId","variables","emailjs","send","then","catch","err","sendFeedback","from_name","reply_to","PasswordReset","ResetArea","btnValue","setBtnValue","newPassword","setNewPassword","confirmPassword","setConfirmPassword","pwdMessage","setPwdMessage","ChangePwd","Display404","Page404","AdminScreen","SessionSelectionScreen","DisplaySessions","setSession","sessions_details","sessions","k","ShowTestLink","getSessionSlug","sessionname","sessionslug","copySuccess","setCopySuccess","textRef","basename","Error","Routes","process","path","exact","render","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.25c95db9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clock.195b3e8e.png\";","module.exports = __webpack_public_path__ + \"static/media/idea.8c35f5e8.png\";","module.exports = __webpack_public_path__ + \"static/media/send.caef97a4.png\";","//export const username = 'kwyktest@gmail.com'\n//export const username = 'kwykreview@gmail.com'\nexport const greenColor =\"#7bc143\";\nexport const greyColor = \"#edeff2\";\nexport const whiteColor = \"#ffffff\";\nexport const welcomeMessage=\"You will be given a term (a word or a phrase). Please enter as many terms as possible that come to you mind. Separate multiple terms with commas.\"\nexport const tableColors = ['#740000', '#c55b11','#f8aa73', '#b2de83', '#7bc143', '#02b150' ]\nexport const loginTabColor = \"#ffffff\";\nexport const adminTabColor = \"#ffffff\";\nexport const blackColor = \"#000000\";\nexport const darkGrey = \"#959595\";\n\n///URL changes\n//export const kwykURL = \"http://localhost:3001/\";\nexport const kwykURL = \"https://shiny.kwyk.in/\";\n//export const kwykURL = \"http://ac7c1f0d2149.ngrok.io/\"\nexport const postURL= kwykURL + \"input_custom\";\nexport const loginURL = kwykURL + \"login_custom\";\nexport const pwdResetURL = kwykURL + \"pwd_reset\";\nexport const pwdResetSuccessMsg = 'Your password has been changed! SignIn to continue';\nexport const pwdResetFailedMsg = 'Email id is not registered. Signup with your email id';\nexport const feedbackMessage = 'Hello! you feedback is important to us. Tell us about your experience, issues faced, ideas and suggestions for improvement'\nexport const fbToEmail = 'kwyktest01@gmail.com'\n","import React from 'react';\nimport '../static/css/header.css';\nimport knowbotSVG from '../static/images/knowbotSVG.svg';\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport * as constant from '../components/Constants'\nimport { useHistory } from \"react-router-dom\";\n\nfunction Header(){\n  let session = \"\";\n  session = sessionStorage.getItem('session_name');\n  if(session === 'undefined'){\n    session = ''\n  }\n  let history = useHistory();\n  function handleLogout() {\n    sessionStorage.clear();\n    history.push({\n      pathname:`/`\n    });\n  }\n  return(\n    <div className=\"row headercontainer\">\n        <div className=\"col-10 headerfont\">\n        <img src={knowbotSVG} className=\"knowbotlogo\" alt=\"logo\" />\n          <div className=\"row kwykheader\">KWYK - Know what you know !</div>\n          <div className=\"row sessionname\">{session}</div>\n        </div>\n        <div className=\"col-2 headerfont\">\n        <Dropdown>\n            <Dropdown.Toggle className=\"ellipsisbutton\" id=\"dropdown-basic\"\n              style={{backgroundColor: constant.greyColor, color:constant.blackColor}}>\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item href=\"#\" onClick={handleLogout} className=\"ellipsismenu\">Logout</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown></div>\n      </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport '../static/css/chat.css';\n\nfunction UserHeader() {\n  const username = sessionStorage.getItem('username');\n  return(\n    <div className=\"row headercontainer timer-row\">\n        <div className=\"col-9\">\n          {username}\n        </div>\n    </div>\n  );\n}\n\nexport default UserHeader;\n","import { useState, useEffect } from \"react\";\n\nfunction useFetch(url, defaultResponse) {\n  const [data, setData] = useState(defaultResponse);\n  async function getDataFromAPI() {\n    try {\n      const res = await fetch(url);\n      const result = await res.json();\n      let dataList = result;\n      setData({\n        isLoading: false,\n        data: dataList\n      });\n    } catch (e) {\n      setData({\n        isLoading: false,\n        error: e\n      });\n    }\n  }\n\n  useEffect(() => {\n    getDataFromAPI()\n  }, [url]);\n  return data;\n}\n\nexport default useFetch;\n","import React from 'react';\nimport Alert from 'react-bootstrap/Alert'\n\nfunction DisplayAlert(props) {\n  let message = \"\"+props.message;\n  return(\n    <Alert variant='danger' className='alert'>\n        {message}\n    </Alert>\n\n  );\n}\n\nexport default DisplayAlert;\n","import React, {useState} from 'react';\nimport * as constant from '../components/Constants'\nimport '../static/css/contents.css';\n\nfunction SelectionButtons(props){\n  const [clickedButton, setClickedButton] = useState(\"\");\n  const topics = props.topics;\n  let height = \"30vh\";\n  function getClickedButton(name){\n    props.getSelectedTopic(name);\n    setClickedButton(name);\n  }\n  if (props.styling === \"topics-area\"){\n    if(clickedButton === \"\"){\n      height = \"50vh\";\n    }\n    else {\n      height = \"22vh\";\n    }\n  }\n\n  const buttonList = topics.map((topic, index) =>\n      <TopicButton name={topic} textColor={topic === clickedButton ? constant.whiteColor : constant.blackColor }\n      buttonColor={topic === clickedButton ? constant.darkGrey : constant.greyColor}\n      getClickedButton={getClickedButton} key={index}/>\n  );\n  return (<div className={`${props.styling}`} style={{height:height}}>{buttonList}</div>);\n}\n\nexport default SelectionButtons;\n\nfunction TopicButton(props){\n  function handleClick(e){\n    props.getClickedButton(e.target.value);\n  }\n  return (<button className=\"rounded-pill topic-btn\" value={props.name}\n            style={{color: props.textColor, backgroundColor: props.buttonColor}}\n            onClick={handleClick}> {convertToCamelCase(props.name)}</button>);\n}\n\nfunction convertToCamelCase(name) {\n  const words = name.split(\" \");\n  let convertedName = \"\";\n  for (let i = 0; i < words.length; i++) {\n    words[i] = words[i][0].toUpperCase() + words[i].substr(1);\n    convertedName = convertedName + \" \" +words[i]\n  }\n  return convertedName;\n}\n","import React from 'react';\nimport * as constant from '../components/Constants'\nimport useFetch from \"../hooks/useFetch\";\nimport '../static/css/contents.css';\nimport DisplayAlert from '../components/DisplayAlert';\nimport SelectionButtons from '../components/SelectionButtons';\n\nfunction TopicSelectionScreen(props) {\n  return(\n    <div className=\"topics-subtopics\">\n        <div className=\"row topics-div\">\n          <DisplayTopics getSelectedTopic={props.getSelectedTopic} styling={\"topics-area\"}/>\n        </div>\n        <div className=\"row subtopics-div\">\n          <DisplaySubTopics topic={props.topic} getSelectedSubTopic={props.getSelectedSubTopic}/>\n        </div>\n      </div>\n  );\n}\n\nexport default TopicSelectionScreen;\n\nfunction DisplayMessage(props){\n  return(\n    <div className=\"info-text\">\n    <br />\n      {props.message}\n    </div>\n  );\n}\n\nfunction DisplayTopics(props){\n  const url = constant.kwykURL+\"get/topics/custom\";\n  const message = \"Please choose a topic ...\"\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const topics = fetchResponse.data\n  return (\n    <div className=\"subtopics\">\n    <DisplayMessage message={message}/>\n    <SelectionButtons topics={topics} getSelectedTopic={props.getSelectedTopic}\n        styling={props.styling}/>\n    </div>\n  );\n}\n\n\nfunction DisplaySubTopics(props){\n  if(props.topic){\n    return(\n      <div className=\"subtopics\">\n      <DisplayMessage message=\"Choose your subtopic\"/>\n      <GetSubTopics getSelectedSubTopic={props.getSelectedSubTopic} topic={props.topic}\n                styling={\"subtopics-area\"}/>\n      </div>\n    );\n  }\n  else{\n    return(\n      <div>\n      <DisplayMessage message=\"\"/>\n      <div className=\"subtopics-area\"></div>\n      </div>\n    );\n  }\n}\n\n\nfunction GetSubTopics(props){\n  const url = constant.kwykURL+\"get/\"+props.topic+\"/subtopics\";\n\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error}/>\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const subtopics = fetchResponse.data\n  return <SelectionButtons topics={subtopics} getSelectedTopic={props.getSelectedSubTopic} styling={props.styling}/>;\n}\n","import React, {useState} from 'react';\nimport Header from \"../headers/KwykHeader\";\nimport UserHeader from \"../headers/UserHeader\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport '../static/css/contents.css';\nimport TopicSelectionScreen from \"./TopicSelectionScreen\";\n\nfunction DisplayTopic(){\n  let history = useHistory();\n  const location = useLocation();\n  if(sessionStorage.getItem('useremail') == null){\n    const destinationPath = location.pathname\n    history.push({\n      pathname:`/`,\n      query: {destinationPath}\n    });\n    return null;\n  }\n  else{\n    return <TopicSelection/>\n  }\n}\n\nfunction TopicSelection(){\n    const [topic,setTopic] = useState(\"\");\n    const [subtopic,setSubTopic] = useState(\"\");\n    function getSelectedTopic(data){\n      setTopic(data);\n    }\n    function getSelectedSubTopic(data){\n      setSubTopic(data);\n    }\n    return(\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-2\"></div>\n            <div className=\"col-lg-8 non-header\">\n              <Header />\n              <UserHeader />\n              <TopicSelectionScreen\n                  getSelectedTopic={getSelectedTopic}\n                  topic={topic}\n                  getSelectedSubTopic={getSelectedSubTopic}\n                  />\n              <DisplayStartButton topic={topic} subtopic={subtopic}/>\n            </div>\n          <div className=\"col-lg-2\"></div>\n        </div>\n      </div>\n\n    );\n}\n\nexport default DisplayTopic;\n\nfunction DisplayStartButton(props){\n  let history = useHistory();\n  let buttonDisplay;\n  if(props.subtopic){\n    buttonDisplay =\"block\";\n  }\n  else{\n    buttonDisplay =\"none\";\n  }\n  function handleClick(e){\n      initializeSessionStorage(props.topic, props.subtopic)\n      history.push({\n        pathname:'/chat/'+props.topic+'/'+props.subtopic,\n      });\n  }\n  return(\n    <button className=\"start-button fixed-bottom\" value=\"start\"\n      onClick={handleClick} style={{display: buttonDisplay}}>Start</button>\n\n  );\n}\n\nfunction initializeSessionStorage(topic, subtopic) {\n  sessionStorage.setItem('topic', topic);\n  sessionStorage.setItem('subtopic', subtopic);\n  sessionStorage.setItem('attempted', 0);\n  sessionStorage.setItem('skipped', 0);\n  sessionStorage.setItem('minutes', 0);\n  sessionStorage.setItem('seconds', 0);\n  sessionStorage.setItem('userResponses', JSON.stringify({}));\n  sessionStorage.setItem('retry', false);\n}\n","import React from 'react';\nimport '../static/css/header.css';\nimport clock from '../static/images/clock.png';\n\n\nfunction TimerHeader(props){\n  const time = props.time;\n  const username = sessionStorage.getItem('username');\n  return(\n    <div className=\"row headercontainer timer-row\">\n      <div className=\"col-8\">\n        {username}\n      </div>\n      <div className=\"col-4\">\n        <img src={clock} className=\"clock-img\" alt=\"logo\" />\n        {time[0]} : {time[1]}\n      </div>\n    </div>\n  );\n}\n\nexport default TimerHeader;\n","import { useState, useEffect } from \"react\";\nimport '../static/css/header.css';\n\nconst useTimer = (mins, secs) => {\n    const [seconds, setSeconds] = useState(secs);\n    const [minutes, setMinutes] = useState(mins);\n    useEffect(() => {\n      const time = setInterval(setTime, 1000);\n        return () => {\n          clearInterval(time);\n          //props.getTime(minutes,seconds);\n        }\n    },[seconds]);\n\n    function setTime(){\n      setSeconds(seconds + 1);\n      if(seconds === 59){\n        setSeconds(0);\n        setMinutes(minutes + 1);\n      }\n    }\n\n    return(\n        [minutes,seconds]\n    );\n}\n\nexport default useTimer;\n","import { useState, useEffect } from \"react\";\n\nfunction usePost(url, dataText, defaultResponse) {\n  const [data, setData] = useState(defaultResponse);\n  const  requestOptions = {\n    method: 'POST',\n    headers: {'Content-Type': 'application/json'},\n    body: JSON.stringify(dataText)\n  };\n  async function postDataToAPI() {\n    try {\n      const res = await fetch(url, requestOptions);\n      const result = await res.json();\n      setData({\n        isLoading: false,\n        data: result\n      });\n    } catch (e) {\n      setData({\n        isLoading: false,\n        error: e\n      });\n    }\n  }\n\n  useEffect(() => {\n    postDataToAPI()\n  }, [url]);\n  return data;\n}\n\nexport default usePost;\n","import React, {useState, useEffect, useRef} from 'react';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Header from \"../headers/KwykHeader\";\nimport TimerHeader from \"../headers/TimerHeader\";\nimport useTimer from \"../hooks/useTimer\";\nimport ideapng from '../static/images/idea.png';\nimport sendlogo from '../static/images/send.png';\nimport '../static/css/chat.css';\nimport * as constant from '../components/Constants'\nimport usePost from \"../hooks/usePost\";\nimport TextareaAutosize from 'react-textarea-autosize';\nimport DisplayAlert from '../components/DisplayAlert'\n\nvar time;\nvar currentWord = '';\nvar is_retry;\n\nfunction ChatBot(){\n  let history = useHistory();\n  const location = useLocation();\n  if(sessionStorage.getItem('useremail') == null){\n    const destinationPath = location.pathname\n    history.push({\n      pathname:`/`,\n      query: {destinationPath}\n    });\n    return null;\n  }\n  else{\n    return <DisplayTest />\n  }\n}\n\nexport default ChatBot;\n\n\nfunction DisplayTest() {\n  let chatMessages = '';\n  let prevWords = {};\n  if(sessionStorage.getItem('userResponses')){\n    prevWords = JSON.parse(sessionStorage.getItem('userResponses'));\n  }\n  is_retry = false;\n  if(sessionStorage.getItem('retry') === 'true'){\n    is_retry = true;\n    chatMessages=[\"retry\"];\n  }\n  else{\n    chatMessages=[\"welcome\",\"first\"];\n  }\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-2\"></div>\n        <div className=\"col-lg-8 non-header\">\n          <Header />\n          <ShowTimeHeader/>\n          <DisplayChat minutes={minutes}\n                     seconds={seconds}\n                     chatMessages={chatMessages}\n                     prevWords={prevWords}\n                     />\n        </div>\n        <div className=\"col-lg-2\"></div>\n      </div>\n    </div>\n  );\n}\n\n\nfunction ShowTimeHeader(){\n  const minutes = parseInt(sessionStorage.getItem('minutes'));\n  const seconds = parseInt(sessionStorage.getItem('seconds'));\n  time=useTimer(minutes, seconds);\n  return (\n    <TimerHeader time={time}/>\n  );\n}\n\n\nfunction DisplayChat(props){\n  const [chatMessages, setChatMessages] = useState(props.chatMessages);\n  const [userInput, setUserInput] = useState(\"\");\n  const actions = [\"welcome\",\"first\",\"next\",\"skip\",\"hint\",\"afterinput\",\"retry\"];\n  function getUserInput(input){\n    setUserInput(input);\n  }\n  function addChat(message){\n    if(actions.includes(message)){\n      setChatMessages([...chatMessages,message]);\n    }\n    else{\n      setChatMessages([...chatMessages,message,\"afterinput\"]);\n    }\n  }\n  const chatList = chatMessages.map((message,index) => {\n    return <GetChatMessages message={message} key={index}\n         prevWords={props.prevWords} userInput={userInput} addChat={addChat}/>\n  }\n );\n const messagesEndRef = useRef(null);\n useEffect(() => {\n    messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n  },[chatList]);\n return(\n    <div className=\"chatcolor\">\n      <div className=\"chatarea\">\n      <ul>\n        {chatList}\n        <li><div className=\"scroll-div\" ref={messagesEndRef} /></li>\n      </ul>\n      </div>\n        <DisplayForm addChat={addChat} getUserInput={getUserInput}/>\n    </div>\n  );\n}\n\n\nfunction GetChatMessages(props) {\n  const message = props.message;\n  if(message ===\"welcome\"){\n    return <ShowWelcomeChat />;\n  }else if(message ===\"first\" || message ===\"next\" || message ===\"skip\" ||message ===\"retry\"){\n    return <GetWord addChat={props.addChat} message={message} prevWords={props.prevWords}/>\n  }\n  else if(message ===\"hint\"){\n    return <ShowHint addChat={props.addChat} />\n  }\n  else if(message ===\"afterinput\"){\n    return <GetWord addChat={props.addChat} message={props.userInput} prevWords={props.prevWords}/>\n  }\n  else{\n    return <DisplayUserInput input={message}/>\n  }\n}\n\n\nfunction ShowWelcomeChat(props){\n  const textArea = document.querySelector('textarea');\n  const textRowCount = textArea ? textArea.value.split(\"\\n\").length : 0;\n  const rows = textRowCount + 3;\n  return(\n    <li>\n      <div className=\"row bot\">\n        <TextareaAutosize className=\"botmessage\" rows={rows} value={constant.welcomeMessage} rowsMin={3} disabled/>\n      </div>\n    </li>\n  );\n}\n\n\nfunction GetWord(props){\n  let history = useHistory();\n  const url = constant.postURL;\n  let text = getCommand(props.message);\n  const useremail = sessionStorage.getItem('useremail');\n  const topic = sessionStorage.getItem('topic');\n  const subtopic = sessionStorage.getItem('subtopic');\n  const session = sessionStorage.getItem('session');\n\n  const dataText = { \"text\": text, \"username\": useremail, \"session\":session, \"referrer\":window.location.href};\n  const fetchResponse = usePost(url, dataText, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const word = fetchResponse.data.text;\n  if(word === 'finish_topic'){\n    sessionStorage.setItem('minutes', time[0]);\n    sessionStorage.setItem('seconds', time[1]);\n    history.push({\n      pathname:`/user_stats/${topic}/${subtopic}`\n    });\n  }\n  if (word === 'wrong_command'){\n    history.push({\n      pathname:`/error`\n    });\n  }\n  currentWord = word;\n  if(word in props.prevWords){\n    return <Test word={word} addChat={props.addChat}/>\n  }\n  else{\n    const messageNoun = props.message==='first' ? 'first' : 'next';\n    const messageText = \"Your \" + messageNoun + \" word is '\"+word + \"'\";\n    return (<BotReply message={messageText}  addChat={props.addChat} />);\n  }\n}\n\nfunction Test(props) {\n  useEffect(()=>{\n    props.addChat(\"next\");\n  },[props.word])\n  return <div></div>\n}\n\nfunction ShowHint(props){\n  const url = constant.postURL;\n  const text = '/explain';\n  const useremail = sessionStorage.getItem('useremail');\n  const session = sessionStorage.getItem('session');\n\n  const dataText = { \"text\": text, \"username\": useremail, \"session\": session, \"referrer\":window.location.href}\n  const fetchResponse = usePost(url, dataText, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const hint = fetchResponse.data.text;\n\n  return( <BotReply message={hint} addChat={props.addChat} />);\n}\n\nfunction DisplayForm(props){\n  const [userInput, setUserInput] = useState(\"\");\n  const buttonText = \"Skip\"\n  function handleClick(){\n    if(userInput.length > 0){\n      let userResponses = JSON.parse(sessionStorage.getItem('userResponses'));\n      userResponses[currentWord] = userInput;\n      sessionStorage.setItem('userResponses',JSON.stringify(userResponses));\n      props.getUserInput(userInput);\n      props.addChat(userInput);\n      setUserInput(\"\");\n      updateAttemptedCount();\n      if(is_retry){\n        updateSkippedCount('reduce');\n      }\n    }\n  }\n  function handleChange(e){\n    setUserInput(e.target.value);\n  }\n  function handleHint(e){\n    props.addChat(\"hint\");\n  }\n  function handleKeyPress(e){\n    if(e.charCode === 13){\n        e.preventDefault();\n        handleClick();\n    }\n  }\n  function handleSkip(e){\n      props.addChat(\"skip\")\n      if(!is_retry){\n        updateSkippedCount('add');\n      }\n  }\n\n  return(\n    <div className=\"row input-area chatcolor\">\n      <button className=\"ideabutton\" value=\"start\" onClick={handleHint}>\n        <img src={ideapng} className=\"idealogo\" alt=\"logo\" />\n      </button>\n      <button className=\"skipbutton\" onClick={handleSkip}>{buttonText}</button>\n      <TextareaAutosize className=\"input-text\" value={userInput} onChange={handleChange}\n        onKeyPress={handleKeyPress} required/>\n      <button className=\"sendbutton\" value=\"start\" onClick={handleClick}>\n        <img src={sendlogo} className=\"idealogo\" alt=\"logo\" />\n      </button>\n    </div>\n  );\n}\n\nfunction DisplayUserInput(props){\n  return(\n    <UserReply message={props.input} />\n  )\n}\n\nfunction BotReply(props){\n  const textArea = document.querySelector('textarea');\n  const textRowCount = textArea ? textArea.value.split(\"\\n\").length : 0;\n  const rows = textRowCount + 3;\n  return(\n    <li>\n      <div className=\"row bot\">\n        <TextareaAutosize className=\"botmessage\" rows={rows} value={props.message}\n        rowsMin={3} id=\"bottext\" disabled/>\n      </div>\n    </li>\n );\n}\n\nfunction  UserReply(props){\n  return(\n  <li>\n    <div className=\"row bot\">\n      <TextareaAutosize className=\"usermessage\" value={props.message} rowsMin={3} disabled />\n    </div>\n  </li>);\n}\n\nfunction updateSkippedCount(action) {\n  let skippedCount=parseInt(sessionStorage.getItem('skipped'));\n  action ==='add' ? skippedCount++ : skippedCount-- ;\n  sessionStorage.setItem('skipped', skippedCount);\n}\n\nfunction updateAttemptedCount() {\n  let attemptedCount=parseInt(sessionStorage.getItem('attempted'));\n  attemptedCount++;\n  sessionStorage.setItem('attempted', attemptedCount);\n}\n\nfunction getCommand(message){\n  let text;\n  switch(message){\n    case 'skip':\n      text = '/skip';\n      break;\n    case 'first':\n    case 'next':\n      text = '/new';\n      break;\n    case 'retry':\n      text = '/retry';\n      break;\n    default:\n      text = message;\n      break;\n  }\n  return text;\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../headers/KwykHeader\";\nimport TimerHeader from \"../headers/TimerHeader\";\nimport '../static/css/stats.css';\n\nfunction UserStats(){\n  let history = useHistory();\n  if(sessionStorage.getItem('useremail') == null){\n    history.push({\n      pathname:`/`\n    });\n    return null;\n  }\n  else{\n    return <StatsPage />\n  }\n}\n\nfunction StatsPage(){\n  const minutes = parseInt(sessionStorage.getItem('minutes'));\n  const seconds = parseInt(sessionStorage.getItem('seconds'));\n  const topic = sessionStorage.getItem('topic');\n  const subtopic = sessionStorage.getItem('subtopic');\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-2\"></div>\n        <div className=\"col-lg-8 chatcolor\">\n            <Header />\n            <ShowTimeHeader minutes={minutes} seconds={seconds}/>\n            <DisplayStats minutes={minutes} seconds={seconds} topic={topic}\n            subtopic={subtopic} />\n        </div>\n        <div className=\"col-lg-2\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default UserStats;\n\nfunction ShowTimeHeader(props){\n  return (\n    <TimerHeader time={[props.minutes,props.seconds]} />\n  );\n}\n\nfunction DisplayStats(props){\n  const attemptedCount = parseInt(sessionStorage.getItem('attempted'));\n  const skippedCount = parseInt(sessionStorage.getItem('skipped'));\n  return(\n    <div className=\"stats-area\">\n      <DisplayScore minutes={props.minutes} seconds={props.seconds}\n      skippedCount={skippedCount} attemptedCount={attemptedCount}/>\n      <RetrySkips topic={props.topic} subtopic={props.subtopic} skippedCount={skippedCount}/>\n      <ViewResponses topic={props.topic} subtopic={props.subtopic}/>\n      <FeedBack />\n    </div>\n  );\n}\n\nfunction RetrySkips(props){\n  let history = useHistory();\n  if(props.skippedCount !== 0){\n    function handleClick(){\n      sessionStorage.setItem('retry', true);\n      history.push({\n        pathname:'/chat/'+props.topic+'/'+props.subtopic\n      });\n    }\n    return(\n      <div className= \"button-area\">\n      <button className=\"retry-button\" value=\"retry\" onClick={handleClick}>Retry Skipped Questions </button>\n      </div>\n    );\n  }\n  else{\n    return(\n      <div></div>\n    );\n  }\n}\n\nfunction ViewResponses(props){\n  let history = useHistory();\n  function handleClick(){\n    history.push({\n    pathname:`/view_responses/${props.topic}/${props.subtopic}`\n    });\n  }\n  return(\n    <div className= \"button-area\">\n    <button className=\"retry-button\" value=\"response\" onClick={handleClick}>See Responses & Explanation</button>\n    </div>\n  );\n}\n\n/*function SwitchTopic(){\n  let history = useHistory();\n  function handleClick(){\n    history.push('/topics')\n  }\n  return(\n    <div className= \"button-area\">\n    <button className=\"retry-button\" value=\"retry\" onClick={handleClick}>Switch Topic</button>\n    </div>\n  );\n}\n*/\nfunction FeedBack(){\n  let history = useHistory();\n  function handleClick(){\n      history.push('/feedback')\n\n  }\n  return(\n    <div className= \"button-area\">\n      <button className=\"retry-button\" value=\"retry\" onClick={handleClick}>Feedback</button>\n    </div>\n  );\n}\n\nfunction DisplayScore(props){\n  return(\n    <div className= \"display-area\">\n      <br />\n      <div className = \"row\">\n        <div className=\"col-12 topic-text center\">\n        You have completed this topic!\n        </div>\n      </div>\n      <div className = \"row\">\n        <div className=\"col-2 darkgrey\"></div>\n        <div className=\"col-4 stat-text left\">\n        #Attempted\n        </div>\n        <div className=\"col-6 topic-text left\">\n        : {props.attemptedCount}\n        </div>\n      </div>\n      <div className = \"row \">\n        <div className=\"col-2 darkgrey\"></div>\n        <div className=\"col-4 stat-text left\">\n        #Skipped\n        </div>\n        <div className=\"col-6 topic-text left\">\n        : {props.skippedCount}\n        </div>\n      </div>\n      <div className = \"row \">\n        <div className=\"col-2 darkgrey\"></div>\n        <div className=\"col-4 stat-text left\">\n        #Time Taken\n        </div>\n        <div className=\"col-6 topic-text left\">\n          : {props.minutes} mins : {props.seconds} secs\n        </div>\n      </div>\n    </div>\n  );\n}\n","import styled from \"styled-components\";\nexport const Tabs = styled.div`\n  overflow: hidden;\n  background: ${props => props.tabcolor};\n  font-family: \"Helvetica\";\n  height: 3em;\n  width:100%;\n`;\n\nexport const Tab = styled.button`\n  border: none;\n  outline: none;\n  cursor: pointer;\n  width: 50%;\n  position: relative;\n  background: ${props => props.tabcolor};\n\n  font-size: 1em;\n  border: ${props => (props.active ? \"1px solid #ccc\" : \"\")};\n  border-bottom: ${props => (props.active ? \"none\" : \"\")};\n  color: ${props => (props.active ? \"#000000\" : \"#959595\")};\n  height: ${props => (props.active ? \"2.6em\" : \"2.6em; top:.4em\")};\n  transition: background-color 0.5s ease-in-out;\n\n  :hover {\n    color: #000000;\n  }\n`;\nexport const Content = styled.div`\n  ${props => (props.active ? \"\" : \"display:none\")}\n`;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Tabs, Tab, Content } from \"../components/Tab\";\nimport Header from \"../headers/KwykHeader\";\nimport '../static/css/header.css';\nimport '../static/css/stats.css';\nimport useFetch from \"../hooks/useFetch\";\nimport * as constant from '../components/Constants';\nimport DisplayAlert from '../components/DisplayAlert';\n\nfunction Responses() {\n  let history = useHistory();\n  if(sessionStorage.getItem('topic') == null){\n    history.push({\n      pathname:`/404`\n    });\n    return null;\n  }\n  else {\n    return <ShowResponsePage />\n  }\n}\n\nfunction ShowResponsePage() {\n  const topic = sessionStorage.getItem('topic');\n  const subtopic = sessionStorage.getItem('subtopic');\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-2\"></div>\n        <div className=\"col-md-8\">\n            <Header />\n            <ResponsesTab topic={topic} subtopic={subtopic} />\n        </div>\n        <div className=\"col-md-2\"></div>\n      </div>\n    </div>\n  );\n}\n\nfunction ResponsesTab(props){\n  const [active, setActive] = useState(0);\n  const handleClick = e => {\n    const index = parseInt(e.target.id, 0);\n    if (index !== active) {\n      setActive(index);\n    }\n  };\n  const useremail = sessionStorage.getItem('useremail');\n  const url = constant.kwykURL+\"user_stats_custom/\"+useremail+\"/\"+props.topic+\"/\"+props.subtopic;\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const data = fetchResponse.data\n  const topicUserWords = JSON.parse(sessionStorage.getItem('userResponses'));\n  return(\n    <div className=\"tab-color\">\n      <Tabs tabcolor={constant.adminTabColor}>\n        <Tab onClick={handleClick} active={active === 0} id={0} tabcolor={constant.adminTabColor}>\n          RESPONSES\n        </Tab>\n        <Tab onClick={handleClick} active={active === 1} id={1} tabcolor={constant.adminTabColor}>\n          EXPLANATION\n        </Tab>\n      </Tabs>\n      <>\n        <Content active={active === 0}>\n          <ShowResponses topic={props.topic} subtopic={props.subtopic} data={data} topicUserWords={topicUserWords}/>\n        </Content>\n        <Content active={active === 1}>\n          <ShowExplanation topic={props.topic} subtopic={props.subtopic} data={data} topicUserWords={topicUserWords}/>\n        </Content>\n      </>\n    </div>\n  );\n}\nexport default Responses;\n\nfunction ShowResponses(props){\n  const [selectedValue, setSelectedValue] = useState(convertToCamelCase(props.subtopic));\n  function getSelectedValue(value){\n    setSelectedValue(value);\n  }\n  const data = props.data;\n  const topicWordsResponses = data[\"topic_answers\"];\n  const topicWords = topicWordsResponses[\"topic_words\"];\n  const topicTopWords = topicWordsResponses[\"top_words\"];\n  const topicUserWords = props.topicUserWords;\n  topicWords.sort();\n  const wordResponses = topicWords.map((word,index)=>{\n    if(word in topicUserWords){\n      return <DisplayWordResponses word={word} topicTopWords={topicTopWords} topicUserWords={topicUserWords} key={index}/>\n    }\n  });\n  return(\n    <div >\n      <TopicHeader topics={props.subtopic} getSelectedValue={getSelectedValue} selectedValue={selectedValue}/>\n      <div className= \"responses-area\">\n      <ul>\n        {wordResponses}\n      </ul>\n      </div>\n      <div className=\"bottom-area\"></div>\n    </div>\n  );\n}\n\nfunction TopicHeader(props){\n  const username = sessionStorage.getItem('username');\n  return(\n    <div className=\"row headercontainer grey\">\n      <div className=\"col-5 user grey\">\n      {username}\n      </div>\n      <div className=\"col-7 grey\">\n        <span className=\"grey topic-label\"> Topic:</span>\n        <span className=\"grey topic-label\"> {props.selectedValue} </span>\n      </div>\n    </div>\n  );\n}\n\nfunction DisplayWordResponses(props){\n  const userWords = props.topicUserWords[props.word];\n  const topWords = props.topicTopWords[props.word];\n  return(\n    <div className=\"word-response\">\n    <label className=\"topicname\">{props.word}</label>\n    <div className=\"row padding-right white\">\n      <div className=\"col-sm-6 white\">\n        <label className=\"titlelabel\">Your Responses </label><br />\n        <DisplayWord words={userWords} />\n      </div>\n      <div className=\"col-sm-6 white padding-right\">\n        <label className=\"titlelabel\"> Popular Responses </label><br />\n        <DisplayWord words={topWords} />\n      </div>\n    </div>\n    </div>\n  );\n}\n\nfunction DisplayWord(props){\n  let words = \"\"\n  if(props.words){\n    words = props.words.split(',');\n  }\n  return(\n    <div>\n    {words ?\n        <div className=\"white\">{words.map((word,index) => <div className=\"white\" key={index}>\n            <label className=\"word\">{word}</label>\n        </div>)}</div>\n        : null}\n    </div>\n  );\n}\n\nfunction ShowExplanation(props) {\n  const [selectedValue, setSelectedValue] = useState(convertToCamelCase(props.subtopic));\n  function getSelectedValue(value){\n    setSelectedValue(value);\n  }\n  const data = props.data;\n  const topics = data[\"topics\"];\n  const topicWordsResponses = data[\"topic_answers\"];\n  const topicWords = topicWordsResponses[\"topic_words\"];\n  const topicExplanation = topicWordsResponses[\"explanation\"];\n  const topicUserWords = props.topicUserWords;\n  topicWords.sort();\n  const wordExplanations = topicWords.map((word,index)=>{\n    if(word in topicUserWords){\n      return <DisplayExplanation word={word} topicExplanation={topicExplanation} key={index}/>\n    }\n  });\n\n  return(\n    <div >\n      <TopicHeader topics={topics} getSelectedValue={getSelectedValue} selectedValue={selectedValue}/>\n      <div className=\"responses-area\">\n      <ul>\n        {wordExplanations}\n      </ul>\n      </div>\n      <div className=\"bottom-area\"></div>\n    </div>\n  );\n}\n\nfunction DisplayExplanation(props) {\n  const explanations = props.topicExplanation[props.word];\n  return(\n    <div className=\"explain-area\">\n      <label className=\"topicname\">\n        {props.word}\n      </label>\n      <div className=\"row explain-text\">\n        {explanations}\n      </div>\n    </div>\n\n  );\n}\n\nfunction convertToCamelCase(name) {\n  const words = name.split(\" \");\n  let convertedName = \"\";\n  for (let i = 0; i < words.length; i++) {\n    words[i] = words[i][0].toUpperCase() + words[i].substr(1);\n    convertedName = convertedName + \" \" +words[i]\n  }\n  return convertedName;\n}\n","import React, { useState } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Collapse from 'react-bootstrap/Collapse';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Popover from 'react-bootstrap/Popover';\nimport ReactWordcloud from 'react-wordcloud';\nimport { Resizable } from \"re-resizable\";\nimport '../static/css/admin.css';\n\n\nfunction Statistics(props){\n  return(\n    <div >\n      <DisplayStats data={props.data}/>\n    </div>\n  );\n}\n\nexport default Statistics;\n\nfunction DisplayStats(props) {\n  let totalUsers = 0, totalWords = 0;\n  let leastResponse =[];\n  let mostSkips =[];\n  let commonResponseCount =[];\n  let userResponseCount =[];\n  let userResponseData;\n  const stats = getStats(props.data);\n  const answeredCount =stats[\"answeredCount\"];\n  const skipsCount = stats[\"skipsCount\"];\n  commonResponseCount = stats[\"commonResponseCount\"];\n  const userAnswerCount = stats[\"userAnswerCount\"];\n  totalUsers = stats[\"totalUsers\"];\n  totalWords = stats[\"totalWords\"];\n  mostSkips = getSortedData(skipsCount,1); //second arg 1 to sort desc\n  leastResponse = getSortedData(answeredCount,0);\n  const userResponse = getResponseHist(userAnswerCount, totalWords);\n  userResponseData = userResponse[\"userDivisionData\"];\n  userResponseCount = userResponse[\"userResponseCount\"];\n  const displayItems = [\n                  {message:'Common user responses',data:commonResponseCount, maxVal:totalWords,\n                  type:'cloud'},\n                  {message:'Key terms with least responses',data:leastResponse,maxVal:totalUsers,\n                    type:'progress'},\n                  {message:'Key terms with most skips',data:mostSkips,maxVal:totalUsers,\n                type:'progress'},\n                  {message:'Key terms attempted by users',data:userResponseCount,maxVal:totalUsers,\n                  value:userResponseData,type:'progress'}\n                ]\n  const statButtons = displayItems.map((item,index)=>{\n    return <DisplayButton message={item.message} key={index} maxVal={item.maxVal}\n    data={item.data} value={item.value} type={item.type}/>\n  });\n  return(\n    <div className=\"display-stats\">\n    {statButtons}\n    </div>\n  );\n}\n\nfunction DisplayButton(props){\n  const [open, setOpen] = useState(false);\n  return(\n    <div className=\"display-btn\">\n      <Button\n        onClick={() => setOpen(!open)}\n        aria-controls=\"collapse-text\"\n        aria-expanded={open}\n        variant=\"stats\"\n        className=\"btn-stats\"\n      >\n        {props.message}\n      </Button>\n      <Collapse in={open} className=\"stats-data\">\n        <div className=\"chatcolor\">\n          <DisplatData maxVal={props.maxVal} data={props.data} value={props.value} type={props.type}/>\n        </div>\n      </Collapse>\n    </div>\n  );\n}\n\nfunction DisplatData(props) {\n  if(props.type === 'progress'){\n    return <ShowProgressBar maxVal={props.maxVal} data={props.data} value={props.value}/>\n  }\n  else{\n    return <ShowWordCloud maxVal={props.maxVal} data={props.data} />\n  }\n}\n\nfunction ShowWordCloud(props) {\n  if(props.data.length > 0){\n  const words = props.data;\n  const options = {\n    fontSizes: [5, 60],\n    rotations: 3,\n    rotationAngles: [0, 0],\n    padding: 3,\n  }\n  const resizeStyle = {\n    background: \"#e4dcd4\",\n    width:'100%',\n    height: '100%',\n  }\n  return (\n    <Resizable className=\"chatcolor\"\n     defaultSize={{\n      width: '100%',\n      height: '40vh',\n    }}\n     style={resizeStyle}\n      >\n    <ReactWordcloud className=\"wordcloud\" options={options} words={words} style={resizeStyle}/>\n    </Resizable>\n  );\n}\nelse {\nreturn <div></div>\n}\n}\n\nfunction ShowProgressBar(props){\n    const data = props.data;\n    const maxVal = props.maxVal==0? 100:props.maxVal;\n    const statsBar = data.map((statData,index)=>{\n        console.log(\"statData=\", statData);\n        const percent = statData[1];\n        const range = statData[0];\n        let popover;\n        if(props.value){\n          const names = props.value[range];\n          let users = names.join('\\n');\n          popover = (\n            <Popover>\n              <Popover.Title >Users</Popover.Title>\n              <Popover.Content>\n              { users}\n              </Popover.Content>\n            </Popover>\n          );\n        }\n        else{\n            popover = (\n              <Popover> </Popover>\n            );\n        }\n        return (\n          <div className=\"row\">\n            <div className=\"col-sm-4 white\">\n            <label className=\"data-label\"> {statData[0]} </label>\n            </div>\n            <div className=\"col-sm-8 white\">\n            <OverlayTrigger overlay={popover}>\n            <ProgressBar className=\"progress\" now={percent} label={`${percent} `} key={index} max={maxVal} min='0'/>\n            </OverlayTrigger>\n            </div>\n          </div>\n        );\n      });\n    return(\n    <div className=\"statsBar\">\n      {statsBar}\n    </div>\n    );\n}\n\nfunction getStats(data){\n  let skipsCount = {};\n  let answeredCount = {};\n  let wordResponses =[];\n  let userAnswerCount = {};\n  const topicData = data;\n  const words = topicData[\"topic_words\"];\n  const userWords = topicData[\"user_data\"];\n  const totalUsers = Object.keys(userWords).length;\n  const totalWords = words.length;\n  for(var i=0; i < words.length; i++){\n      const word = words[i];\n      skipsCount[word] = 0;\n      answeredCount[word] = 0;\n  }\n  for (i=0; i < words.length; i++){\n      const word = words[i];\n      for(const [key, value] of Object.entries(userWords)){\n        const userEntries = value;\n        if(!Object.keys(userEntries).includes(word)){\n          skipsCount[word] += 1;\n        }\n        else{\n          userAnswerCount[key] = (userAnswerCount[key]||0)+1;\n          answeredCount[word] +=1;\n          wordResponses=wordResponses.concat(userEntries[word].split(\",\"))\n        }\n      }\n    }\n    wordResponses = getWordFrequency(wordResponses);\n    return {\"answeredCount\": answeredCount, \"skipsCount\": skipsCount, \"commonResponseCount\":wordResponses,\n    \"totalUsers\":totalUsers, \"userAnswerCount\":userAnswerCount,\n    \"totalWords\":totalWords}\n}\n\nfunction getWordFrequency(wordArray) {\n  var occurrences = wordArray.reduce(function(obj, index) {\n  obj[index] = (obj[index] || 0) + 1;\n  return obj;\n  }, {});\n  let words = [];\n  for(const [key, value] of Object.entries(occurrences)){\n    words.push({text:key,value:value})\n  }\n  return words;\n}\n\nfunction getSortedData(data,type,count=5){\n  let sortedData = [];\n  for (var word in data) {\n    sortedData.push([word, data[word]]);\n  }\n  sortedData.sort(function(a, b) {\n    if(type === 0){\n      return a[1] - b[1];\n    }\n    else{\n      return b[1] - a[1];\n    }\n  });\n  for(var n=count; n < sortedData.length; n++){\n    if(sortedData[n-1][1] === sortedData[n][1]){\n      count++;\n    }\n    else {\n      break;\n    }\n  }\n  return sortedData.slice(0,count);\n  }\n\nfunction getResponseHist(userData, totalWords) {\n  const divisions = [0, 0.25, 0.5, 0.75, 1];\n  let userDivisionData = {};\n  let userResponseCount =[]\n  //answerDivisions contains split up of word count\n  const answerDivisions = divisions.map((value,index) =>{\n    return `${Math.round(divisions[index] * totalWords)}`\n  });\n  //ansdivpercent = [\"0 - 24\", \"25 - 49\", \"50 - 74\", \"75 - 99\", \"100\"]\n  const ansdivpercent = divisions.map((value,index) =>{\n    let valRange;\n    if(parseInt(value) === 1){\n      valRange = `100%`;\n    }\n    else{\n      valRange = `${value * 100}-${divisions[index + 1]*100 -1}%`\n    }\n    userDivisionData[valRange] =[];\n    return valRange;\n  });\n  for(const [key, value] of Object.entries(userData)){\n    if(value === totalWords){\n      const centPercent = ansdivpercent[ansdivpercent.length - 1];\n      userDivisionData[centPercent].push(key)\n\n    }\n    else{\n      for(let i = 0; i < answerDivisions.length-1; i++){\n        if((value >= answerDivisions[i]) && ((value < answerDivisions[i+1]))){\n          const percent = ansdivpercent[i];\n          userDivisionData[percent].push(key);\n\n        }\n      }\n    }\n  }\n  let count = 0;\n  for(let i=0; i < ansdivpercent.length; i++){\n    const range = ansdivpercent[i];\n    if(userDivisionData[range]){\n      count=userDivisionData[range].length;\n    }\n    userResponseCount.push([range, count]);\n  }\n  return {\"userDivisionData\":userDivisionData, \"userResponseCount\":userResponseCount};\n}\n","import React from 'react';\nimport Header from \"../headers/KwykHeader\";\nfunction AdminAccessDenied() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <Header/>\n        <DisplayError />\n      </div>\n    </div>\n  );\n}\n\nexport default AdminAccessDenied;\n\nfunction DisplayError() {\n  return(\n    <div className='adminerror'>\n       <h4><div className='adminmessage'>Admin Access Denied</div></h4>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Tabs, Tab, Content } from \"../components/Tab\";\nimport Header from \"../headers/KwykHeader\";\nimport '../static/css/header.css';\nimport '../static/css/admin.css';\nimport useFetch from \"../hooks/useFetch\";\nimport * as constant from '../components/Constants'\nimport Statistics from \"./Statistics\";\nimport DisplayAlert from '../components/DisplayAlert';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport AdminAccessDenied from '../components/AdminAccessDenied'\n\nfunction Insights() {\n  let history = useHistory();\n  const location = useLocation();\n\n  if((sessionStorage.getItem('useremail') != null) &&\n      (sessionStorage.getItem('is_admin') === 'true')){\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <Header />\n          <StatisticsTab />\n        </div>\n      </div>\n    );\n  }\n  else{\n    if(sessionStorage.getItem('is_admin') === 'false'){\n      return <AdminAccessDenied />\n    }\n    const destinationPath = location.pathname\n    history.push({\n        pathname:`/`,\n        query: {destinationPath}\n      });\n    return null;\n  }\n}\n\nexport default Insights;\n\nfunction StatisticsTab(props){\n  const [active, setActive] = useState(0);\n  const handleClick = e => {\n    const index = parseInt(e.target.id, 0);\n    if (index !== active) {\n      setActive(index);\n    }\n  };\n  let urlSplit = window.location.href.split(\"insights/\")[1].split('/')\n  urlSplit = urlSplit.filter(item => item);\n  const topic = urlSplit[0];\n  const subtopic = urlSplit[1];\n  var url = '';\n  if(urlSplit.length > 2){\n    const session = urlSplit[2];\n    url = constant.kwykURL+\"admin/user_data_custom/\"+topic+\"/\"+subtopic+\"/\"+session;\n  }\n  else{\n    url = constant.kwykURL+\"admin/user_data_custom/\"+topic+\"/\"+subtopic;\n  }\n\n  //const url = constant.kwykURL+\"admin/user_data_custom/\";\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const data = fetchResponse.data;\n\n  return(\n    <div className=\"tab-color\">\n      <Tabs tabcolor={constant.adminTabColor}>\n        <Tab onClick={handleClick} active={active === 0} id={0} tabcolor={constant.adminTabColor}>\n          STATISTICS\n        </Tab>\n        <Tab onClick={handleClick} active={active === 1} id={1} tabcolor={constant.adminTabColor}>\n          INSIGHTS\n        </Tab>\n      </Tabs>\n      <>\n        <Content active={active === 0}>\n          <Statistics data={data}/>\n        </Content>\n        <Content active={active === 1}>\n          <ShowInsights data={data}/>\n        </Content>\n      </>\n    </div>\n  );\n}\n\nfunction ShowInsights(props){\n  const [selectedView, setView] = useState(\"user\");\n  function getView(value){\n    setView(value);\n  }\n  const userData = props.data;\n  return(\n    <div>\n      <ViewSelection getView={getView} view={selectedView}/>\n      <DisplayUserData userData={userData} selectedView={selectedView}/>\n    </div>\n  );\n}\n\nfunction DisplayUserData(props){\n  let headerWords, limits;\n  const data = props.userData;\n  if(data){\n    const headerData = getHeaderWords(data, props.selectedView);\n    headerWords = headerData[\"headerWords\"];\n    limits = headerData[\"limits\"];\n  }\n  return(\n    <div className=\"display-data\">\n      <table className=\"container\">\n        <GetTableHeader selectedView={props.selectedView} headerWords={headerWords}/>\n        <GetTableData data={data} selectedView={props.selectedView} limits={limits}/>\n      </table>\n    </div>\n  );\n}\n\nfunction GetTableHeader(props){\n  let titleWord;\n   if(props.headerWords){\n     if(props.selectedView === \"user\"){\n       titleWord = \"Username\";\n     }\n     else{\n       titleWord = \"Key Terms\";\n     }\n     const header = props.headerWords.map((word,index)=>{\n       return <th className=\"data\" key={index}>{word}</th>\n     });\n     return(\n       <thead>\n         <tr>\n           <th style={{\"minWidth\":\"200px\"}}>{titleWord}</th>\n           {header}\n         </tr>\n      </thead>\n     );\n   }\n   else {\n     return <thead><tr></tr></thead>\n   }\n}\n\nfunction GetTableData(props){\n  let words, userData;\n  if(props.data){\n     words=props.data[\"topic_words\"];\n     userData = props.data[\"user_data\"];\n  }\n  if(props.selectedView === \"user\"){\n    return <ViewByUsers words={words} userData={userData}/>\n  }\n  else{\n    return <ViewByResponses words={words} userData={userData} limits={props.limits}/>\n  }\n}\n\nfunction ViewSelection(props){\n  const [view, setView] = useState(props.view);\n  function handleChange(e){\n    setView(e.target.value);\n    props.getView(e.target.value);\n  }\n  return(\n    <div className=\"row view-div\">\n    <select className=\"view-select\" onChange={handleChange} defaultValue={'user'} value={view}>\n      <option value=\"user\">View By Users</option>\n      <option value=\"responses\"> View By Responses </option>)\n    </select>\n    </div>\n  );\n}\n\nfunction getHeaderWords(data, view) {\n  const userWords = data[\"user_data\"];\n  const totalUsers = Object.keys(userWords).length;\n  const divisions = [0, 0.25, 0.5, 0.75, 1];\n  const userDivisions = divisions.map((value,index) =>{\n    return `${Math.round(divisions[index] * totalUsers)}`\n  });\n  let headerWords=[];\n  let limits = [];\n  if(view === \"user\"){\n    headerWords = data[\"topic_words\"];\n  }\n  else{\n    const limitsData = getLimits(totalUsers, userDivisions);\n    headerWords = limitsData['headerWords'];\n    limits = limitsData['limits'];\n  }\n  return {\"headerWords\":headerWords, \"limits\":limits};\n}\n\nfunction ViewByUsers(props){\n    const userData = props.userData;\n    const words = props.words;\n    if(userData){\n      const data = Object.keys(userData).map((user,index)=>{\n      const userVal = userData[user];\n      const userInput = words.map((word,index)=>{\n        if(userVal[word]){\n          return <td style={{backgroundColor:\"#b2de83\"}} key={index}></td>;\n        }\n        else {\n          return <td style={{backgroundColor:\"#c35c14\"}} key={index}></td>;\n        }\n      });\n      return(\n        <tr key={index}>\n          <th className=\"rowheader\">{user}</th>\n          {userInput}\n        </tr>\n      );\n    });\n    return <tbody>{data}</tbody>\n  }\n  else{\n    return <tbody></tbody>\n  }\n}\n\nfunction ViewByResponses(props) {\n  const userData = props.userData;\n  const words = props.words;\n  let wordUserCount = {};\n  if(userData){\n    const data = words.map((word,index)=>{\n        wordUserCount[word] = getWordResponseCount(word, userData);\n    });\n  }\n  const tableData = Object.keys(wordUserCount).map((word, index)=>{\n    const wordCount = wordUserCount[word];\n    const wordRow = props.limits.map((limit, index)=>{\n      let wordColor = \"#ffffff\";\n      if((wordCount >= limit[0]) && (wordCount <= limit[1])){\n        wordColor  = constant.tableColors[index];\n      }\n      return <td style={{backgroundColor:wordColor}} key={index}></td>\n    });\n\n    return (\n      <tr key={index}>\n        <th className='rowheader'>{word}</th>\n        {wordRow}\n      </tr>\n    );\n  });\n  return <tbody>{tableData}</tbody>\n\n}\n\nfunction getWordResponseCount(word, userData){\n  let count = 0;\n  for(const [key, value] of Object.entries(userData)){\n    const userEntries = value;\n    if(Object.keys(userEntries).includes(word)){\n        count++;\n    }\n  }\n  return count;\n}\n\nfunction getLimits(totalUsers, userDivisions){\n  let headerWords=[];\n  let limits = [];\n  if(totalUsers < 5){\n    for(var i=0; i<=totalUsers; i++ ){\n      limits.push([i,i]);\n      headerWords.push(i);\n    }\n  }\n  else{\n    headerWords.push(0);\n    limits.push([0,0])\n    for(let index = 1; index < userDivisions.length; index++){\n      let begin = parseInt(userDivisions[index-1]) + 1;\n      let end = parseInt(userDivisions[index]);\n      if(end === totalUsers){\n        end = end-1;\n      }\n      if(end < begin){\n        break;\n      }\n      if(begin === end){\n        headerWords.push(end);\n        limits.push([end, end]);\n      }\n      else{\n        headerWords.push(`${begin} - ${end}` );\n        limits.push([begin, end]);\n      }\n\n    }\n    headerWords.push(totalUsers);\n    limits.push([totalUsers, totalUsers]);\n  }\n  return {\"headerWords\":headerWords, \"limits\":limits};\n}\n","import React,{useState} from 'react';\nimport knowbotSVG from '../static/images/knowbotSVG.svg';\nimport '../static/css/login.css';\nimport { Tabs, Tab, Content } from \"../components/Tab\";\nimport * as constant from '../components/Constants'\nimport usePost from \"../hooks/usePost\";\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\nimport Alert from 'react-bootstrap/Alert'\nvar session = \"\"\n\nfunction Login() {\n  if(sessionStorage.getItem('useremail') != null){\n    return <Redirect />;\n  }\n  else{\n    return <DisplayLogin />\n  }\n}\n\nfunction DisplayLogin(){\n  //sessionStorage.clear()\n  const sessionPath = window.location.href.split('?session=')[1]\n  if(typeof(sessionPath) !== 'undefined'){\n    session = sessionPath.split('/')[0]\n  }\n  return(\n    <div className=\"container\">\n      <DisplayIcon />\n      <DisplayTitle />\n      <LoginTab />\n      <DisplayAlert />\n    </div>\n  );\n}\n\nexport default Login;\n\nfunction DisplayIcon() {\n  return(\n    <div className=\"row \">\n        <div className=\"col-md-2 \"></div>\n        <div className=\"col-md-8 window-color\">\n          <img src={knowbotSVG} className=\"login-logo center\" alt=\"logo\" />\n        </div>\n        <div className=\"col-md-2 \"></div>\n    </div>\n  );\n}\n\nfunction DisplayTitle() {\n  return(\n    <div className=\"row \">\n        <div className=\"col-md-2 \"></div>\n        <div className=\"col-md-8 window-color title\">\n            KWYK - Know what you know !\n        </div>\n        <div className=\"col-md-2 \"></div>\n    </div>\n  );\n}\n\nfunction LoginTab(props){\n  const [active, setActive] = useState(0);\n  const handleClick = e => {\n    const index = parseInt(e.target.id, 0);\n    if (index !== active) {\n      setActive(index);\n    }\n  };\n\n  return(\n    <div className=\"row \">\n      <div className=\"col-md-2 \"></div>\n        <div className=\"col-md-8 window-color logintab\">\n    <div className=\"tab-color\">\n      <Tabs tabcolor={constant.loginTabColor}>\n        <Tab onClick={handleClick} active={active === 0} id={0} tabcolor={constant.loginTabColor}>\n          SignIn\n        </Tab>\n        <Tab onClick={handleClick} active={active === 1} id={1} tabcolor={constant.loginTabColor}>\n          SignUp\n        </Tab>\n      </Tabs>\n      <>\n        <Content active={active === 0}>\n          <SignInForm />\n        </Content>\n        <Content active={active === 1}>\n          <SignUpForm />\n        </Content>\n      </>\n    </div>\n    </div>\n    <div className=\"col-md-2 \"></div>\n</div>\n  );\n}\n\nfunction SignInForm() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginMessage,setLoginMessage] = useState(\"\");\n  function handleSubmit(e) {\n    e.preventDefault();\n    const message = <ValidateUser email={email} password={password}/>\n    setLoginMessage(message);\n    setEmail(\"\")\n    setPassword(\"\")\n  }\n  function handleEmail(e){\n    setEmail(e.target.value);\n  }\n  function handlePassword(e) {\n    setPassword(e.target.value);\n  }\n  return(\n    <form className=\"loginform\" onSubmit={handleSubmit}>\n      <input type=\"text\" name=\"email\" className=\"text\" placeholder=\"email\"\n      value={email} onChange={handleEmail} required/><br/>\n      <input type=\"password\" name=\"password\" className=\"text\" placeholder=\"password\"\n        value={password} onChange={handlePassword} required/><br/>\n      <label className=\"text\">{loginMessage}</label>\n      <input type=\"submit\" value=\"Sign In\" className=\"signin\"/>\n      <Link to='/reset'>\n      <div className='link reset'>Forgot password?</div>\n      </Link>\n    </form>\n  );\n}\n\nfunction SignUpForm() {\n  const [userName, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginMessage,setLoginMessage] = useState(\"\");\n  function handleSubmit(e) {\n    e.preventDefault();\n    const message = <CreateNewUser username={userName} email={email} password={password}/>\n    setLoginMessage(message);\n    setUserName(\"\")\n    setEmail(\"\")\n    setPassword(\"\")\n  }\n  function handleUserName(e) {\n    setUserName(e.target.value);\n  }\n  function handleEmail(e){\n    setEmail(e.target.value);\n  }\n  function handlePassword(e) {\n    setPassword(e.target.value);\n  }\n  return(\n    <form className=\"loginform\" onSubmit={handleSubmit}>\n      <input type=\"text\" id=\"username\" name=\"username\" className=\"text\" value={userName}\n        placeholder=\"username\" onChange={handleUserName} required/><br/>\n      <input type=\"text\" name=\"email\" className=\"text\" placeholder=\"email\"\n      value={email} onChange={handleEmail} required/><br/>\n      <input type=\"password\" name=\"password\" className=\"text\" placeholder=\"password\"\n      value={password} onChange={handlePassword} required/><br/>\n      <label className=\"text\">{loginMessage}</label>\n      <input type=\"submit\" value=\"Sign Up\" className=\"signin\"/>\n    </form>\n  );\n}\n\nfunction ValidateUser(props) {\n  const url = constant.loginURL;\n  let loginMessage = '';\n  let sessionName = '';\n  const dataText = { \"email\": props.email, \"password\": props.password, \"session\": session, \"action\": \"signin\"}\n  const fetchResponse = usePost(url, dataText, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const response = fetchResponse.data;\n\n  if(response['status'] === \"password mismatch\"){\n    loginMessage = \"Incorrect Password\";\n    sessionStorage.setItem('loginmessage', loginMessage);\n    window.location.reload();\n  }\n  else if(response['status'] === \"user not found\"){\n    loginMessage = \"Email id is not registered!\";\n    sessionStorage.setItem('loginmessage', loginMessage);\n    window.location.reload();\n  }\n  else{\n    loginMessage = \"Signed in Successfully!\";\n    sessionName = response['session_name'];\n    const userName = response['username'];\n    const is_admin = response['is_admin'];\n    setSessionStorage(userName, props.email, session, sessionName, is_admin);\n    return <Redirect />\n  }\n  return(``);\n}\n\nfunction CreateNewUser(props) {\n  const url = constant.loginURL;\n  let loginMessage ='';\n  let sessionName = '';\n  const dataText = { \"username\":props.username, \"email\": props.email, \"password\": props.password,\n    \"session\": session, \"action\": \"signup\"}\n  const fetchResponse = usePost(url, dataText, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const response = fetchResponse.data;\n  if (response['status'] === 'inserted'){\n    sessionName = response['session_name'];\n    const is_admin = false;\n    loginMessage = \"Signed Up Successfully!\";\n    setSessionStorage(props.username, props.email, session, sessionName, is_admin);\n    return <Redirect />\n  }\n  else if(response['status'] === 'duplicate'){\n    loginMessage = \"Email id is already registered\"\n    sessionStorage.setItem('loginmessage', loginMessage);\n    window.location.reload();\n  }\n  return(``)\n}\n\nfunction setSessionStorage(username, useremail, session, session_name, is_admin) {\n  sessionStorage.setItem('username', username);\n  sessionStorage.setItem('useremail', useremail);\n  sessionStorage.setItem('is_admin', is_admin);\n  if(session){\n    sessionStorage.setItem('session', session);\n    sessionStorage.setItem('session_name', session_name);\n  }\n  sessionStorage.removeItem('loginmessage');\n}\n\nfunction DisplayAlert() {\n  if(sessionStorage.getItem('loginmessage') != null){\n    let message = sessionStorage.getItem('loginmessage')\n    return(\n      <div className=\"row \">\n        <div className=\"col-md-2 \"></div>\n        <div className=\"col-md-8 window-color\">\n        <Alert variant='danger' className='alert'>\n          {message}\n          </Alert>\n        </div>\n        <div className=\"col-md-2 \"></div>\n      </div>\n    );\n  }\n  else {\n    return(\n      <div></div>\n    );\n  }\n}\n\nfunction initializeSessionStorage(topic, subtopic) {\n  sessionStorage.setItem('topic', topic);\n  sessionStorage.setItem('subtopic', subtopic);\n  sessionStorage.setItem('attempted', 0);\n  sessionStorage.setItem('skipped', 0);\n  sessionStorage.setItem('minutes', 0);\n  sessionStorage.setItem('seconds', 0);\n  sessionStorage.setItem('userResponses', JSON.stringify({}));\n  sessionStorage.setItem('retry', false);\n}\n\nfunction getTopicFromURL(destination) {\n  let topic, subtopic;\n  const urlSplit = destination.split('/');\n  if(urlSplit[urlSplit.length - 3] === 'chat'){\n    topic = urlSplit[urlSplit.length - 2]\n    subtopic = urlSplit[urlSplit.length - 1]\n  }\n  return {'topic':topic, 'subtopic': subtopic}\n}\n\nfunction getDestinationScreen(destination) {\n  const urlSplit = destination.split('/');\n  if(urlSplit[urlSplit.length - 1] === 'admin'){\n    return 'admin';\n  }\n  else if(urlSplit[urlSplit.length - 3] === 'chat') {\n    return 'chat';\n  }\n  return null;\n}\n\nfunction Redirect() {\n  let history = useHistory();\n  const location = useLocation()\n  let destination;\n  if(location.query){\n    destination = location.query.destinationPath;\n    const screenname = getDestinationScreen(destination);\n    if (screenname === 'chat'){\n      const topicDetail = getTopicFromURL(destination);\n      const topic = topicDetail['topic'];\n      const subtopic = topicDetail['subtopic'];\n      initializeSessionStorage(topic, subtopic);\n    }\n  }\n  else{\n    destination = `/topics`;\n  }\n  history.push({\n      pathname:destination\n  });\n  return null;\n}\n","import React,{useState} from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../headers/KwykHeader\";\nimport UserHeader from \"../headers/UserHeader\";\nimport '../static/css/feedback.css';\nimport * as constant from '../components/Constants'\nfunction Feedback() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-2\"></div>\n        <div className=\"col-lg-8\">\n          <Header />\n          <UserHeader />\n          <ShowTemplate />\n        </div>\n      <div className=\"col-lg-2\"></div>\n    </div>\n  </div>\n  );\n}\nexport default Feedback;\n\nfunction ShowTemplate() {\n  const [userInput, setUserInput] = useState(\"\");\n  const username = sessionStorage.getItem('username');\n  let history = useHistory();\n  function handleChange(e){\n    setUserInput(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    console.log(\"clicked\");\n    e.preventDefault();\n    const serviceID = 'default_service';\n    const templateId = 'template_09oi0b1';\n    sendFeedback(serviceID,templateId, {message: userInput, from_name:username, reply_to: constant.fbToEmail});\n    setUserInput(\"\");\n    history.push({\n      pathname:`/topics`\n    });\n  }\n  return(\n    <div >\n    <form className = \"fbarea\" onSubmit={handleSubmit}>\n    <div className=\"fblabel\">{constant.feedbackMessage}</div>\n    <div className=\"fblabel blank\"> Feedback / Issue / Query</div>\n    <textarea className=\"fbtext\" value={userInput} placeholder=\"Type your response here...\" onChange={handleChange}></textarea>\n    <input type=\"submit\" value=\"Submit\" className=\"fbsubmitbtn \"/>\n    </form>\n    </div>\n  );\n}\n\nfunction sendFeedback (serviceID,templateId, variables) {\n window.emailjs.send(\n   serviceID, templateId,\n   variables\n   ).then(res => {\n     console.log('Email successfully sent!')\n   })\n   // Handle errors here however you like, or use a React error boundary\n   .catch(err => console.error('Oh well, you failed. Here some thoughts on the error that occured:', err))\n }\n","import React, {useState} from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../headers/KwykHeader\";\nimport * as constant from '../components/Constants'\nimport usePost from \"../hooks/usePost\";\nimport DisplayAlert from '../components/DisplayAlert'\n\nfunction PasswordReset() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-2\"></div>\n        <div className=\"col-sm-8 chatcolor\">\n            <Header />\n            <br />\n            <ResetArea />\n        </div>\n        <div className=\"col-sm-2\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport default PasswordReset;\n\nfunction ResetArea() {\n  const [email, setEmail] = useState(\"\");\n  const [btnValue, setBtnValue] = useState(\"Reset Password\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [pwdMessage,setPwdMessage] = useState(\"\");\n  let history = useHistory();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    let message = '';\n    if(newPassword === confirmPassword){\n      message = <ChangePwd email={email} password={newPassword}/>\n      setPwdMessage(message);\n      setBtnValue(\"Home\")\n      setEmail(\"\")\n      setNewPassword(\"\")\n      setConfirmPassword(\"\")\n    }\n    else {\n      message = \"Password Mismatch\";\n      setPwdMessage(message);\n    }\n  }\n  function handleEmail(e) {\n    setEmail(e.target.value);\n  }\n  function handleOldPassword(e) {\n    setNewPassword(e.target.value);\n  }\n  function handleNewPassword(e) {\n    setConfirmPassword(e.target.value);\n  }\n  function handleClick(e) {\n    if(e.target.value === 'Home'){\n      history.push({\n          pathname:`/`,\n      });\n    }\n  }\n  return(\n    <div className=\"pwdreset\">\n    <form className=\"loginform\" onSubmit={handleSubmit}>\n      <label className=\"pwdtext\"> Change your password here...</label>\n      <input type=\"text\" name=\"email\" className=\"text\" placeholder=\"email id\"\n      value={email} onChange={handleEmail} required/><br/>\n      <input type=\"password\" name=\"password\" className=\"text\" placeholder=\"new password\"\n        value={newPassword} onChange={handleOldPassword} required/><br/>\n      <input type=\"password\" name=\"password\" className=\"text\" placeholder=\"confirm password\"\n          value={confirmPassword} onChange={handleNewPassword} required/><br/>\n      <label className=\"pwdmessage\">{pwdMessage}</label>\n      <input type=\"submit\" value={btnValue} className=\"pwdbtn\" onClick={handleClick}/>\n      </form>\n    </div>\n  );\n}\n\nfunction ChangePwd(props) {\n  const url = constant.pwdResetURL;\n  let message = '';\n  const dataText = { \"email\": props.email, \"password\": props.password}\n  const fetchResponse = usePost(url, dataText, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const response = fetchResponse.data;\n  if (response['status'] === 'success'){\n        message = constant.pwdResetSuccessMsg;\n  }\n  else{\n     message = constant.pwdResetFailedMsg;\n  }\n  return(`${message}`);\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from \"../headers/KwykHeader\";\nimport UserHeader from \"../headers/UserHeader\";\nimport '../static/css/error.css';\n\nfunction Page404() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-2\"></div>\n        <div className=\"col-sm-8 chatcolor\">\n            <Header />\n            <UserHeader/>\n            <Display404 />\n        </div>\n        <div className=\"col-sm-2\"></div>\n      </div>\n    </div>\n  );\n}\nfunction Display404() {\n  return(\n    <div className='error'>\n       <h2><div className='message'>Error: 404 - Page not found</div></h2>\n       <Link to='/topics'>\n       <div className='link'>Home</div>\n       </Link>\n    </div>\n  );\n}\n\nexport default Page404;\n","import React, {useState} from 'react';\nimport Header from \"../headers/KwykHeader\";\nimport '../static/css/contents.css';\nimport TopicSelectionScreen from \"./TopicSelectionScreen\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport AdminAccessDenied from '../components/AdminAccessDenied';\n\nfunction AdminScreen() {\n  let history = useHistory();\n  const location = useLocation();\n\n  if((sessionStorage.getItem('useremail') != null) && (sessionStorage.getItem('is_admin') === 'true')){\n        return <TopicSelection />\n  }\n  else{\n    if(sessionStorage.getItem('is_admin') === 'false'){\n      return <AdminAccessDenied />\n    }\n    const destinationPath = location.pathname\n    history.push({\n        pathname:`/`,\n        query: {destinationPath}\n      });\n    return null;\n  }\n}\nexport default AdminScreen;\n\nfunction TopicSelection(){\n    const [topic,setTopic] = useState(\"\");\n    const [subtopic,setSubTopic] = useState(\"\");\n    function getSelectedTopic(data){\n      setTopic(data);\n    }\n    function getSelectedSubTopic(data){\n      setSubTopic(data);\n    }\n    return(\n      <div className=\"container\">\n        <div className=\"row\">\n          <Header/>\n          <TopicSelectionScreen\n              getSelectedTopic={getSelectedTopic}\n              topic={topic}\n              getSelectedSubTopic={getSelectedSubTopic}\n              />\n          <DisplayButton topic={topic} subtopic={subtopic}/>\n        </div>\n      </div>\n    );\n}\n\nfunction DisplayButton(props){\n  let history = useHistory();\n  let buttonDisplay;\n  //const [buttonDisplay, setButtonDisplay] = useState(\"none\");\n  if(props.subtopic){\n    buttonDisplay =\"block\";\n  }\n  else{\n    buttonDisplay =\"none\";\n  }\n  function handleClick(e){\n      history.push({\n        pathname:'/admin/'+props.topic+'/'+props.subtopic\n      });\n  }\n  return(\n    <button className=\"start-button fixed-bottom\" value=\"start\"\n      onClick={handleClick} style={{display: buttonDisplay}}>Next</button>\n  );\n}\n","import React, {useState, useRef} from 'react';\nimport * as constant from '../components/Constants'\nimport useFetch from \"../hooks/useFetch\";\nimport '../static/css/contents.css';\nimport DisplayAlert from '../components/DisplayAlert';\nimport { useHistory } from \"react-router-dom\";\nimport SelectionButtons from '../components/SelectionButtons';\nimport Header from \"../headers/KwykHeader\";\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\nfunction SessionSelectionScreen() {\n  const urlSplit = window.location.href.split(\"/\")\n  const topic = urlSplit[urlSplit.length-2]\n  const subtopic = urlSplit[urlSplit.length-1]\n\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <Header/>\n        <div className=\"sessions\">\n          <div className=\"row topics-div\">\n            <DisplaySessions topic={topic} subtopic={subtopic}\n              styling={\"sessions-area\"}/>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SessionSelectionScreen;\n\nfunction DisplaySessions(props){\n  const [session,setSession] = useState(\"\");\n  function getSelectedSession(data){\n    setSession(data);\n  }\n  const url = constant.kwykURL+\"get/sessions/custom\";\n  const message = \"Please choose your session ...\"\n  const fetchResponse = useFetch(url, {isLoading: true, data: null, error: null});\n  if (fetchResponse.error){\n    return <DisplayAlert message={fetchResponse.error} />\n  }\n  else if ( fetchResponse.isLoading) {\n    return 'Loading...';\n  }\n  const sessions_details = fetchResponse.data\n  var sessions = []\n  for(var k in sessions_details){\n    sessions.push(sessions_details[k]['session_name']);\n  }\n  return (\n    <div className=\"subtopics\">\n     <div className=\"admin-session\">\n      <DisplayMessage message={message}/>\n      <SelectionButtons topics={sessions} getSelectedTopic={getSelectedSession}\n        styling={props.styling}/>\n      <ShowTestLink topic={props.topic} subtopic={props.subtopic}\n        session={getSessionSlug(sessions_details,session)}/>\n      </div>\n      <DisplayButton topic={props.topic} subtopic={props.subtopic} sessionname={session}\n          sessionslug={getSessionSlug(sessions_details,session)}\n          />\n    </div>\n  );\n}\n\nfunction DisplayMessage(props){\n  return(\n    <div className=\"info-text\">\n    <br />\n      {props.message}\n    </div>\n  );\n}\n\nfunction DisplayButton(props){\n  let history = useHistory();\n  let buttonDisplay;\n  //const [buttonDisplay, setButtonDisplay] = useState(\"none\");\n  if(props.subtopic){\n    buttonDisplay =\"block\";\n  }\n  else{\n    buttonDisplay =\"none\";\n  }\n  function handleClick(e){\n    let pathname = '';\n    if (props.sessionslug !== ''){\n      pathname='/insights/'+props.topic+'/'+props.subtopic+'/'+props.sessionslug\n    }\n    else{\n      pathname='/insights/'+props.topic+'/'+props.subtopic\n    }\n    history.push({\n      pathname:pathname\n    });\n\n      //history.push('/'+props.topic+'/'+props.subtopic);\n  }\n  return(\n    <button className=\"stats-button\" value=\"start\"\n      onClick={handleClick} style={{display: buttonDisplay}}>View Statistics</button>\n  );\n}\n\n\nfunction ShowTestLink(props) {\n  const [copySuccess, setCopySuccess] = useState('');\n  const textRef = useRef(null);\n  const basename = window.location.href.split(\"admin\")[0];\n  let url = '';\n  if(props.session){\n    url  = basename.split('#')[0]+'?session='+props.session+'/#/chat/'+props.topic+'/'+props.subtopic\n  }\n  else{\n    url  = basename+'chat/'+props.topic+'/'+props.subtopic\n  }\n\n  function handleClick(e) {\n    setCopySuccess('Copied!');\n  };\n\n  return(\n    <div className=\"row testlink\">\n      <div className = \"col-2 testlink\">\n      <label className=\"linklabel\"> Test Link:  </label>\n      </div>\n      <div className = \"col-10 testlink\">\n      <input type=\"text\" ref={textRef} name=\"email\" className=\"linktext\" value={url} placeholder={url}\n       disabled=\"disabled\" id=\"link\"/>\n       <CopyToClipboard text={url}>\n           <button className=\"linkbutton\" onClick={handleClick}>Copy</button>\n       </CopyToClipboard>\n       <span className=\"copytext\">{copySuccess}</span>\n      </div>\n    </div>\n  );\n}\n\nfunction getSessionSlug(sessions_details,session) {\n  for(var k in sessions_details){\n    if (sessions_details[k]['session_name'] === session){\n      return sessions_details[k]['session_slug'];\n    }\n  }\n  return \"\";\n}\n","import React from 'react';\nimport Header from \"../headers/KwykHeader\";\nimport UserHeader from \"../headers/UserHeader\";\nimport '../static/css/error.css';\n\nfunction Error() {\n  return(\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-lg-2\"></div>\n        <div className=\"col-lg-8 chatcolor\">\n            <Header />\n            <UserHeader/>\n            <DisplayError />\n        </div>\n        <div className=\"col-lg-2\"></div>\n      </div>\n    </div>\n  );\n}\nfunction DisplayError() {\n  return(\n    <div className='error'>\n       <h4><div className='message'>Wrong topic or subtopic. Please check your URL!</div></h4>\n    </div>\n  );\n}\n\nexport default Error;\n","import React, {useState} from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport DisplayTopic from '../screens/DisplayTopic';\nimport ChatBot from '../screens/ChatBot'\nimport UserStats from '../screens/UserStats'\nimport Responses from '../screens/Responses'\nimport Insights from '../screens/Insights'\nimport Login from \"../screens/Login\";\nimport Feedback from \"../screens/Feedback\";\nimport PasswordReset from './PasswordReset';\nimport Page404 from './Page404';\nimport AdminScreen from \"../screens/AdminScreen\"\nimport SessionSelectionScreen from \"../screens/SessionSelectionScreen\"\nimport Error from './Error';\n\nfunction Routes(){\n    return(\n      <Router  basename={`${process.env.PUBLIC_URL}/`}>\n      <Switch>\n      <Route path=\"/\" exact render={() => <Login/>} />\n      <Route path=\"/topics\" exact render={() => <DisplayTopic/>} />\n      <Route path=\"/reset\" exact render={() => <PasswordReset/>} />\n      <Route path=\"/chat/:topic/:subtopic\" render={() => <ChatBot/>} />\n      <Route path=\"/user_stats/:topic/:subtopic\" render={() => <UserStats/>} />\n      <Route path=\"/view_responses/:topic/:subtopic\" render={() => <Responses/>} />\n      <Route path=\"/feedback\" render={() => <Feedback/>} />\n      <Route path=\"/admin\" exact render={() => <AdminScreen/>} />\n      <Route path=\"/admin/:topic/:subtopic\" exact render={() => <SessionSelectionScreen/>} />\n      <Route path=\"/insights/:topic/:subtopic\" render={() =>\n                <Insights />} />\n      <Route path=\"/error\" render={() => <Error/>} />\n      <Route render={() => <Page404/>} />\n      </Switch>\n      </Router>\n    );\n}\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport Routes from './components/Routes';\n\nfunction App() {\n  return(\n    <Router >\n      <div className=\"App\">\n        <Routes />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/knowbotSVG.ae02fd80.svg\";"],"sourceRoot":""}